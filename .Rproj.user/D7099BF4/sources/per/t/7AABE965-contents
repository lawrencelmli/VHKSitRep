library(shiny)
library(shinyjs)
library(shinydashboard)
library(shinydashboardPlus)
library(tidyverse)
library(readxl)
library(stringr)
library(stringi)
library(knitr)
library(kableExtra)
library(lubridate)

ui <- dashboardPage(
  
  
  dashboardHeader(title = "VHK Situation Report"),
  dashboardSidebar(
    
    
    sidebarMenu(
      
      # fileInput("file1", "Upload SitREp Excel"),
      
      # div(style="display: inline-block;vertical-align:top; ", p("Date of SitRep: ")), 
      # div(style="display: inline-block;vertical-align:top; ", textOutput("date_of_report")),
      
      fileInput("file2", "Upload COVID-19 SitRep Excel"),
      
      div(style="display: inline-block;vertical-align:top; ", p("Date of COVID Report: ")), 
      div(style="display: inline-block;vertical-align:top; ", textOutput("COVID_date")),
      
      menuItem("How to Use", tabName = "instructions", icon = icon("book-open")),
      # 
      # menuItem("Night Capacity Report", tabName = "night_report", icon = icon("clipboard")),
      # 
      # menuItem("Safety Huddle", tabName = "safety", icon = icon("hard-hat")),
      # 
      # menuItem("08:30", tabName = "eight_thirty", icon = icon("clock")),
      # 
      # menuItem("13:00", tabName = "one_pm", icon = icon("clock")),
      # 
      # menuItem("17:00", tabName = "five_pm", icon = icon("clock")),
      # 
      # menuItem("19:00", tabName = "seven_pm", icon = icon("clock")),
      
      menuItem("CoViD-19", icon = icon("virus"), startExpanded = T,
               menuSubItem("Safety Huddle", tabName = "covid_safety", icon = icon("hard-hat")),
               menuSubItem("Night Capacity Report", tabName = "covid_night", icon = icon("clipboard")),
               menuSubItem("SG Report @ 10:00", tabName = "covid_SG", icon = icon("landmark")),
               menuSubItem("08:30", tabName = "covid_eight_thirty", icon = icon("clock")),
               menuSubItem("13:00", tabName = "covid_one_pm", icon = icon("clock")),
               menuSubItem("17:00", tabName = "covid_five_pm", icon = icon("clock")),
               menuSubItem("19:00", tabName = "covid_seven_pm", icon = icon("clock"))
               )
      
      ) #/sidebarMenu
    ), #/dashboardSidebar
  dashboardBody(
    
    tags$style("@import url(https://use.fontawesome.com/releases/v5.13.0/css/all.css);"), # to use the latest fontawesome icons
    tabItems(
      tabItem(tabName = "instructions", h3("How to Generate Reports"),
              p("To use this app, please upload the relevant Excel file using the upload buttons, 
                then click on the links to see the reports"),
              p("The reports during CoViD-19 period are found under the CoViD-19 menu on the left."),
              p("Copyright (c) Lawrence Li")
              ),
      
      tabItem(tabName = "night_report", h3("Night Capacity Report"),
              fluidRow(
                box(title = "EMERGENCY DEPARTMENT", width = 12, collapsible = T,
                    infoBoxOutput("nc_ed.1", width = 3),
                    infoBoxOutput("nc_ed.2", width = 3),
                    infoBoxOutput("nc_ed.3", width = 3),
                    infoBoxOutput("nc_ed.4", width = 3),
                    infoBoxOutput("nc_ed.5", width = 3),
                    infoBoxOutput("nc_ed.6", width = 3),
                    infoBoxOutput("nc_ed.7", width = 3),
                    infoBoxOutput("nc_ed.8", width = 3))
                ), #/fluidRow
              fluidRow(
                box(title = "MEDICINE", width = 9, collapsible = T, 
                    column(width = 3,
                           infoBoxOutput("med_compliment", width = NULL),
                           infoBoxOutput("med_empty", width = NULL),
                           infoBoxOutput("med_total_px", width = NULL),
                           infoBoxOutput("med_5d", width = NULL),
                           infoBoxOutput("med_boarders", width = NULL)
                      ),
                    column(width = 9, 
                           fluidRow(
                             valueBoxOutput("au1_night", width = 3),
                             valueBoxOutput("w13_night", width = 3),
                             valueBoxOutput("w9_night", width = 3)
                             ),
                           fluidRow(
                             valueBoxOutput("w22_night", width = 3),
                             valueBoxOutput("w23_night", width = 3)
                             ),
                           fluidRow(
                             valueBoxOutput("w32_night", width = 3),
                             valueBoxOutput("w33_night", width = 3),
                             valueBoxOutput("w34_night", width = 3)
                             ),
                           fluidRow(
                             valueBoxOutput("w41_night", width = 3),
                             valueBoxOutput("w42_night", width = 3),
                             valueBoxOutput("w43_night", width = 3),
                             valueBoxOutput("w44_night", width = 3)
                             ),
                           fluidRow(
                             valueBoxOutput("w51_night", width = 3),
                             valueBoxOutput("w54_night", width = 3)
                             )
                           )
                    ),
                
                box(title = "CRITICAL CARE", width = 3, collapsible = T,
                    infoBoxOutput("nc_icu", width = NULL),
                    infoBoxOutput("nc_shdu", width = NULL),
                    infoBoxOutput("nc_mhdu", width = NULL),
                    infoBoxOutput("nc_rhdu", width = NULL),
                    infoBoxOutput("nc_ccu", width = NULL)
                    ),
                
                box(title = "SURGERY", width = 6, collapsible = T,
                    column(width = 6,
                           infoBoxOutput("sx_compliment", width = NULL),
                           infoBoxOutput("sx_empty", width = NULL),
                           infoBoxOutput("sx_total_px", width = NULL),
                           infoBoxOutput("sx_5d", width = NULL),
                           infoBoxOutput("sx_boarders", width = NULL)
                           ),
                    column(width = 6, 
                           fluidRow(
                             valueBoxOutput("au2_night", width = 6),
                             valueBoxOutput("ent_night", width = 6),
                             valueBoxOutput("w10_night", width = 6),
                             valueBoxOutput("w9sx_night", width = 6)
                             ),
                           fluidRow(
                             valueBoxOutput("w52_night", width = 6),
                             valueBoxOutput("w53_night", width = 6),
                             valueBoxOutput("w54sx_night", width = 6)
                             )
                           )
                      ), #/box - Surgery
                box(title = "TRAUMA", width = 6, collapsible = T,
                    column(width = 6,
                           infoBoxOutput("trauma_compliment", width = NULL),
                           infoBoxOutput("trauma_empty", width = NULL),
                           infoBoxOutput("trauma_total_px", width = NULL),
                           infoBoxOutput("trauma_5d", width = NULL),
                           infoBoxOutput("trauma_boarders", width = NULL)
                    ),
                    column(width = 6, 
                           fluidRow(
                             valueBoxOutput("w31_night", width = 6),
                             valueBoxOutput("w33tx_night", width = 6)
                             )
                           )
                    ), #/box - Ortho
                box(title = "ADDITIONAL CAPACITY", width = 6, collapsible = T, collapsed = T,
                    infoBoxOutput("nc_add1", width = 6),
                    infoBoxOutput("nc_add2", width = 6),
                    infoBoxOutput("nc_add3", width = 6),
                    infoBoxOutput("nc_add4", width = 6),
                    infoBoxOutput("nc_add5", width = 6)
                    ),
                
                box(title = "OTHER/MISCELLANEOUS", width = 6, collapsible = T, collapsed = T,
                    infoBoxOutput("comments", width = 12),
                    htmlOutput("calls")
                    )
                
                ) #/FluidRow
              ), #/tabItem "night_report"
      
      tabItem(tabName = "safety", h3("Safety Huddle"),
              fluidRow(
                box(title = "SITE POSITION", collapsible = T, width = 6,
                    fluidRow(
                      infoBoxOutput("bed_occ", width = 6),
                      valueBoxOutput("occ_percent", width = 3)
                      ),
                    fluidRow(
                      infoBoxOutput("add_occ", width = 6),
                      valueBoxOutput("add_percent", width = 3))
                    ), #/box - SITE POSITION
                box(title = "HOSPITAL @ NIGHT", collapsible = T, width = 6,
                    infoBoxOutput("han1", width = 6),
                    infoBoxOutput("han4", width = 6),
                    infoBoxOutput("han2", width = 6),
                    infoBoxOutput("han5", width = 6),
                    infoBoxOutput("han3", width = 6),
                    infoBoxOutput("han6", width = 6)
                    )
                ), #/fluidRow
              fluidRow(
                box(title = "CAPACITY ACTIVITY", width = 12, collapsible = T,
                    fluidRow(
                      box(title = "Emergency Department", width = 6, collapsible = T,
                          infoBoxOutput("sh_ed1", width = 6),
                          infoBoxOutput("sh_ed2", width = 6),
                          valueBoxOutput("sh_ed3", width = 6)
                          ),
                      box(title = "Assessment Units", width = 6, collapsible = T,
                          column(width = 5,
                                 h4("AA Ax U"),
                                 infoBoxOutput("aa_present", width = 12),
                                 infoBoxOutput("aa_dc", width = 12)
                                 ),
                          column(width = 7,
                                 h4("Transfer Profile from AU One"),
                                 fluidRow(infoBoxOutput("aa_transfer1", width = 12)),
                                 fluidRow(infoBoxOutput("aa_transfer2", width = 12)),
                                 fluidRow(infoBoxOutput("aa_transfer3", width = 12))
                                 )
                          ) #/box Assessment Units
                      ),
                    fluidRow(
                      box(title = "Admissions", width = 3, collapsible = T,
                          infoBoxOutput("ec_admit", width = 12),
                          infoBoxOutput("pc_admit", width = 12)
                          ),
                      box(title = "Discharges", width = 9, collapsible = T,
                          infoBoxOutput("ec_dc1", width = 4),
                          valueBoxOutput("ec_dc2", width = 3),
                          valueBoxOutput("ec_dc3", width = 3),
                          infoBoxOutput("pc_dc1", width = 4),
                          valueBoxOutput("pc_dc2", width = 3),
                          valueBoxOutput("pc_dc3", width = 3),
                          column(width = 4),
                          infoBoxOutput("total_dc", width = 3)
                          )
                      )
                    
                    ) #/box "Capacity"
                )
              ), #/tabItem "safety"
      tabItem(tabName = "eight_thirty", h3("Situation Report at 8:30"),
              fluidRow(
                box(title = "OVERVIEW", width = 12, collapsible = T,
                    column(width = 4,
                           box(title = "Emergency Care", width = 12, collapsible = T,
                               infoBoxOutput("ec830_1", width = 12),
                               infoBoxOutput("ec830_2", width = 12),
                               infoBoxOutput("ec830_3", width = 12),
                               infoBoxOutput("ec830_4", width = 12),
                               infoBoxOutput("ec830_5", width = 12),
                               infoBoxOutput("ec830_6", width = 12),
                               infoBoxOutput("ec830_7", width = 12),
                               infoBoxOutput("ec830_8", width = 12)
                               )
                           ), #/column
                    column(width = 4,
                           box(title = "Planned Care", width = 12, collapsible = T,
                               infoBoxOutput("pc830_1", width = 12),
                               infoBoxOutput("pc830_2", width = 12),
                               infoBoxOutput("pc830_3", width = 12),
                               infoBoxOutput("pc830_4", width = 12),
                               infoBoxOutput("pc830_5", width = 12),
                               infoBoxOutput("pc830_6", width = 12),
                               infoBoxOutput("pc830_7", width = 12),
                               infoBoxOutput("pc830_8", width = 12)
                               )
                          ), #/column
                    column(width = 4,
                           box(title = "Totals", width = 12, collapsible = T,
                               infoBoxOutput("tot830_1", width = 12),
                               infoBoxOutput("tot830_2", width = 12),
                               infoBoxOutput("tot830_3", width = 12),
                               infoBoxOutput("tot830_4", width = 12),
                               infoBoxOutput("tot830_5", width = 12),
                               infoBoxOutput("tot830_6", width = 12),
                               infoBoxOutput("tot830_7", width = 12),
                               infoBoxOutput("tot830_8", width = 12)
                               )
                           )
                  ) #/ box - Summary
                ), #/fluidRow
              fluidRow(
                box(title = "EMERGENCY DEPARTMENT", width = 12, collapsible = T,
                    infoBoxOutput("ed830_1", width = 4),
                    infoBoxOutput("ed830_2", width = 4),
                    infoBoxOutput("ed830_3", width = 4),
                    infoBoxOutput("ed830_4", width = 4),
                    infoBoxOutput("ed830_5", width = 4),
                    infoBoxOutput("ed830_6", width = 4),
                    infoBoxOutput("ed830_7", width = 4),
                    infoBoxOutput("ed830_8", width = 4),
                    valueBoxOutput("ed830_9", width = 2)
                    ),
                
                box(title = "ASSESSMENT UNITS", width = 12, collapsible = T,
                    box(title = "AU One", width = 6, collapsible = T,
                        infoBoxOutput("au1_830_1", width = 6),
                        infoBoxOutput("au1_830_2", width = 6),
                        infoBoxOutput("au1_830_3", width = 6),
                        infoBoxOutput("au1_830_4", width = 6)
                        ),
                    box(title = "AU Two", width = 6, collapsible = T,
                        infoBoxOutput("au2_830_1", width = 6),
                        infoBoxOutput("au2_830_2", width = 6),
                        infoBoxOutput("au2_830_3", width = 6),
                        infoBoxOutput("au2_830_4", width = 6)
                        )
                    ),
                
                box(title = "CRITICAL CARE", width = 8, collapsible = T,
                    htmlOutput("cc830")
                    ),
                box(title = "Trauma List", width = 4, collapsible = T,
                    infoBoxOutput("trauma_830", width = 12)
                    )
                ),
              fluidRow(
                box(title = "FLOW", width = 12, collapsible = T,
                    box(title = "Medicine", width = 12, collapsible = T,
                        htmlOutput("med830")),
                    box(title = "Surgery and Trauma", width = 12, collapsible = T,
                        htmlOutput("sx830"),
                        htmlOutput("ot830")),
                    box(title = "Women & Children", width = 7, collapsible = T,
                        htmlOutput("wac830")),
                    box(title = "Additional Capacity", width = 5, collapsible = T,
                        htmlOutput("add830"))
                    )
                )
              
              ), #/tabItem "eight_thirty"
      tabItem(tabName = "one_pm", h3("Situation Report at 13:00"),
              fluidRow(
                box(title = "OVERVIEW", width = 12, collapsible = T,
                    column(width = 4,
                           box(title = "Emergency Care", width = 12, collapsible = T,
                               infoBoxOutput("ec1300_1", width = 12),
                               infoBoxOutput("ec1300_2", width = 12),
                               infoBoxOutput("ec1300_3", width = 12),
                               infoBoxOutput("ec1300_4", width = 12),
                               infoBoxOutput("ec1300_5", width = 12),
                               infoBoxOutput("ec1300_6", width = 12),
                               infoBoxOutput("ec1300_7", width = 12),
                               infoBoxOutput("ec1300_8", width = 12)
                           )
                    ), #/column
                    column(width = 4,
                           box(title = "Planned Care", width = 12, collapsible = T,
                               infoBoxOutput("pc1300_1", width = 12),
                               infoBoxOutput("pc1300_2", width = 12),
                               infoBoxOutput("pc1300_3", width = 12),
                               infoBoxOutput("pc1300_4", width = 12),
                               infoBoxOutput("pc1300_5", width = 12),
                               infoBoxOutput("pc1300_6", width = 12),
                               infoBoxOutput("pc1300_7", width = 12),
                               infoBoxOutput("pc1300_8", width = 12)
                           )
                    ), #/column
                    column(width = 4,
                           box(title = "Totals", width = 12, collapsible = T,
                               infoBoxOutput("tot1300_1", width = 12),
                               infoBoxOutput("tot1300_2", width = 12),
                               infoBoxOutput("tot1300_3", width = 12),
                               infoBoxOutput("tot1300_4", width = 12),
                               infoBoxOutput("tot1300_5", width = 12),
                               infoBoxOutput("tot1300_6", width = 12),
                               infoBoxOutput("tot1300_7", width = 12),
                               infoBoxOutput("tot1300_8", width = 12)
                           )
                    )
                ) #/ box - Summary
              ), #/fluidRow
              fluidRow(
                box(title = "EMERGENCY DEPARTMENT", width = 12, collapsible = T,
                    infoBoxOutput("ed1300_1", width = 4),
                    infoBoxOutput("ed1300_2", width = 4),
                    infoBoxOutput("ed1300_3", width = 4),
                    infoBoxOutput("ed1300_4", width = 4),
                    infoBoxOutput("ed1300_5", width = 4),
                    infoBoxOutput("ed1300_6", width = 4),
                    infoBoxOutput("ed1300_7", width = 4)
                ),
                
                box(title = "ASSESSMENT UNITS", width = 12, collapsible = T,
                    box(title = "AU One", width = 6, collapsible = T,
                        infoBoxOutput("au1_1300_1", width = 6),
                        infoBoxOutput("au1_1300_2", width = 6),
                        infoBoxOutput("au1_1300_3", width = 6),
                        infoBoxOutput("au1_1300_4", width = 6)
                    ),
                    box(title = "AU Two", width = 6, collapsible = T,
                        infoBoxOutput("au2_1300_1", width = 6),
                        infoBoxOutput("au2_1300_2", width = 6),
                        infoBoxOutput("au2_1300_3", width = 6),
                        infoBoxOutput("au2_1300_4", width = 6)
                    )
                ),
                
                box(title = "CRITICAL CARE", width = 8, collapsible = T,
                    htmlOutput("cc1300")
                )
              ),
              fluidRow(
                box(title = "FLOW", width = 12, collapsible = T,
                    box(title = "Medicine", width = 12, collapsible = T,
                        htmlOutput("med1300")),
                    box(title = "Surgery and Trauma", width = 12, collapsible = T,
                        htmlOutput("sx1300"),
                        htmlOutput("ot1300")),
                    box(title = "Additional Capacity", width = 5, collapsible = T,
                        htmlOutput("add1300"))
                )
              )
              
              
              ), #/tabItem "one_pm"
      tabItem(tabName = "five_pm", h3("Situation Report at 17:00"),
              fluidRow(
                box(title = "OVERVIEW", width = 12, collapsible = T,
                    column(width = 4,
                           box(title = "Emergency Care", width = 12, collapsible = T,
                               infoBoxOutput("ec1700_1", width = 12),
                               infoBoxOutput("ec1700_2", width = 12),
                               infoBoxOutput("ec1700_3", width = 12),
                               infoBoxOutput("ec1700_4", width = 12),
                               infoBoxOutput("ec1700_5", width = 12),
                               infoBoxOutput("ec1700_6", width = 12),
                               infoBoxOutput("ec1700_7", width = 12),
                               infoBoxOutput("ec1700_8", width = 12)
                           )
                    ), #/column
                    column(width = 4,
                           box(title = "Planned Care", width = 12, collapsible = T,
                               infoBoxOutput("pc1700_1", width = 12),
                               infoBoxOutput("pc1700_2", width = 12),
                               infoBoxOutput("pc1700_3", width = 12),
                               infoBoxOutput("pc1700_4", width = 12),
                               infoBoxOutput("pc1700_5", width = 12),
                               infoBoxOutput("pc1700_6", width = 12),
                               infoBoxOutput("pc1700_7", width = 12),
                               infoBoxOutput("pc1700_8", width = 12)
                           )
                    ), #/column
                    column(width = 4,
                           box(title = "Totals", width = 12, collapsible = T,
                               infoBoxOutput("tot1700_1", width = 12),
                               infoBoxOutput("tot1700_2", width = 12),
                               infoBoxOutput("tot1700_3", width = 12),
                               infoBoxOutput("tot1700_4", width = 12),
                               infoBoxOutput("tot1700_5", width = 12),
                               infoBoxOutput("tot1700_6", width = 12),
                               infoBoxOutput("tot1700_7", width = 12),
                               infoBoxOutput("tot1700_8", width = 12)
                           )
                    )
                ) #/ box - Summary
              ), #/fluidRow
              fluidRow(
                box(title = "EMERGENCY DEPARTMENT", width = 12, collapsible = T,
                    infoBoxOutput("ed1700_1", width = 4),
                    infoBoxOutput("ed1700_2", width = 4),
                    infoBoxOutput("ed1700_3", width = 4),
                    infoBoxOutput("ed1700_4", width = 4),
                    infoBoxOutput("ed1700_5", width = 4),
                    infoBoxOutput("ed1700_6", width = 4),
                    infoBoxOutput("ed1700_7", width = 4)
                ),
                
                box(title = "ASSESSMENT UNITS", width = 12, collapsible = T,
                    box(title = "AU One", width = 6, collapsible = T,
                        infoBoxOutput("au1_1700_1", width = 6),
                        infoBoxOutput("au1_1700_2", width = 6),
                        infoBoxOutput("au1_1700_3", width = 6),
                        infoBoxOutput("au1_1700_4", width = 6)
                    ),
                    box(title = "AU Two", width = 6, collapsible = T,
                        infoBoxOutput("au2_1700_1", width = 6),
                        infoBoxOutput("au2_1700_2", width = 6),
                        infoBoxOutput("au2_1700_3", width = 6),
                        infoBoxOutput("au2_1700_4", width = 6)
                    )
                ),
                
                box(title = "CRITICAL CARE", width = 8, collapsible = T,
                    htmlOutput("cc1700")
                )
              ),
              fluidRow(
                box(title = "FLOW", width = 12, collapsible = T,
                    box(title = "Medicine", width = 12, collapsible = T,
                        htmlOutput("med1700")),
                    box(title = "Surgery and Trauma", width = 12, collapsible = T,
                        htmlOutput("sx1700"),
                        htmlOutput("ot1700")),
                    box(title = "Additional Capacity", width = 5, collapsible = T,
                        htmlOutput("add1700"))
                )
              )
      ), #/tabItem "five_pm"
      tabItem(tabName = "seven_pm", h3("Situation Report at 19:00"),
              fluidRow(
                box(title = "OVERVIEW", width = 12, collapsible = T,
                    column(width = 4,
                           box(title = "Emergency Care", width = 12, collapsible = T,
                               infoBoxOutput("ec1900_1", width = 12),
                               infoBoxOutput("ec1900_2", width = 12),
                               infoBoxOutput("ec1900_3", width = 12),
                               infoBoxOutput("ec1900_4", width = 12),
                               infoBoxOutput("ec1900_5", width = 12),
                               infoBoxOutput("ec1900_6", width = 12),
                               infoBoxOutput("ec1900_7", width = 12),
                               infoBoxOutput("ec1900_8", width = 12)
                           )
                    ), #/column
                    column(width = 4,
                           box(title = "Planned Care", width = 12, collapsible = T,
                               infoBoxOutput("pc1900_1", width = 12),
                               infoBoxOutput("pc1900_2", width = 12),
                               infoBoxOutput("pc1900_3", width = 12),
                               infoBoxOutput("pc1900_4", width = 12),
                               infoBoxOutput("pc1900_5", width = 12),
                               infoBoxOutput("pc1900_6", width = 12),
                               infoBoxOutput("pc1900_7", width = 12),
                               infoBoxOutput("pc1900_8", width = 12)
                           )
                    ), #/column
                    column(width = 4,
                           box(title = "Totals", width = 12, collapsible = T,
                               infoBoxOutput("tot1900_1", width = 12),
                               infoBoxOutput("tot1900_2", width = 12),
                               infoBoxOutput("tot1900_3", width = 12),
                               infoBoxOutput("tot1900_4", width = 12),
                               infoBoxOutput("tot1900_5", width = 12),
                               infoBoxOutput("tot1900_6", width = 12),
                               infoBoxOutput("tot1900_7", width = 12),
                               infoBoxOutput("tot1900_8", width = 12)
                           )
                    )
                ) #/ box - Summary
              ), #/fluidRow
              fluidRow(
                box(title = "EMERGENCY DEPARTMENT", width = 12, collapsible = T,
                    infoBoxOutput("ed1900_1", width = 4),
                    infoBoxOutput("ed1900_2", width = 4),
                    infoBoxOutput("ed1900_3", width = 4),
                    infoBoxOutput("ed1900_4", width = 4),
                    infoBoxOutput("ed1900_5", width = 4),
                    infoBoxOutput("ed1900_6", width = 4),
                    infoBoxOutput("ed1900_7", width = 4)
                ),
                
                box(title = "ASSESSMENT UNITS", width = 12, collapsible = T,
                    box(title = "AU One", width = 6, collapsible = T,
                        infoBoxOutput("au1_1900_1", width = 6),
                        infoBoxOutput("au1_1900_2", width = 6),
                        infoBoxOutput("au1_1900_3", width = 6),
                        infoBoxOutput("au1_1900_4", width = 6)
                    ),
                    box(title = "AU Two", width = 6, collapsible = T,
                        infoBoxOutput("au2_1900_1", width = 6),
                        infoBoxOutput("au2_1900_2", width = 6),
                        infoBoxOutput("au2_1900_3", width = 6),
                        infoBoxOutput("au2_1900_4", width = 6)
                    )
                ),
                
                box(title = "CRITICAL CARE", width = 8, collapsible = T,
                    htmlOutput("cc1900")
                )
              ),
              fluidRow(
                box(title = "FLOW", width = 12, collapsible = T,
                    box(title = "Medicine", width = 12, collapsible = T,
                        htmlOutput("med1900")),
                    box(title = "Surgery and Trauma", width = 12, collapsible = T,
                        htmlOutput("sx1900"),
                        htmlOutput("ot1900")),
                    box(title = "Additional Capacity", width = 5, collapsible = T,
                        htmlOutput("add1900"))
                )
              )
              
      
              
              ), #/tabItem "seven_pm"
      

# COVID ui section --------------------------------------------------------

      
      
      tabItem(tabName = "covid_night", h3("Night Capacity Report COVID-19"),
              fluidRow(column(width = 4,
                     box(title = "CAPACITY OVERVIEW", width = 12, collapsible = T,
                         infoBoxOutput("nrc_electives", width = 12),
                         infoBoxOutput("nrc_predicted", width = 12),
                         infoBoxOutput("nrc_total", width = 12),
                         infoBoxOutput("nrc_admissions", width = 12),
                         infoBoxOutput("nrc_remain", width = 12),
                         infoBoxOutput("nrc_dc_expected", width = 12),
                         infoBoxOutput("nrc_balance", width = 12),
                         )
                     ),
              column(width = 8,  
                     box(title = "EMERGENCY DEPARTMENT", width = 12, collapsible = T,
                         infoBoxOutput("nrc_ED_1", width = 4),
                         infoBoxOutput("nrc_ED_2", width = 4),
                         infoBoxOutput("nrc_ED_3", width = 4),
                         infoBoxOutput("nrc_ED_4", width = 4),
                         infoBoxOutput("nrc_ED_5", width = 4),
                         infoBoxOutput("nrc_ED_6", width = 4)
                         ),
                     box(title = "ACUTE ADMISSION ASSESSMENT", width = 12, collapsible = T,
                         infoBoxOutput("nrc_aa_1", width = 4),
                         infoBoxOutput("nrc_aa_2", width = 4),
                         infoBoxOutput("nrc_aa_3", width = 4),
                         infoBoxOutput("nrc_aa_4", width = 4),
                         infoBoxOutput("nrc_aa_5", width = 4)
                         )
                     ),
              
                box(title = "CAPACITY & FLOW", width = 12, collapsible = T,
                    fluidRow(
                      box(title = "Critical Care", width = 12, collapsible = T,
                          column(width = 6,
                                 box(title = "Red", background = "red", width = 12,
                                     htmlOutput("nrc_red_cc")
                                     )
                                 ),
                          column(width = 6,
                                 box(title = "Green", background = "green", width = 12,
                                     htmlOutput("nrc_green_cc")
                                     )
                                 )
                          ),
                      box(title = "Adult Capacity", width = 12, collapsible = T,
                          column(width = 6,
                                 box(title = "Red", background = "red", width = 12,
                                     htmlOutput("nrc_red_adult")
                                 )
                          ),
                          column(width = 6,
                                 box(title = "Green", background = "green", width = 12,
                                     htmlOutput("nrc_green_adult")
                                 )
                          )
                          
                          ),
                      
                      box(title = "Women & Children", width = 12, collapsible = T,
                          column(width = 6,
                                 box(title = "Red", background = "red", width = 12,
                                     htmlOutput("nrc_red_wac")
                                 )
                          ),
                          column(width = 6,
                                 box(title = "Green", background = "green", width = 12,
                                     htmlOutput("nrc_green_wac")
                                 )
                          )
                          
                          )
                      
                      )
                    )
              )
              ), #/"Night Report COVID-19"
      
      tabItem(tabName = "covid_safety", h3("Safety Huddle COVID-19"),
              
              fluidRow(
                box(width = 5, title = "CARE & TREATMENT CONCERNS", collapsible = T, 
                    htmlOutput("shc_care_con")
                    ),
                box(width = 7, title = "SUPPORT SERVICES", collapsible = T, 
                    column(width = 6,
                           infoBoxOutput("shc_ss1", width = 12),
                           infoBoxOutput("shc_ss2", width = 12),
                           infoBoxOutput("shc_ss3", width = 12),
                           infoBoxOutput("shc_ss4", width = 12)
                           ),
                    column(width = 6,
                           infoBoxOutput("shc_ss5", width = 12),
                           infoBoxOutput("shc_ss6", width = 12),
                           infoBoxOutput("shc_ss7", width = 12)
                           )#/column
                    )
                ) #/fluidRow
                
              
                
              
              ), #/tabItem "safety COVID-19"
      
      tabItem(tabName = "covid_SG", h3("Scottish Government Reporting - FOR CONTROL ROOM USE"),
              br(),
              p("This information is populated from the 'Night Report' tab within the sitrep"),
              strong(p("**This will need to be updated and checked every time there is a ward move")),
              
              fluidRow(
                fluidRow(
                  box(title = "Acute Beds Available", width = 6, collapsible = T,
                    p("Unoccupied substantive staffed beds, excluding critical care, 
                      including wards currently closed as capacity not required"),
                    column(width = 8,
                           infoBoxOutput("sg1", width = 12),
                           infoBoxOutput("sg2", width = 12),
                           infoBoxOutput("sg3", width = 12),
                           ),
                    column(width = 4,
                           valueBoxOutput("sg4", width = 12)
                           )
                    
                    ), #/box
                
                box(title = "COVID-19 Designated Beds Available", width = 6, collapsible = T,
                    p("Unoccupied staffed beds"),
                    column(width = 8,
                           infoBoxOutput("sg5", width = 12),
                           infoBoxOutput("sg6", width = 12)
                           ),
                    column(width = 4,
                           valueBoxOutput("sg7", width = 12)
                           )
                    ) #/box
                ), 
                
                fluidRow(
                  box(title = "Critical Care Beds OCCUPIED", width = 6, collapsible = T,
                    p("Level 2 – CCU/MHDU/SHDU/RHDU"),
                    column(width = 8,
                           infoBoxOutput("sg8", width = 12),
                           infoBoxOutput("sg9", width = 12)
                    ),
                    column(width = 4,
                           valueBoxOutput("sg10", width = 12)
                    )
                ), #/box
                
                box(title = "Critical Care Beds AVAILABLE", width = 6, collapsible = T,
                    p("Level 2 – CCU/MHDU/SHDU/RHDU"),
                    column(width = 8,
                           infoBoxOutput("sg11", width = 12),
                           infoBoxOutput("sg12", width = 12)
                    ),
                    column(width = 4,
                           valueBoxOutput("sg13", width = 12)
                    )
                ), #/box
                
                box(title = "ITU Beds OCCUPIED", width = 6, collapsible = T,
                    p("Level 3 - Ventilated Beds"),
                    column(width = 8,
                           infoBoxOutput("sg14", width = 12),
                           infoBoxOutput("sg15", width = 12)
                    ),
                    column(width = 4,
                           valueBoxOutput("sg16", width = 12)
                    )
                ), #/box
                
                box(title = "ITU Beds AVAILABLE", width = 6, collapsible = T,
                    p("Level 3 - Ventilated Beds"),
                    column(width = 8,
                           infoBoxOutput("sg17", width = 12),
                           infoBoxOutput("sg18", width = 12)
                    ),
                    column(width = 4,
                           valueBoxOutput("sg19", width = 12)
                    )
                  ) #/box
                 )
                ) #/fluidRow
              
              ),
      
      tabItem(tabName = "covid_eight_thirty", h3("Situation Report at 08:30 COVID-19"),
              
              fluidRow(column(width = 4,
                              box(title = "CAPACITY OVERVIEW", width = 12, collapsible = T,
                                  infoBoxOutput("c830_electives", width = 12),
                                  infoBoxOutput("c830_predicted", width = 12),
                                  infoBoxOutput("c830_total", width = 12),
                                  infoBoxOutput("c830_admissions", width = 12),
                                  infoBoxOutput("c830_remain", width = 12),
                                  infoBoxOutput("c830_dc_expected", width = 12),
                                  infoBoxOutput("c830_balance", width = 12),
                              )
              ),
              column(width = 8,  
                     box(title = "EMERGENCY DEPARTMENT", width = 12, collapsible = T,
                         infoBoxOutput("c830_ED_1", width = 4),
                         infoBoxOutput("c830_ED_2", width = 4),
                         infoBoxOutput("c830_ED_3", width = 4),
                         infoBoxOutput("c830_ED_4", width = 4),
                         infoBoxOutput("c830_ED_5", width = 4),
                         infoBoxOutput("c830_ED_6", width = 4)
                     ),
                     box(title = "ACUTE ADMISSION ASSESSMENT", width = 12, collapsible = T,
                         infoBoxOutput("c830_aa_1", width = 4),
                         infoBoxOutput("c830_aa_2", width = 4),
                         infoBoxOutput("c830_aa_3", width = 4),
                         infoBoxOutput("c830_aa_4", width = 4),
                         infoBoxOutput("c830_aa_5", width = 4)
                     )
              ),
              
              box(title = "CAPACITY & FLOW", width = 12, collapsible = T,
                  fluidRow(
                    box(title = "Critical Care", width = 12, collapsible = T,
                        column(width = 6,
                               box(title = "Red", background = "red", width = 12,
                                   htmlOutput("c830_red_cc")
                               )
                        ),
                        column(width = 6,
                               box(title = "Green", background = "green", width = 12,
                                   htmlOutput("c830_green_cc")
                               )
                        )
                    ),
                    box(title = "Adult Capacity", width = 12, collapsible = T,
                        column(width = 6,
                               box(title = "Red", background = "red", width = 12,
                                   htmlOutput("c830_red_adult")
                               )
                        ),
                        column(width = 6,
                               box(title = "Green", background = "green", width = 12,
                                   htmlOutput("c830_green_adult")
                               )
                        )
                        
                    ),
                    
                    box(title = "Women & Children", width = 12, collapsible = T,
                        column(width = 6,
                               box(title = "Red", background = "red", width = 12,
                                   htmlOutput("c830_red_wac")
                               )
                        ),
                        column(width = 6,
                               box(title = "Green", background = "green", width = 12,
                                   htmlOutput("c830_green_wac")
                               )
                        )
                        
                    )
                    
                  )
              )
              )
              ), #/tabItem "eight_thirty COVID-19"
      tabItem(tabName = "covid_one_pm", h3("Situation Report at 13:00 COVID-19"),
              fluidRow(column(width = 4,
                              box(title = "CAPACITY OVERVIEW", width = 12, collapsible = T,
                                  infoBoxOutput("c1300_electives", width = 12),
                                  infoBoxOutput("c1300_predicted", width = 12),
                                  infoBoxOutput("c1300_total", width = 12),
                                  infoBoxOutput("c1300_admissions", width = 12),
                                  infoBoxOutput("c1300_remain", width = 12),
                                  infoBoxOutput("c1300_dc_expected", width = 12),
                                  infoBoxOutput("c1300_balance", width = 12),
                              )
              ),
              column(width = 8,  
                     box(title = "EMERGENCY DEPARTMENT", width = 12, collapsible = T,
                         infoBoxOutput("c1300_ED_1", width = 4),
                         infoBoxOutput("c1300_ED_2", width = 4),
                         infoBoxOutput("c1300_ED_3", width = 4),
                         infoBoxOutput("c1300_ED_4", width = 4),
                         infoBoxOutput("c1300_ED_5", width = 4),
                         infoBoxOutput("c1300_ED_6", width = 4)
                     ),
                     box(title = "ACUTE ADMISSION ASSESSMENT", width = 12, collapsible = T,
                         infoBoxOutput("c1300_aa_1", width = 4),
                         infoBoxOutput("c1300_aa_2", width = 4),
                         infoBoxOutput("c1300_aa_3", width = 4),
                         infoBoxOutput("c1300_aa_4", width = 4),
                         infoBoxOutput("c1300_aa_5", width = 4)
                     )
              ),
              
              box(title = "CAPACITY & FLOW", width = 12, collapsible = T,
                  fluidRow(
                    box(title = "Critical Care", width = 12, collapsible = T,
                        column(width = 6,
                               box(title = "Red", background = "red", width = 12,
                                   htmlOutput("c1300_red_cc")
                               )
                        ),
                        column(width = 6,
                               box(title = "Green", background = "green", width = 12,
                                   htmlOutput("c1300_green_cc")
                               )
                        )
                    ),
                    box(title = "Adult Capacity", width = 12, collapsible = T,
                        column(width = 6,
                               box(title = "Red", background = "red", width = 12,
                                   htmlOutput("c1300_red_adult")
                               )
                        ),
                        column(width = 6,
                               box(title = "Green", background = "green", width = 12,
                                   htmlOutput("c1300_green_adult")
                               )
                        )
                        
                    ),
                    
                    box(title = "Women & Children", width = 12, collapsible = T,
                        column(width = 6,
                               box(title = "Red", background = "red", width = 12,
                                   htmlOutput("c1300_red_wac")
                               )
                        ),
                        column(width = 6,
                               box(title = "Green", background = "green", width = 12,
                                   htmlOutput("c1300_green_wac")
                               )
                        )
                        
                    )
                    
                  )
              )
              )
              ), #/tabItem "one_pm COVID-19"
      tabItem(tabName = "covid_five_pm", h3("Situation Report at 17:00 COVID-19"),
              fluidRow(column(width = 4,
                              box(title = "CAPACITY OVERVIEW", width = 12, collapsible = T,
                                  infoBoxOutput("c1700_electives", width = 12),
                                  infoBoxOutput("c1700_predicted", width = 12),
                                  infoBoxOutput("c1700_total", width = 12),
                                  infoBoxOutput("c1700_admissions", width = 12),
                                  infoBoxOutput("c1700_remain", width = 12),
                                  infoBoxOutput("c1700_dc_expected", width = 12),
                                  infoBoxOutput("c1700_balance", width = 12),
                              )
              ),
              column(width = 8,  
                     box(title = "EMERGENCY DEPARTMENT", width = 12, collapsible = T,
                         infoBoxOutput("c1700_ED_1", width = 4),
                         infoBoxOutput("c1700_ED_2", width = 4),
                         infoBoxOutput("c1700_ED_3", width = 4),
                         infoBoxOutput("c1700_ED_4", width = 4),
                         infoBoxOutput("c1700_ED_5", width = 4),
                         infoBoxOutput("c1700_ED_6", width = 4)
                     ),
                     box(title = "ACUTE ADMISSION ASSESSMENT", width = 12, collapsible = T,
                         infoBoxOutput("c1700_aa_1", width = 4),
                         infoBoxOutput("c1700_aa_2", width = 4),
                         infoBoxOutput("c1700_aa_3", width = 4),
                         infoBoxOutput("c1700_aa_4", width = 4),
                         infoBoxOutput("c1700_aa_5", width = 4)
                     )
              ),
              
              box(title = "CAPACITY & FLOW", width = 12, collapsible = T,
                  fluidRow(
                    box(title = "Critical Care", width = 12, collapsible = T,
                        column(width = 6,
                               box(title = "Red", background = "red", width = 12,
                                   htmlOutput("c1700_red_cc")
                               )
                        ),
                        column(width = 6,
                               box(title = "Green", background = "green", width = 12,
                                   htmlOutput("c1700_green_cc")
                               )
                        )
                    ),
                    box(title = "Adult Capacity", width = 12, collapsible = T,
                        column(width = 6,
                               box(title = "Red", background = "red", width = 12,
                                   htmlOutput("c1700_red_adult")
                               )
                        ),
                        column(width = 6,
                               box(title = "Green", background = "green", width = 12,
                                   htmlOutput("c1700_green_adult")
                               )
                        )
                        
                    ),
                    
                    box(title = "Women & Children", width = 12, collapsible = T,
                        column(width = 6,
                               box(title = "Red", background = "red", width = 12,
                                   htmlOutput("c1700_red_wac")
                               )
                        ),
                        column(width = 6,
                               box(title = "Green", background = "green", width = 12,
                                   htmlOutput("c1700_green_wac")
                               )
                        )
                        
                    )
                    
                  )
              )
              )
              
              ), #/tabItem "five_pm" COVID-19
      tabItem(tabName = "covid_seven_pm", h3("Situation Report at 19:00 COVID-19"),
              fluidRow(column(width = 4,
                              box(title = "CAPACITY OVERVIEW", width = 12, collapsible = T,
                                  infoBoxOutput("c1900_electives", width = 12),
                                  infoBoxOutput("c1900_predicted", width = 12),
                                  infoBoxOutput("c1900_total", width = 12),
                                  infoBoxOutput("c1900_admissions", width = 12),
                                  infoBoxOutput("c1900_remain", width = 12),
                                  infoBoxOutput("c1900_dc_expected", width = 12),
                                  infoBoxOutput("c1900_balance", width = 12),
                              )
              ),
              column(width = 8,  
                     box(title = "EMERGENCY DEPARTMENT", width = 12, collapsible = T,
                         infoBoxOutput("c1900_ED_1", width = 4),
                         infoBoxOutput("c1900_ED_2", width = 4),
                         infoBoxOutput("c1900_ED_3", width = 4),
                         infoBoxOutput("c1900_ED_4", width = 4),
                         infoBoxOutput("c1900_ED_5", width = 4),
                         infoBoxOutput("c1900_ED_6", width = 4)
                     ),
                     box(title = "ACUTE ADMISSION ASSESSMENT", width = 12, collapsible = T,
                         infoBoxOutput("c1900_aa_1", width = 4),
                         infoBoxOutput("c1900_aa_2", width = 4),
                         infoBoxOutput("c1900_aa_3", width = 4),
                         infoBoxOutput("c1900_aa_4", width = 4),
                         infoBoxOutput("c1900_aa_5", width = 4)
                     )
              ),
              
              box(title = "CAPACITY & FLOW", width = 12, collapsible = T,
                  fluidRow(
                    box(title = "Critical Care", width = 12, collapsible = T,
                        column(width = 6,
                               box(title = "Red", background = "red", width = 12,
                                   htmlOutput("c1900_red_cc")
                               )
                        ),
                        column(width = 6,
                               box(title = "Green", background = "green", width = 12,
                                   htmlOutput("c1900_green_cc")
                               )
                        )
                    ),
                    box(title = "Adult Capacity", width = 12, collapsible = T,
                        column(width = 6,
                               box(title = "Red", background = "red", width = 12,
                                   htmlOutput("c1900_red_adult")
                               )
                        ),
                        column(width = 6,
                               box(title = "Green", background = "green", width = 12,
                                   htmlOutput("c1900_green_adult")
                               )
                        )
                        
                    ),
                    
                    box(title = "Women & Children", width = 12, collapsible = T,
                        column(width = 6,
                               box(title = "Red", background = "red", width = 12,
                                   htmlOutput("c1900_red_wac")
                               )
                        ),
                        column(width = 6,
                               box(title = "Green", background = "green", width = 12,
                                   htmlOutput("c1900_green_wac")
                               )
                        )
                        
                    )
                    
                  )
              )
              )
      )
    ) #/tabItems
  ) #/dashboardBody
) #/dashboardPage


# SERVER ------------------------------------------------------------------

server <- function(input, output){
  
  colour_numbers <- function(x){
    if (x > 0){
      colour <- "red"
    }else{
      colour <- "light-blue"
    }
    return(colour)
  }
  
  colour_breaches <- function(x){
    if (x > 0){
      colour <- "purple"
    }else{
      colour <- "green"
    }
    return(colour)
  }
  
  colour_rn <- function(x){
    if (x > 0){
      colour <- "red"
    }else{
      colour <- "green"
    }
    return(colour)
  }
  
  colour_safe <- function(x){
    if(x == "Yes" | x == "Y" | x == "yes" | x == "y" | x == "YES"){
      colour <- "green"
    }else{
      colour <- "red"
    }
    return(colour)
  }
  
  reportDate <- reactive({
    
    req(input$file1)
    
    report_date <- read_excel(input$file1$datapath, sheet = 1, range = "G3", col_names = F)
    
    report_date <- report_date[[1]]
    
    if(is.character(report_date) == F){
      report_date <- as.character(report_date)
    }else{
      report_date < report_date
    }
    
    return(report_date)
  })
  
  output$date_of_report <- renderText({
    reportDate()
  })
  
  night_patients <- reactive({
    req(input$file1)
    
    patients <- read_excel(input$file1$datapath, sheet = 1, range = "J13:M15", col_names = F)
    
    colnames(patients) <- c("Specialty", "Total", "Five_Days", "Boarders")
    
    return(patients)
  })
  
  ED_summary <- reactive({
    req(input$file1)
    
    ed <- read_excel(input$file1$datapath, sheet = 1, range = "F8:M8", col_names = F)
    
    colnames(ed) <- c("Total",
                      "Longest",
                      "Time_to_Assess",
                      "Three_hours",
                      "DTA",
                      "Breaches",
                      "EMOU",
                      "Attendence")
    
    if(is.character(ed$Longest) == F){
      ed$Longest <- format(ed$Longest, "%T")
    }else{
      ed$Longest < ed$Longest
    }
    
    if(is.character(ed$Time_to_Assess) == F){
      ed$Time_to_Assess <- format(ed$Time_to_Assess, "%T")
    }else{
      ed$Time_to_Assess < ed$Time_to_Assess
    }
    
    
    return(ed)
  })
  
   output$nc_ed.1 <- renderInfoBox({
     infoBox(title = "Total No. in ED", value = ED_summary()[1,1], color = "navy", icon = icon("clipboard"))
   })
   
   output$nc_ed.2 <- renderInfoBox({
     infoBox(title = "Longest Wait", value = ED_summary()[1,2], color = "yellow", icon = icon("clock"))
   })
   
   output$nc_ed.3 <- renderInfoBox({
     infoBox(title = "Longest Time to Assessment", value = ED_summary()[1,3], color = "yellow", icon = icon("stopwatch"))
   })
   
   output$nc_ed.4 <- renderInfoBox({
     
     colour <- function(x){
       if(x > 0){
         colour <- "red"
       }else{
         colour <- "green"
       }
       return(colour)
     }
     
     infoBox(title = "Patients more than 3 hours", value = ED_summary()[1,4], color = colour(ED_summary()[1,4]), icon = icon("exclamation-triangle"))
   })
   
   output$nc_ed.5 <- renderInfoBox({
     
     colour <- function(x){
       if(x > 0){
         colour <- "purple"
       }else{
         colour <- "green"
       }
       return(colour)
     }
     
     infoBox(title = "No. with DTA", value = ED_summary()[1,5], color = colour(ED_summary()[1,5]), icon = icon("hospital"))
   })
   
   output$nc_ed.6 <- renderInfoBox({
     
     colour <- function(x){
       if(x > 0){
         colour <- "purple"
       }else{
         colour <- "green"
       }
       return(colour)
     }
     
     infoBox(title = "Breaches since Midnight", value = ED_summary()[1,6], color = colour(ED_summary()[1,6]), icon = icon("stopwatch"))
   })
   
   output$nc_ed.7 <- renderInfoBox({
     infoBox(title = "No. of patients in EMOU", value = paste0(ED_summary()[1,7], "/6 Beds"), color = "navy", icon = icon("procedures"))
   })
   
   output$nc_ed.8 <- renderInfoBox({
     infoBox(title = "Attendances since Midnight", value = ED_summary()[1,8], color = "navy", icon = icon("ambulance"))
   })
   
   
   
  
  colour_empty_night <- reactive({
    if(night_medicine()[[15, 3]] >= 20){
      colour <- "green"
    }else if(night_medicine()[[15, 3]] >= 10 & night_medicine()[[15, 3]] < 20){
      colour <- "yellow"
    }else if(night_medicine()[[15, 3]] < 10){
      colour <- "red"
    }
    
    return(colour)
  })
  
  colour_empty_ward <- function(x) {
    cut(as.numeric(x), breaks=c(-Inf, 1, 3, Inf), labels=c("red","yellow","green"), right = FALSE)
  }

# Normal Night Capacity_Medicine ------------------------------------------

  night_medicine <- reactive({
    
    req(input$file1)
    
    medicine <- read_excel(input$file1$datapath, sheet = 1, range = "A8:C21", col_names = F)
    
    colnames(medicine) <- c("Ward", "Compliment", "Empty")
    
    total_med <- c("Total",
                   colSums(medicine[, 2]), 
                   colSums(medicine[, 3]))
    
    medicine <- rbind(medicine, total_med)
    
    return(medicine)
  })
  
  output$med_compliment <- renderInfoBox({
    infoBox(
      "Bed Compliment", night_medicine()[[15, 2]], icon = icon("hospital"),
      color = "blue"
    )
  })
  
  
  output$med_empty <- renderInfoBox({
    infoBox(
      "Empty Beds", night_medicine()[[15, 3]], icon = icon("bed"),
      color = colour_empty_night()
    )
  })
  
  output$med_total_px <- renderInfoBox({
    infoBox(
      "Total Patients", night_patients()[[1, 2]], icon = icon("hospital-user"),
      color = "blue"
    )
  })
  
  output$med_5d <- renderInfoBox({
    infoBox(
      "No. more than 5 Days", night_patients()[[1, 3]], icon = icon("calendar-day"),
      color = "red"
    )
  })
  
  output$med_boarders <- renderInfoBox({
    infoBox(
      "No. Boarded Yesterday", night_patients()[[1, 4]], icon = icon("passport"),
      color = "red"
    )
  })
  
  output$au1_night <- renderValueBox({
    
    valueBox(
      tags$h3("AU 1", style = "font-size: 150%;"), paste0(night_medicine()[[1,3]], "/", night_medicine()[[1,2]], " Available"), icon = icon("bed"),
      color = colour_empty_ward(night_medicine()[[1,3]])
    )
  })
  
  output$w13_night <- renderValueBox({
    valueBox(
      tags$h3("Ward 13", style = "font-size: 150%;"), paste0(night_medicine()[[2,3]], "/", night_medicine()[[2,2]], " Available"), icon = icon("bed"),
      color = colour_empty_ward(night_medicine()[[2,3]])
    )
  })
  
  output$w9_night <- renderValueBox({
    valueBox(
      tags$h3("Ward 9", style = "font-size: 150%;"), paste0(night_medicine()[[3,3]], "/", night_medicine()[[3,2]], " Available"), icon = icon("bed"),
      color = colour_empty_ward(night_medicine()[[3,3]])
    )
  })
  
  output$w22_night <- renderValueBox({
    valueBox(
      tags$h3("Ward 22", style = "font-size: 150%;"), paste0(night_medicine()[[4,3]], "/", night_medicine()[[4,2]], " Available"), icon = icon("bed"),
      color = colour_empty_ward(night_medicine()[[4,3]])
    )
  })
  
  output$w23_night <- renderValueBox({
    valueBox(
      tags$h3("Ward 23", style = "font-size: 150%;"), paste0(night_medicine()[[5,3]], "/", night_medicine()[[5,2]], " Available"), icon = icon("bed"),
      color = colour_empty_ward(night_medicine()[[5,3]])
    )
  })
  
  output$w32_night <- renderValueBox({
    valueBox(
      tags$h3("Ward 32", style = "font-size: 150%;"), paste0(night_medicine()[[6,3]], "/", night_medicine()[[6,2]], " Available"), icon = icon("bed"),
      color = colour_empty_ward(night_medicine()[[6,3]])
    )
  })
  
  output$w33_night <- renderValueBox({
    valueBox(
      tags$h3("Ward 33", style = "font-size: 150%;"), paste0(night_medicine()[[7,3]], "/", night_medicine()[[7,2]], " Available"), icon = icon("bed"),
      color = colour_empty_ward(night_medicine()[[7,3]])
    )
  })
  
  output$w34_night <- renderValueBox({
    valueBox(
      tags$h3("Ward 34", style = "font-size: 150%;"), paste0(night_medicine()[[8,3]], "/", night_medicine()[[8,2]], " Available"), icon = icon("bed"),
      color = colour_empty_ward(night_medicine()[[8,3]])
    )
  })
  output$w41_night <- renderValueBox({
    valueBox(
      tags$h3("Ward 41", style = "font-size: 150%;"), paste0(night_medicine()[[9,3]], "/", night_medicine()[[9,2]], " Available"), icon = icon("bed"),
      color = colour_empty_ward(night_medicine()[[9,3]])
    )
  })
  output$w42_night <- renderValueBox({
    valueBox(
      tags$h3("Ward 42", style = "font-size: 150%;"), paste0(night_medicine()[[10,3]], "/", night_medicine()[[10,2]], " Available"), icon = icon("bed"),
      color = colour_empty_ward(night_medicine()[[10,3]])
    )
  })
  output$w43_night <- renderValueBox({
    valueBox(
      tags$h3("Ward 43", style = "font-size: 150%;"), paste0(night_medicine()[[11,3]], "/", night_medicine()[[11,2]], " Available"), icon = icon("bed"),
      color = colour_empty_ward(night_medicine()[[11,3]])
    )
  })
  output$w44_night <- renderValueBox({
    valueBox(
      tags$h3("Ward 44", style = "font-size: 150%;"), paste0(night_medicine()[[12,3]], "/", night_medicine()[[12,2]], " Available"), icon = icon("bed"),
      color = colour_empty_ward(night_medicine()[[12,3]])
    )
  })
  output$w51_night <- renderValueBox({
    valueBox(
      tags$h3("Ward 51", style = "font-size: 150%;"), paste0(night_medicine()[[13,3]], "/", night_medicine()[[13,2]], " Available"), icon = icon("bed"),
      color = colour_empty_ward(night_medicine()[[13,3]])
    )
  })
  output$w54_night <- renderValueBox({
    valueBox(
      tags$h3("Ward 54", style = "font-size: 150%;"), paste0(night_medicine()[[14,3]], "/", night_medicine()[[14,2]], "Available"), icon = icon("bed"),
      color = colour_empty_ward(night_medicine()[[14,3]])
    )
  })
  


# Normal Night Capacity_Surgery -------------------------------------------
  
  colour_empty_sx <- reactive({
    if(night_surgery()[[8, 3]] >= 20){
      colour <- "green"
    }else if(night_surgery()[[8, 3]] >= 10 & night_surgery()[[8, 3]] < 20){
      colour <- "yellow"
    }else if(night_surgery()[[8, 3]] < 10){
      colour <- "red"
    }
    
    return(colour)
  })

  night_surgery <- reactive({
    req(input$file1)
    
    surgery <- read_excel(input$file1$datapath, sheet = 1, range = "A24:C30", col_names = F)
    
    colnames(surgery) <- c("Ward", "Compliment", "Empty")
    
    total_sx <- c("Total",
                  colSums(surgery[, 2]),
                  colSums(surgery[, 3]))
    
    surgery <- rbind(surgery, total_sx)
    
    return(surgery)
  })
  output$sx_compliment <- renderInfoBox({
    infoBox(
      "Bed Compliment", night_surgery()[[8, 2]], icon = icon("hospital"),
      color = "blue"
    )
  })
  output$sx_empty <- renderInfoBox({
    infoBox(
      "Empty Beds", night_surgery()[[8, 3]], icon = icon("bed"),
      color = colour_empty_sx()
    )
  })
  
  output$sx_total_px <- renderInfoBox({
    infoBox(
      "Total Patients", night_patients()[[2, 2]], icon = icon("hospital-user"),
      color = "blue"
    )
  })
  
  output$sx_5d <- renderInfoBox({
    infoBox(
      "No. more than 5 Days", night_patients()[[2, 3]], icon = icon("calendar-day"),
      color = "red"
    )
  })
  
  output$sx_boarders <- renderInfoBox({
    infoBox(
      "No. Boarded Yesterday", night_patients()[[2, 4]], icon = icon("passport"),
      color = "red"
    )
  })
  
  output$au2_night <- renderValueBox({
    
    valueBox(
      tags$h3("AU 2", style = "font-size: 150%;"), paste0(night_surgery()[[1,3]], "/", night_surgery()[[1,2]], " Available"), icon = icon("bed"),
      color = colour_empty_ward(night_surgery()[[1,3]])
    )
  })
  
  output$ent_night <- renderValueBox({
    
    valueBox(
      tags$h3("ENT", style = "font-size: 150%;"), paste0(night_surgery()[[2,3]], "/", night_surgery()[[2,2]], " Available"), icon = icon("bed"),
      color = colour_empty_ward(night_surgery()[[2,3]])
    )
  })
  
  output$w10_night <- renderValueBox({
    
    valueBox(
      tags$h3("Ward 10", style = "font-size: 150%;"), paste0(night_surgery()[[3,3]], "/", night_surgery()[[3,2]], " Available"), icon = icon("bed"),
      color = colour_empty_ward(night_surgery()[[3,3]])
    )
  })
  
  output$w9sx_night <- renderValueBox({
    
    valueBox(
      tags$h3("Ward 9", style = "font-size: 150%;"), paste0(night_surgery()[[4,3]], "/", night_surgery()[[4,2]], " Available"), icon = icon("bed"),
      color = colour_empty_ward(night_surgery()[[4,3]])
    )
  })
  
  output$w52_night <- renderValueBox({
    
    valueBox(
      tags$h3("Ward 52", style = "font-size: 150%;"), paste0(night_surgery()[[5,3]], "/", night_surgery()[[5,2]], " Available"), icon = icon("bed"),
      color = colour_empty_ward(night_surgery()[[5,3]])
    )
  })
  
  output$w53_night <- renderValueBox({
    
    valueBox(
      tags$h3("Ward 53", style = "font-size: 150%;"), paste0(night_surgery()[[6,3]], "/", night_surgery()[[6,2]], " Available"), icon = icon("bed"),
      color = colour_empty_ward(night_surgery()[[6,3]])
    )
  })
  
  output$w54sx_night <- renderValueBox({
    
    valueBox(
      tags$h3("Ward 54", style = "font-size: 150%;"), paste0(night_surgery()[[7,3]], "/", night_surgery()[[7,2]], " Available"), icon = icon("bed"),
      color = colour_empty_ward(night_surgery()[[7,3]])
    )
  })
  



# Normal Night Capacity_Trauma --------------------------------------------
  colour_empty_tx <- function(x){
    
    x <- as.numeric(x)
    
    if(x >= 10){
      colour <- "green"
    }else if(x >= 5 & x < 10){
      colour <- "yellow"
    }else if(x < 5){
      colour <- "red"
    }
    
    return(colour)
  }
  
  
  night_tx <- reactive({
    req(input$file1)
    
    trauma <- read_excel(input$file1$datapath, sheet = 1, range = "A33:C34", col_names = F)
    
    colnames(trauma) <- c("Ward", "Compliment", "Empty")
    
    total_tx <- c("Total",
                  colSums(trauma[, 2]),
                  colSums(trauma[, 3]))
    
    trauma <- rbind(trauma, total_tx)
    
    return(trauma)
    })
  
  output$trauma_compliment <- renderInfoBox({
    infoBox(
      "Bed Compliment", night_tx()[[3, 2]], icon = icon("hospital"),
      color = "blue"
    )
  })
  output$trauma_empty <- renderInfoBox({
    infoBox(
      "Empty Beds", night_tx()[[3, 3]], icon = icon("bed"),
      color = colour_empty_tx(night_tx()[[3, 3]])
    )
  })
  
  output$trauma_total_px <- renderInfoBox({
    infoBox(
      "Total Patients", night_patients()[[3, 2]], icon = icon("hospital-user"),
      color = "blue"
    )
  })
  
  output$trauma_5d <- renderInfoBox({
    infoBox(
      "No. more than 5 Days", night_patients()[[3, 3]], icon = icon("calendar-day"),
      color = "red"
    )
  })
  
  output$trauma_boarders <- renderInfoBox({
    infoBox(
      "No. Boarded Yesterday", night_patients()[[3, 4]], icon = icon("passport"),
      color = "red"
    )
  })
  
  output$w31_night <- renderValueBox({
    
    valueBox(
      tags$h3("Ward 31", style = "font-size: 150%;"), paste0(night_tx()[[1,3]], "/", night_tx()[[1,2]], " Available"), icon = icon("bed"),
      color = colour_empty_ward(night_tx()[[1,3]])
    )
  })
  
  output$w33tx_night <- renderValueBox({
    
    valueBox(
      tags$h3("Ward 33", style = "font-size: 150%;"), paste0(night_surgery()[[2,3]], "/", night_tx()[[2,2]], " Available"), icon = icon("bed"),
      color = colour_empty_ward(night_tx()[[2,3]])
    )
  })
  


# Normal Night Capacity_Critical Care -------------------------------------

  night_cc <- reactive({
    req(input$file1)
    
    critcare <- read_excel(input$file1$datapath, sheet = 1, range = "F14:H18", col_names = F)
    
    critcare <- critcare[, -2]
    
    Compliment <- stri_extract_all_regex(critcare[, 1], "[0-9]+")
    
    Compliment <- as.numeric(Compliment[[1]])
    
    critcare <- cbind(critcare, Compliment)
    
    colnames(critcare) <- c("Ward", "Empty", "Compliment")
    
    critcare$Ward <- gsub("[0-9]+", "", critcare$Ward)
    
    critcare$Ward <- gsub(" \\(", "", critcare$Ward)
    
    critcare$Ward <- gsub("\\)", "", critcare$Ward)
    
    return(critcare)
    
  })  
  
  output$nc_icu <- renderInfoBox({
    infoBox(title = "ICU Empty Beds", value = paste0(night_cc()[[1,2]], "/", night_cc()[[1,3]]), 
            color = "navy", icon = icon("lungs"))
  })
  
  
  output$nc_shdu <- renderInfoBox({
    infoBox(title = "SHDU Empty Beds", value = paste0(night_cc()[[2,2]], "/", night_cc()[[2,3]]), 
            color = "navy", icon = icon("user-injured"))
  })
  
  output$nc_mhdu <- renderInfoBox({
    infoBox(title = "MHDU Empty Beds", value = paste0(night_cc()[[3,2]], "/", night_cc()[[3,3]]), 
            color = "navy", icon = icon("stethoscope"))
  })
  
  output$nc_rhdu <- renderInfoBox({
    infoBox(title = "Renal HDU Empty Beds", value = paste0(night_cc()[[4,2]], "/", night_cc()[[4,3]]), 
            color = "navy", icon = icon("weight"))
  })
  
  output$nc_ccu <- renderInfoBox({
    infoBox(title = "CCU Empty Beds", value = paste0(night_cc()[[5,2]], "/", night_cc()[[5,3]]), 
            color = "navy", icon = icon("heartbeat"))
  })
  
  

# Normal Night Capacity_Additional Capacity -------------------------------

  nc_add <- reactive({
    req(input$file1)
    
    extra <- read_excel(input$file1$datapath, sheet = 1, range = "F24:H28", col_names = F)
    
    colnames(extra) <- c("Ward", "Capacity", "Used")
    
    return(extra)
  })
  
  colour_add <- function(x){
    colour <- ifelse(x > 0, "red", "navy")
    
    return(colour)
  }
  
  output$nc_add1 <- renderInfoBox({
    
    infoBox(title = nc_add()[[1,1]], value = paste0(nc_add()[[1,3]], " Used/", nc_add()[[1,2]], " Agreed"),
            color = colour_add(nc_add()[[1,3]]), icon = icon("bed"))
    
  })
  
  output$nc_add2 <- renderInfoBox({
    
    infoBox(title = nc_add()[[2,1]], value = paste0(nc_add()[[2,3]], " Used/", nc_add()[[2,2]], " Agreed"),
            color = colour_add(nc_add()[[2,3]]), icon = icon("bed"))
    
  })
  
  output$nc_add3 <- renderInfoBox({
    
    infoBox(title = nc_add()[[3,1]], value = paste0(nc_add()[[3,3]], " Used/", nc_add()[[3,2]], " Agreed"),
            color = colour_add(nc_add()[[3,3]]), icon = icon("bed"))
    
  })
  
  output$nc_add4 <- renderInfoBox({
    
    infoBox(title = nc_add()[[4,1]], value = paste0(nc_add()[[4,3]], " Used/", nc_add()[[4,2]], " Agreed"),
            color = colour_add(nc_add()[[4,3]]), icon = icon("bed"))
    
  })
  
  output$nc_add5 <- renderInfoBox({
    
    infoBox(title = nc_add()[[5,1]], value = paste0(nc_add()[[5,3]], " Used/", nc_add()[[5,2]], " Agreed"),
            color = colour_add(nc_add()[[5,3]]), icon = icon("bed"))
    
  })
  
  


# Other/Misc --------------------------------------------------------------

  output$comments <- renderInfoBox({
    
    req(input$file1)
    
    comm <- read_excel(input$file1$datapath, sheet = 1, range = "J20", col_names = F)
    
    infoBox(title = "Other Comments or Reported Incidents", value = comm[[1,1]], color = "teal", icon = icon("comments"))
    
  })  
  
  output$calls <- renderText({
    
    req(input$file1)
    
    calls <- read_excel(input$file1$datapath, sheet = 1, range = "J27:K29", col_names = F)
    
    colnames(calls) <- c("Time", "Nature")
    
    if(is.character(calls$Time) == F){
      calls$Time <- format(calls$Time, "%T")
    }else{
      calls$Time <- calls$Time
    }
    
    calls <- calls %>%
      select("Time of Call" = Time,
             "Calls after 8 PM to On-call Manager Escalation" = Nature) 
    kable(calls, "html", align = "c") %>%
      kable_styling(full_width = F, font_size = 16) %>%
      row_spec(0, bold = T, color = "white", background = "#008080", align = "center") %>%
      row_spec(1:nrow(calls), color = "white", background = "#a6bf92", align = "center")

    
  })
  
  


# Normal Safety Huddle ----------------------------------------------------

  output$bed_occ <- renderInfoBox({
    req(input$file1)
    
    adult_occ1 <- read_excel(input$file1$datapath, sheet = 2, range = "E2", col_names = F)
    
    adult_occ2 <- read_excel(input$file1$datapath, sheet = 2, range = "G2", col_names = F)
    
    infoBox(title = "Adult Bed Occupancy", color = "navy",
            value = paste0(adult_occ1, "/", adult_occ2), icon = icon("bed"))
    
  })    
  
  colour.occ <- function(x, y){
    if(x/y >= 0.9){
      colour <- "red"
    }else if(x/y < 0.9 | x/y >= 0.8){
      colour <- "yellow"
    }else if(x/y < 0.8){
      colour <- "green"
    }
    
    return(colour)
  }
  
  output$occ_percent <- renderValueBox({
    req(input$file1)
    
    adult_occ1 <- read_excel(input$file1$datapath, sheet = 2, range = "E2", col_names = F)
    
    adult_occ2 <- read_excel(input$file1$datapath, sheet = 2, range = "G2", col_names = F)
    
    valueBox(value = paste0(round((adult_occ1/adult_occ2)*100, 1), "%"), subtitle = "Occupancy",
             color = colour.occ(adult_occ1, adult_occ2))
    
  })
  
  output$add_occ <- renderInfoBox({
    req(input$file1)
    
    add_occ1 <- read_excel(input$file1$datapath, sheet = 2, range = "E3", col_names = F)
    
    add_occ2 <- read_excel(input$file1$datapath, sheet = 2, range = "G3", col_names = F)
    
    infoBox(title = "Additional Capacity in Use", color = "navy",
            value = paste0(add_occ1, "/", add_occ2), icon = icon("bed"))
    
  })
  
  output$add_percent <- renderValueBox({
    req(input$file1)
    
    add_occ1 <- read_excel(input$file1$datapath, sheet = 2, range = "E3", col_names = F)
    
    add_occ2 <- read_excel(input$file1$datapath, sheet = 2, range = "G3", col_names = F)
    
    valueBox(value = paste0(round((add_occ1/add_occ2)*100, 1), "%"), subtitle = "Occupancy",
             color = colour.occ(add_occ1, add_occ2))
    
  })
  
  HAN <- reactive({
    req(input$file1)
    
    HAN_table <- read_excel(input$file1$datapath, sheet = 2, range = "A17:F22", col_names = F)
    
    HAN_table <- HAN_table %>%
      select(-c(2:5))
    
    colnames(HAN_table) <- c("event", "numbers")
    
    return(HAN_table)
  })
  
  output$han1 <- renderInfoBox({
    colour <- ifelse(HAN()[[1, 2]] > 0, "red", "green")
    
    infoBox(title = "Falls Reported", value = HAN()[[1, 2]], icon = icon("wheelchair"), color = colour)
  })
  
  output$han2 <- renderInfoBox({
    colour <- ifelse(HAN()[[2, 2]] > 0, "red", "green")
    
    infoBox(title = "Expected Deaths", value = HAN()[[2, 2]], icon = icon("book-dead"), color = colour)
  })
  
  output$han3 <- renderInfoBox({
    colour <- ifelse(HAN()[[3, 2]] > 0, "red", "green")
    
    infoBox(title = "Unexpected Deaths", value = HAN()[[3, 2]], icon = icon("skull-crossbones"), color = colour)
  })
  
  output$han4 <- renderInfoBox({
    colour <- ifelse(HAN()[[4, 2]] > 0, "red", "green")
    
    infoBox(title = "Early Reviews Required", value = HAN()[[4, 2]], icon = icon("file-medical"), color = colour)
  })
  
  
  output$han5 <- renderInfoBox({
    colour <- ifelse(HAN()[[5, 2]] > 0, "red", "green")
    
    infoBox(title = "Cardiac Arrests", value = HAN()[[5, 2]], icon = icon("heartbeat"), color = colour)
  })
  
  output$han6 <- renderInfoBox({
    colour <- ifelse(HAN()[[6, 2]] > 0, "red", "green")
    
    infoBox(title = "Reviews for Delirium", value = HAN()[[6, 2]], icon = icon("clipboard-check"), color = colour)
  })
  
  
  output$sh_ed1 <- renderInfoBox({
    req(input$file1)
    
    ED_present <- read_excel(input$file1$datapath, sheet = 2, range = "E6", col_names = F)
    
    infoBox(title = "Total ED Presentations", value = ED_present[[1,1]], color = "navy", icon = icon("hospital-user"))
    
  })
  
  output$sh_ed2 <- renderInfoBox({
    req(input$file1)
    
    ED_breach <- read_excel(input$file1$datapath, sheet = 2, range = "E7", col_names = F)
    
    infoBox(title = "Breaches", value = ED_breach[[1,1]], color = ifelse(ED_breach[[1,1]] == 0, "green", "purple"), icon = icon("stopwatch"))
    
  })
  
  output$sh_ed3 <- renderValueBox({
    req(input$file1)
    
    ED_present <- read_excel(input$file1$datapath, sheet = 2, range = "E6", col_names = F)
    
    ED_breach <- read_excel(input$file1$datapath, sheet = 2, range = "E7", col_names = F)
    
    ED_perform <- (ED_present - ED_breach)/ED_present
    
    valueBox(value = paste0(round(ED_perform*100, 1), "%"), subtitle = "Performance", color = ifelse(ED_perform >= 0.95, "green", "red"))
  })
  
  output$ec_admit <- renderInfoBox({
    req(input$file1)
    
    EC_admit1 <- read_excel(input$file1$datapath, sheet = 2, range = "E8", col_names = F)
    
    EC_admit2 <- read_excel(input$file1$datapath, sheet = 2, range = "G8", col_names = F)
    
    infoBox(title = "Admissions against Predicted EC", value = paste0(EC_admit1, "/", EC_admit2), color = "light-blue", icon = icon("ambulance"))
    
  })
  
  output$pc_admit <- renderInfoBox({
    req(input$file1)
    
    PC_admit1 <- read_excel(input$file1$datapath, sheet = 2, range = "E9", col_names = F)
    
    PC_admit2 <- read_excel(input$file1$datapath, sheet = 2, range = "G9", col_names = F)
    
    infoBox(title = "Admissions against Predicted PC", value = paste0(PC_admit1, "/", PC_admit2), color = "teal", icon = icon("ambulance"))
    
  })
  
  output$ec_dc1 <- renderInfoBox({
    req(input$file1)
    
    EC_discharge1 <- read_excel(input$file1$datapath, sheet = 2, range = "L8", col_names = F)
    
    infoBox(title = "Discharges Achieved EC", value = EC_discharge1, color = "light-blue", icon = icon("home"))
  })
  
  output$ec_dc2 <- renderValueBox({
    req(input$file1)
    
    EC_discharge2 <- read_excel(input$file1$datapath, sheet = 2, range = "M8", col_names = F)
    
    valueBox(value = EC_discharge2, subtitle = "Balance", color = ifelse(EC_discharge2 < 0, "red", "green"))
    
  })
  
  output$ec_dc3 <- renderValueBox({
    req(input$file1)
    
    EC_discharge3 <- read_excel(input$file1$datapath, sheet = 2, range = "O8", col_names = F)
    
    valueBox(value = EC_discharge3, subtitle = "Before 1PM")
    
  })
  
  output$pc_dc1 <- renderInfoBox({
    req(input$file1)
    
    PC_discharge1 <- read_excel(input$file1$datapath, sheet = 2, range = "L9", col_names = F)
    
    infoBox(title = "Discharges Achieved PC", value = PC_discharge1, color = "teal", icon = icon("home"))
  })
  
  output$pc_dc2 <- renderValueBox({
    req(input$file1)
    
    PC_discharge2 <- read_excel(input$file1$datapath, sheet = 2, range = "M9", col_names = F)
    
    valueBox(value = PC_discharge2, subtitle = "Balance", color = ifelse(PC_discharge2 < 0, "red", "green"))
    
  })
  
  output$pc_dc3 <- renderValueBox({
    req(input$file1)
    
    PC_discharge3 <- read_excel(input$file1$datapath, sheet = 2, range = "O9", col_names = F)
    
    valueBox(value = PC_discharge3, subtitle = "Before 1PM")
    
  })
  
  output$total_dc <- renderInfoBox({
    req(input$file1)
    
    total_patients <- read_excel(input$file1$datapath, sheet = 2, range = "M10", col_names = F)
    
    infoBox(title = "Total Patients", value = total_patients, color = ifelse(total_patients < 0, "red", "green"), icon = icon("calculator"))
  
  })
  
  output$aa_present <- renderInfoBox({
    req(input$file1)
    
    AA_present <- read_excel(input$file1$datapath, sheet = 2, range = "E12", col_names = F)
    
    infoBox("Total Presentations", value = AA_present, color = "navy", icon = icon("hospital-user"))
    
  })
  
  output$aa_dc <- renderInfoBox({
    req(input$file1)
    
    AA_discharge <- read_excel(input$file1$datapath, sheet = 2, range = "M12", col_names = F)
    
    infoBox("Total Discharges", color = "navy", value = AA_discharge, icon = icon("home"))
    
  })
  
  output$aa_transfer1 <- renderInfoBox({
    req(input$file1)
    
    AU1_tansfer1 <- read_excel(input$file1$datapath, sheet = 2, range = "F14", col_names = F)
    
    infoBox("08:00 to 13:00", color = "green", value = AU1_tansfer1, icon = icon("clock"))
    
  })
  
  output$aa_transfer2 <- renderInfoBox({
    req(input$file1)
    
    AU1_tansfer2 <- read_excel(input$file1$datapath, sheet = 2, range = "J14", col_names = F)
    
    infoBox("13:00 to 20:00", color = "yellow", value = AU1_tansfer2, icon = icon("clock"))
    
  })
  
  output$aa_transfer3 <- renderInfoBox({
    req(input$file1)
    
    AU1_tansfer3 <- read_excel(input$file1$datapath, sheet = 2, range = "N14", col_names = F)
    
    infoBox("After 20:00", color = "red", value = AU1_tansfer3, icon = icon("clock"))
    
  })
  
  

# Normal 8:30 -------------------------------------------------------------

  ec_830 <- reactive({
    req(input$file1)
    
    EC_830 <- read_excel(input$file1$datapath, sheet = 3, range = "A6:E13", col_names = F)
    
    EC_830$...1 <- gsub(":", "", EC_830$...1)
    
    EC_830 <- EC_830 %>%
      select("FLow" = ...1,
             "Numbers" = ...5)
    
    return(EC_830)
  })  
  
  output$ec830_1 <- renderInfoBox({
    
    infoBox(title = "Electives", value = ec_830()[[1,2]], color = "navy", icon = icon("clipboard-list"))
    
  })
  
  output$ec830_2 <- renderInfoBox({
    
    infoBox(title = "Predicted Emergencies", value = ec_830()[[2,2]], color = "yellow", icon = icon("ambulance"))
    
  })
  
  output$ec830_3 <- renderInfoBox({
    
    infoBox(title = "Total", value = ec_830()[[3,2]], color = "navy", icon = icon("calculator"))
    
  })
  
  output$ec830_4 <- renderInfoBox({
    
    infoBox(title = "Admissions so far", value = ec_830()[[4,2]], color = "navy", icon = icon("hospital-user"))
    
  })
  
  output$ec830_5 <- renderInfoBox({
    
    infoBox(title = "Remaining Today", value = ec_830()[[5,2]], color = "navy", icon = icon("calculator"))
    
  })
  
  output$ec830_6 <- renderInfoBox({
    
    infoBox(title = "Beds Available now", value = ec_830()[[6,2]], color = ifelse(ec_830()[[6,2]] < 5, "red", "green"), icon = icon("bed"))
    
  })
  
  output$ec830_7 <- renderInfoBox({
    
    infoBox(title = "Definitive & Expected DC", value = ec_830()[[7,2]], color = "navy", icon = icon("home"))
    
  })
  
  output$ec830_8 <- renderInfoBox({
    
    infoBox(title = "Predicted Balance", value = ec_830()[[8,2]], color = ifelse(ec_830()[[8,2]] > 0, "green", "red"), icon = icon("balance-scale"))
    
  })
  
  pc_830 <- reactive({
    req(input$file1)
    
    PC_830 <- read_excel(input$file1$datapath, sheet = 3, range = "G6:J13", col_names = F)
    
    PC_830$...1 <- gsub(":", "", PC_830$...1)
    
    PC_830 <- PC_830 %>%
      select("Flow" = ...1,
             "Numbers" = ...4)
    
    return(PC_830)
    
  })
  
  
  output$pc830_1 <- renderInfoBox({
    
    infoBox(title = "Electives", value = pc_830()[[1,2]], color = "navy", icon = icon("clipboard-list"))
    
  })
  
  output$pc830_2 <- renderInfoBox({
    
    infoBox(title = "Predicted Emergencies", value = pc_830()[[2,2]], color = "yellow", icon = icon("ambulance"))
    
  })
  
  output$pc830_3 <- renderInfoBox({
    
    infoBox(title = "Total", value = pc_830()[[3,2]], color = "navy", icon = icon("calculator"))
    
  })
  
  output$pc830_4 <- renderInfoBox({
    
    infoBox(title = "Admissions so far", value = pc_830()[[4,2]], color = "navy", icon = icon("hospital-user"))
    
  })
  
  output$pc830_5 <- renderInfoBox({
    
    infoBox(title = "Remaining Today", value = pc_830()[[5,2]], color = "navy", icon = icon("calculator"))
    
  })
  
  output$pc830_6 <- renderInfoBox({
    
    infoBox(title = "Beds Available now", value = pc_830()[[6,2]], color = ifelse(pc_830()[[6,2]] < 5, "red", "green"), icon = icon("bed"))
    
  })
  
  output$pc830_7 <- renderInfoBox({
    
    infoBox(title = "Definitive & Expected DC", value = pc_830()[[7,2]], color = "navy", icon = icon("home"))
    
  })
  
  output$pc830_8 <- renderInfoBox({
    
    infoBox(title = "Predicted Balance", value = pc_830()[[8,2]], color = ifelse(pc_830()[[8,2]] > 0, "green", "red"), icon = icon("balance-scale"))
    
  })
  
  tot_830 <- reactive({
    
    req(input$file1)
    
    total_830 <- read_excel(input$file1$datapath, sheet = 3, range = "M6:P13", col_names = F)
    
    total_830$...1 <- gsub(":", "", total_830$...1)
    
    total_830 <- total_830 %>%
      select("Flow" = ...1,
             "Numbers" = ...4)
    
    return(total_830)
    
  })
  
  output$tot830_1 <- renderInfoBox({
    
    infoBox(title = "Electives", value = tot_830()[[1,2]], color = "navy", icon = icon("clipboard-list"))
    
  })
  
  output$tot830_2 <- renderInfoBox({
    
    infoBox(title = "Predicted Emergencies", value = tot_830()[[2,2]], color = "yellow", icon = icon("ambulance"))
    
  })
  
  output$tot830_3 <- renderInfoBox({
    
    infoBox(title = "Total", value = tot_830()[[3,2]], color = "navy", icon = icon("calculator"))
    
  })
  
  output$tot830_4 <- renderInfoBox({
    
    infoBox(title = "Admissions so far", value = tot_830()[[4,2]], color = "navy", icon = icon("hospital-user"))
    
  })
  
  output$tot830_5 <- renderInfoBox({
    
    infoBox(title = "Remaining Today", value = tot_830()[[5,2]], color = "navy", icon = icon("calculator"))
    
  })
  
  output$tot830_6 <- renderInfoBox({
    
    infoBox(title = "Beds Available now", value = tot_830()[[6,2]], color = ifelse(tot_830()[[6,2]] < 5, "red", "green"), icon = icon("bed"))
    
  })
  
  output$tot830_7 <- renderInfoBox({
    
    infoBox(title = "Definitive & Expected DC", value = tot_830()[[7,2]], color = "navy", icon = icon("home"))
    
  })
  
  output$tot830_8 <- renderInfoBox({
    
    infoBox(title = "Predicted Balance", value = tot_830()[[8,2]], color = ifelse(tot_830()[[8,2]] > 0, "green", "red"), icon = icon("balance-scale"))
    
  })
  
  ED830 <- reactive({
    req(input$file1)
    ED_830 <- read_excel(input$file1$datapath, sheet = 3, range = "N18:V18", col_names = F)
    
    colnames(ED_830) <- c("Total",
                          "Longest",
                          "Assessment",
                          "Three_hours",
                          "DTA",
                          "Breaches",
                          "RN_Shrot",
                          "nRN_Short",
                          "Safe")
    
    if(is.character(ED_830$Longest) == T){
      ED_830$Longest <- ED_830$Longest
    }else{
      ED_830$Longest <- format(ED_830$Longest, "%T")
    }
    
    if(is.character(ED_830$Assessment) == T){
      ED_830$Assessment <- ED_830$Assessment
    }else{
      ED_830$Assessment <- format(ED_830$Assessment, "%T")
    }
    
    return(ED_830)
  })
  
  output$ed830_1 <- renderInfoBox({
    
    infoBox("Total Number", value = ED830()[[1,1]],
            color = "navy",
            icon = icon("hospital-user"))
    
  })
  
  output$ed830_2 <- renderInfoBox({
    
    infoBox("Longest Wait", value = ED830()[[1,2]],
            color = "yellow",
            icon = icon("clock"))
  })
  
  
  output$ed830_3 <- renderInfoBox({
    
    infoBox("Time to Assessment", value = ED830()[[1,3]],
            color = "yellow",
            icon = icon("stopwatch"))
  })
  
  
  output$ed830_4 <- renderInfoBox({
    
    infoBox("Number with 3 hours wait", value = ED830()[[1,4]],
            color = ifelse(ED830()[[1,4]] > 0, "red", "green"),
            icon = icon("exclamation-triangle"))
  })
  
  output$ed830_5 <- renderInfoBox({
    
    infoBox("Number of DTA", value = ED830()[[1,5]],
            color = ifelse(ED830()[[1,5]] > 0, "purple", "green"),
            icon = icon("hospital"))
  })
  
  output$ed830_6 <- renderInfoBox({
    
    infoBox("Breaches since Midnight", value = ED830()[[1,6]],
            color = ifelse(ED830()[[1,6]] > 0, "purple", "green"),
            icon = icon("stopwatch"))
  })
  
  output$ed830_7 <- renderInfoBox({
    
    infoBox("RN Shortfall", value = ED830()[[1,7]],
            color = ifelse(ED830()[[1,7]] > 0, "red", "green"),
            icon = icon("user-nurse"))
  })
  
  output$ed830_8 <- renderInfoBox({
    
    infoBox("Night RN Shortfall", value = ED830()[[1,8]],
            color = ifelse(ED830()[[1,8]] > 0, "red", "green"),
            icon = icon("user-nurse"))
  })
  
  output$ed830_9 <- renderValueBox({
    
    colour.ed <- function(x){
      if(x == "Yes" | x == "y" | x == "Y" | x == "yes" | x == "YES"){
        colour <- "green"
      }else{
        colour <- "red"
      }
      
      return(colour)
    }
    
    valueBox(value = ED830()[[1, 9]], subtitle = "Safe to Start", color = colour.ed(ED830()[[1, 9]]))
  })
  
  au830 <- reactive({
    req(input$file1)
    
    AU1_830 <- read_excel(input$file1$datapath, sheet = 3, range = "O44:S44", col_names = F)
    AU2_830 <- read_excel(input$file1$datapath, sheet = 3, range = "O47:S47", col_names = F)
    
    AU_830 <- rbind(AU1_830, AU2_830)
    
    AU_830 <- AU_830 %>%
      select(-...2) %>%
      select("Now" = ...1,
             "Beds" = ...3,
             "DC" = ...4,
             "Ongoing" =...5)
    
    return(AU_830)
  })
  
  
  output$au1_830_1 <- renderInfoBox({
    
    infoBox(title = "Patients Now", color = "blue", value = au830()[[1,1]], icon = icon("hospital-user"))
    
    
  })
  
  output$au1_830_2 <- renderInfoBox({
    
    infoBox(title = "Bed Required", color = "blue", value = au830()[[1,2]], icon = icon("bed"))
    
    
  })
  
  output$au1_830_3 <- renderInfoBox({
    
    infoBox(title = "Definite Discharges", color = "blue", value = au830()[[1,3]], icon = icon("home"))
    
    
  })
  
  output$au1_830_4 <- renderInfoBox({
    
    infoBox(title = "Ongoing Assessment", color = "blue", value = au830()[[1,4]], icon = icon("clipboard-check"))
    
    
  })
  
  output$au2_830_1 <- renderInfoBox({
    
    infoBox(title = "Patients Now", color = "light-blue", value = au830()[[2,1]], icon = icon("hospital-user"))
    
    
  })
  
  output$au2_830_2 <- renderInfoBox({
    
    infoBox(title = "Bed Required", color = "light-blue", value = au830()[[2,2]], icon = icon("bed"))
    
    
  })
  
  output$au2_830_3 <- renderInfoBox({
    
    infoBox(title = "Definite Discharges", color = "light-blue", value = au830()[[2,3]], icon = icon("home"))
    
    
  })
  
  output$au2_830_4 <- renderInfoBox({
    
    infoBox(title = "Ongoing Assessment", color = "light-blue", value = au830()[[2,4]], icon = icon("clipboard-check"))
    
    
  })
  
  output$cc830 <- renderText({
    
    req(input$file1)
    
    cc_830 <- read_excel(input$file1$datapath, sheet = 3, range = "N25:V29", col_names = F)
    
    colnames(cc_830) <- c("Ward",
                          "Empty",
                          "Fit",
                          "Admissions",
                          "Discharges",
                          "End_Pos",
                          "RN_Short",
                          "nRN_Short",
                          "Safe")
    
    cc_830[, 1] <- c("ITU",
                     "SHDU",
                     "MHDU",
                     "RHDU",
                     "CCU")
    
    cc_830 <- cc_830 %>%
      mutate(
        End_Pos = cell_spec(End_Pos, "html", bold = T, color = "white", background = if_else(End_Pos >= 0, "#56b34b", "#c64040", "#1b1c21")),
        RN_Short = cell_spec(RN_Short, "html", bold = T, color = "white", background = if_else(RN_Short > 0, "#c64040", "#56b34b", "#1b1c21")),
        nRN_Short = cell_spec(nRN_Short, "html", bold = T, color = "white", background = if_else(nRN_Short > 0, "#c64040", "#56b34b", "#1b1c21")),
        Safe = cell_spec(Safe, "html", bold = T, color = "white", background = if_else((Safe == "No" | Safe == "N" | Safe == "no" | Safe == "n" | Safe == "NO") , "#c64040", "#56b34b", "#1b1c21"))
        ) %>%
      select(
        "Ward" = Ward,
        "Empty Beds Now" = Empty,
        "Ward Fit Patients" = Fit,
        "Planned Admissions" = Admissions,
        "Discharges" = Discharges,
        "End of Day Position" = End_Pos,
        "RN Shortfall" = RN_Short,
        "Night RN Shorfall" = nRN_Short,
        "Safe to Start" = Safe) 
    
    kable(cc_830, "html", escape = F) %>%
      kable_styling(full_width = T, position = "center", bootstrap_options = "condensed", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(cc_830), align = "center", background = "#DCDCDC") %>%
      column_spec(1, bold = T, width = "8em")
    
    })
  
  output$trauma_830 <- renderInfoBox({
    req(input$file1)
    
    trauma_list_830 <- read_excel(input$file1$datapath, sheet = 3, range = "E47", col_names = F)
    
    infoBox(title = "Trauma List Today", value = trauma_list_830[1,1], color = "blue", icon = icon("bone"))
    
  })
  
  output$med830 <- renderText({
    req(input$file1)
    
    columns <- c("Ward", 
                 "EDD_Due",
                 "EDD_Elapsed",
                 "Empty",
                 "Electives",
                 "DC_Expect",
                 "DC_12pm",
                 "End_Pos",
                 "Boarders",
                 "RN_Short",
                 "nRN_Short",
                 "Safe")
    
    med_830 <- read_excel(input$file1$datapath, sheet = 3, range = "A18:L31", col_names = columns)
    
    total_med <- c("Total",
                   colSums(med_830[, 2], na.rm = T),
                   colSums(med_830[, 3], na.rm = T),
                   colSums(med_830[, 4], na.rm = T),
                   colSums(med_830[, 5], na.rm = T),
                   colSums(med_830[, 6], na.rm = T),
                   colSums(med_830[, 7], na.rm = T),
                   colSums(med_830[, 8], na.rm = T),
                   colSums(med_830[, 9], na.rm = T),
                   colSums(med_830[, 10], na.rm = T),
                   colSums(med_830[, 11], na.rm = T),
                   NA)
    
    med_830 <- rbind(med_830, total_med)
    
    med_830 <- med_830 %>%
      mutate(
        DC_Expect = cell_spec(DC_Expect, "html", bold = T, color = "white", background = if_else(DC_Expect > 0, "#56b34b", "#c64040", "#1b1c21")),
        DC_12pm = cell_spec(DC_12pm, "html", bold = T, color = "white", background = if_else(DC_12pm > 0, "#56b34b", "#c64040", "#1b1c21")),
        End_Pos = cell_spec(End_Pos, "html", bold = T, color = "white", background = if_else(End_Pos < 0, "#c64040", "#56b34b", "#1b1c21")),
        RN_Short = cell_spec(RN_Short, "html", bold = T, color = "white", background = if_else(RN_Short > 0, "#c64040", "#56b34b", "#1b1c21")),
        nRN_Short = cell_spec(nRN_Short, "html", bold = T, color = "white", background = if_else(nRN_Short > 0, "#c64040", "#56b34b", "#1b1c21")),
        Safe = cell_spec(Safe, "html", bold = T, color = "white", background = if_else((Safe == "No" | Safe == "N" | Safe == "no" | Safe == "n" | Safe == "NO") , "#c64040", "#56b34b", "#1b1c21"))
      ) %>%
      select(
        "Ward" = Ward,
        "EDD Due Today" = EDD_Due,
        "EDD Elapsed" = EDD_Elapsed,
        "Empty Beds Now" = Empty,
        "Electives (GP's on board AU 1 & 2)" = Electives,
        "Discharges Expected" = DC_Expect,
        "Discharges by 12 pm" = DC_12pm,
        "End of Day Position" = End_Pos,
        "Boarders on Ward" = Boarders,
        "RN Shortfall" = RN_Short,
        "Night RN Shortfall" = nRN_Short,
        "Safe to Start" = Safe)
    
    kable(med_830, "html", escape = F) %>%
      kable_styling(full_width = T, position = "center", bootstrap_options = "condensed", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(med_830), align = "center", background = "#DCDCDC") %>%
      column_spec(1, bold = T, width = "8em") %>%
      column_spec(5, width = "10em") %>%
      row_spec(nrow(med_830), bold = T, color = "white", background = "#03396C")
    
  })
  
  output$sx830 <- renderText({
    req(input$file1)
    
    columns <- c("Ward", 
                 "EDD_Due",
                 "EDD_Elapsed",
                 "Empty",
                 "Electives",
                 "DC_Expect",
                 "DC_12pm",
                 "End_Pos",
                 "Boarders",
                 "RN_Short",
                 "nRN_Short",
                 "Safe")
    
    sx_830 <- read_excel(input$file1$datapath, sheet = 3, range = "A34:L41", col_names = columns)
    
    total_sx <- c("Total",
                   colSums(sx_830[, 2], na.rm = T),
                   colSums(sx_830[, 3], na.rm = T),
                   colSums(sx_830[, 4], na.rm = T),
                   colSums(sx_830[, 5], na.rm = T),
                   colSums(sx_830[, 6], na.rm = T),
                   colSums(sx_830[, 7], na.rm = T),
                   colSums(sx_830[, 8], na.rm = T),
                   colSums(sx_830[, 9], na.rm = T),
                   colSums(sx_830[, 10], na.rm = T),
                   colSums(sx_830[, 11], na.rm = T),
                   NA)
    
    sx_830 <- rbind(sx_830, total_sx)
    
    sx_830 <- sx_830 %>%
      mutate(
        DC_Expect = cell_spec(DC_Expect, "html", bold = T, color = "white", background = if_else(DC_Expect > 0, "#56b34b", "#c64040", "#1b1c21")),
        DC_12pm = cell_spec(DC_12pm, "html", bold = T, color = "white", background = if_else(DC_12pm > 0, "#56b34b", "#c64040", "#1b1c21")),
        End_Pos = cell_spec(End_Pos, "html", bold = T, color = "white", background = if_else(End_Pos < 0, "#c64040", "#56b34b", "#1b1c21")),
        RN_Short = cell_spec(RN_Short, "html", bold = T, color = "white", background = if_else(RN_Short > 0, "#c64040", "#56b34b", "#1b1c21")),
        nRN_Short = cell_spec(nRN_Short, "html", bold = T, color = "white", background = if_else(nRN_Short > 0, "#c64040", "#56b34b", "#1b1c21")),
        Safe = cell_spec(Safe, "html", bold = T, color = "white", background = if_else((Safe == "No" | Safe == "N" | Safe == "no" | Safe == "n" | Safe == "NO") , "#c64040", "#56b34b", "#1b1c21"))
      ) %>%
      select(
        "Ward" = Ward,
        "EDD Due Today" = EDD_Due,
        "EDD Elapsed" = EDD_Elapsed,
        "Empty Beds Now" = Empty,
        "Electives (GP's on board AU 1 & 2)" = Electives,
        "Discharges Expected" = DC_Expect,
        "Discharges by 12 pm" = DC_12pm,
        "End of Day Position" = End_Pos,
        "Boarders on Ward" = Boarders,
        "RN Shortfall" = RN_Short,
        "Night RN Shortfall" = nRN_Short,
        "Safe to Start" = Safe)
    
    kable(sx_830, "html", escape = F) %>%
      kable_styling(full_width = T, position = "center", bootstrap_options = "condensed", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(sx_830), align = "center", background = "#DCDCDC") %>%
      column_spec(1, bold = T, width = "8em") %>%
      column_spec(5, width = "10em") %>%
      row_spec(nrow(sx_830), bold = T, color = "white", background = "#03396C")
    
  })
  
  output$ot830 <- renderText({
    req(input$file1)
    
    columns <- c("Ward", 
                 "EDD_Due",
                 "EDD_Elapsed",
                 "Empty",
                 "Electives",
                 "DC_Expect",
                 "DC_12pm",
                 "End_Pos",
                 "Boarders",
                 "RN_Short",
                 "nRN_Short",
                 "Safe")
    
    ortho_830 <- read_excel(input$file1$datapath, sheet = 3, range = "A44:L46", col_names = columns)
    
    ortho_830 <- ortho_830 %>%
      mutate(
        DC_Expect = cell_spec(DC_Expect, "html", bold = T, color = "white", background = if_else(DC_Expect > 0, "#56b34b", "#c64040", "#1b1c21")),
        DC_12pm = cell_spec(DC_12pm, "html", bold = T, color = "white", background = if_else(DC_12pm > 0, "#56b34b", "#c64040", "#1b1c21")),
        End_Pos = cell_spec(End_Pos, "html", bold = T, color = "white", background = if_else(End_Pos < 0, "#c64040", "#56b34b", "#1b1c21")),
        RN_Short = cell_spec(RN_Short, "html", bold = T, color = "white", background = if_else(RN_Short > 0, "#c64040", "#56b34b", "#1b1c21")),
        nRN_Short = cell_spec(nRN_Short, "html", bold = T, color = "white", background = if_else(nRN_Short > 0, "#c64040", "#56b34b", "#1b1c21")),
        Safe = cell_spec(Safe, "html", bold = T, color = "white", background = if_else((Safe == "No" | Safe == "N" | Safe == "no" | Safe == "n" | Safe == "NO") , "#c64040", "#56b34b", "#1b1c21"))
      ) %>%
      select(
        "Ward" = Ward,
        "EDD Due Today" = EDD_Due,
        "EDD Elapsed" = EDD_Elapsed,
        "Empty Beds Now" = Empty,
        "Electives" = Electives,
        "Discharges Expected" = DC_Expect,
        "Discharges by 12 pm" = DC_12pm,
        "End of Day Position" = End_Pos,
        "Boarders on Ward" = Boarders,
        "RN Shortfall" = RN_Short,
        "Night RN Shortfall" = nRN_Short,
        "Safe to Start" = Safe)
    
    kable(ortho_830, "html", escape = F) %>%
      kable_styling(full_width = T, position = "center", bootstrap_options = "condensed", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(ortho_830), align = "center", background = "#DCDCDC") %>%
      column_spec(1, bold = T, width = "8em") %>%
      column_spec(5, width = "10em") %>%
      row_spec(nrow(ortho_830), bold = T, color = "white", background = "#03396C")
    
    
    
  })
  
  output$wac830 <- renderText({
    req(input$file1)
    
    columns <- c("Ward", 
                 "EDD_Due",
                 "EDD_Elapsed",
                 "Empty",
                 "Electives",
                 "DC_Expect",
                 "DC_12pm",
                 "End_Pos",
                 "Boarders",
                 "RN_Short",
                 "nRN_Short",
                 "Safe")
    
    woman_830 <- read_excel(input$file1$datapath, sheet = 3, range = "A49:L55", col_names = columns)
    
    woman_830 <- woman_830 %>%
      select(-"EDD_Due", -"EDD_Elapsed") 
    
    total_wac <- c("Total",
                  colSums(woman_830[, 2], na.rm = T),
                  colSums(woman_830[, 3], na.rm = T),
                  colSums(woman_830[, 4], na.rm = T),
                  colSums(woman_830[, 5], na.rm = T),
                  colSums(woman_830[, 6], na.rm = T),
                  colSums(woman_830[, 7], na.rm = T),
                  colSums(woman_830[, 8], na.rm = T),
                  colSums(woman_830[, 9], na.rm = T),
                  NA)
    
    woman_830 <- rbind(woman_830, total_wac)
    
    woman_830 <- woman_830 %>%
      mutate(
        DC_Expect = cell_spec(DC_Expect, "html", bold = T, color = "white", background = if_else(DC_Expect > 0, "#56b34b", "#c64040", "#1b1c21")),
        DC_12pm = cell_spec(DC_12pm, "html", bold = T, color = "white", background = if_else(DC_12pm > 0, "#56b34b", "#c64040", "#1b1c21")),
        End_Pos = cell_spec(End_Pos, "html", bold = T, color = "white", background = if_else(End_Pos < 0, "#c64040", "#56b34b", "#1b1c21")),
        RN_Short = cell_spec(RN_Short, "html", bold = T, color = "white", background = if_else(RN_Short > 0, "#c64040", "#56b34b", "#1b1c21")),
        nRN_Short = cell_spec(nRN_Short, "html", bold = T, color = "white", background = if_else(nRN_Short > 0, "#c64040", "#56b34b", "#1b1c21")),
        Safe = cell_spec(Safe, "html", bold = T, color = "white", background = if_else((Safe == "No" | Safe == "N" | Safe == "no" | Safe == "n" | Safe == "NO") , "#c64040", "#56b34b", "#1b1c21"))
      ) %>%
      select(
        "Ward" = Ward,
        "Empty Beds Now" = Empty,
        "Electives" = Electives,
        "Discharges Expected" = DC_Expect,
        "Discharges by 12 pm" = DC_12pm,
        "End of Day Position" = End_Pos,
        "Boarders on Ward" = Boarders,
        "RN Shortfall" = RN_Short,
        "Night RN Shortfall" = nRN_Short,
        "Safe to Start" = Safe)
    
    kable(woman_830, "html", escape = F) %>%
      kable_styling(full_width = T, position = "center", bootstrap_options = "condensed", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(woman_830), align = "center", background = "#DCDCDC") %>%
      column_spec(1, bold = T, width = "8em") %>%
      row_spec(nrow(woman_830), bold = T, color = "white", background = "#03396C")
  })
  
  output$add830 <- renderText({
    req(input$file1)
    
    add_830 <- read_excel(input$file1$datapath, sheet = 3, range = "O34:U40", col_names = F)
    
    add_830 <- select(add_830, -...3, -...5)
    
    colnames(add_830) <- c("Ward", "Agreed", "Used", "EDD_Due", "EDD_Elapsed")
    
    add_830 <- add_830 %>%
      mutate(Used = cell_spec(Used, bold = T, color = "white", background = if_else(Used > 0, "#c64040", "#56b34b", "#1b1c21"))
             ) %>%
      select("Ward" = Ward,
             "Agreed Additional Capacity" = Agreed,
             "Additional Beds in Use" = Used,
             "EDD Due Today" = EDD_Due,
             "EDD Elaspsed" = EDD_Elapsed)
    
    kable(add_830, "html", escape = F) %>%
      kable_styling(full_width = T, position = "center", bootstrap_options = "condensed", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#DA7900", color = "white") %>%
      row_spec(1:nrow(add_830), align = "center", background = "#DCDCDC") %>%
      column_spec(1, bold = T, width = "8em") 
    
  })
  

# Normal 13:00 ------------------------------------------------------------
  ec_1300 <- reactive({
    req(input$file1)
    
    EC_1300 <- read_excel(input$file1$datapath, sheet = 4, range = "A6:F13", col_names = F)
    
    EC_1300$...1 <- gsub(":", "", EC_1300$...1)
    
    EC_1300 <- EC_1300 %>%
      select("FLow" = ...1,
             "Numbers" = ...6)
    
    return(EC_1300)
  })  
  
  output$ec1300_1 <- renderInfoBox({
    
    infoBox(title = "Electives", value = ec_1300()[[1,2]], color = "navy", icon = icon("clipboard-list"))
    
  })
  
  output$ec1300_2 <- renderInfoBox({
    
    infoBox(title = "Predicted Emergencies", value = ec_1300()[[2,2]], color = "yellow", icon = icon("ambulance"))
    
  })
  
  output$ec1300_3 <- renderInfoBox({
    
    infoBox(title = "Total", value = ec_1300()[[3,2]], color = "navy", icon = icon("calculator"))
    
  })
  
  output$ec1300_4 <- renderInfoBox({
    
    infoBox(title = "Admissions so far", value = ec_1300()[[4,2]], color = "navy", icon = icon("hospital-user"))
    
  })
  
  output$ec1300_5 <- renderInfoBox({
    
    infoBox(title = "Remaining Today", value = ec_1300()[[5,2]], color = "navy", icon = icon("calculator"))
    
  })
  
  output$ec1300_6 <- renderInfoBox({
    
    infoBox(title = "Beds Available now", value = ec_1300()[[6,2]], color = ifelse(ec_1300()[[6,2]] < 5, "red", "green"), icon = icon("bed"))
    
  })
  
  output$ec1300_7 <- renderInfoBox({
    
    infoBox(title = "Definitive & Expected DC", value = ec_1300()[[7,2]], color = "navy", icon = icon("home"))
    
  })
  
  output$ec1300_8 <- renderInfoBox({
    
    infoBox(title = "Predicted Balance", value = ec_1300()[[8,2]], color = ifelse(ec_1300()[[8,2]] > 0, "green", "red"), icon = icon("balance-scale"))
    
  })
  
  pc_1300 <- reactive({
    req(input$file1)
    
    PC_1300 <- read_excel(input$file1$datapath, sheet = 4, range = "H6:K13", col_names = F)
    
    PC_1300$...1 <- gsub(":", "", PC_1300$...1)
    
    PC_1300 <- PC_1300 %>%
      select("Flow" = ...1,
             "Numbers" = ...4)
    
    return(PC_1300)
    
  })
  
  
  output$pc1300_1 <- renderInfoBox({
    
    infoBox(title = "Electives", value = pc_1300()[[1,2]], color = "navy", icon = icon("clipboard-list"))
    
  })
  
  output$pc1300_2 <- renderInfoBox({
    
    infoBox(title = "Predicted Emergencies", value = pc_1300()[[2,2]], color = "yellow", icon = icon("ambulance"))
    
  })
  
  output$pc1300_3 <- renderInfoBox({
    
    infoBox(title = "Total", value = pc_1300()[[3,2]], color = "navy", icon = icon("calculator"))
    
  })
  
  output$pc1300_4 <- renderInfoBox({
    
    infoBox(title = "Admissions so far", value = pc_1300()[[4,2]], color = "navy", icon = icon("hospital-user"))
    
  })
  
  output$pc1300_5 <- renderInfoBox({
    
    infoBox(title = "Remaining Today", value = pc_1300()[[5,2]], color = "navy", icon = icon("calculator"))
    
  })
  
  output$pc1300_6 <- renderInfoBox({
    
    infoBox(title = "Beds Available now", value = pc_1300()[[6,2]], color = ifelse(pc_1300()[[6,2]] < 5, "red", "green"), icon = icon("bed"))
    
  })
  
  output$pc1300_7 <- renderInfoBox({
    
    infoBox(title = "Definitive & Expected DC", value = pc_1300()[[7,2]], color = "navy", icon = icon("home"))
    
  })
  
  output$pc1300_8 <- renderInfoBox({
    
    infoBox(title = "Predicted Balance", value = pc_1300()[[8,2]], color = ifelse(pc_1300()[[8,2]] > 0, "green", "red"), icon = icon("balance-scale"))
    
  })
  
  tot_1300 <- reactive({
    
    req(input$file1)
    
    total_1300 <- read_excel(input$file1$datapath, sheet = 4, range = "M6:O13", col_names = F)
    
    total_1300$...1 <- gsub(":", "", total_1300$...1)
    
    total_1300 <- total_1300 %>%
      select("Flow" = ...1,
             "Numbers" = ...3)
    
    return(total_1300)
    
  })
  
  output$tot1300_1 <- renderInfoBox({
    
    infoBox(title = "Electives", value = tot_1300()[[1,2]], color = "navy", icon = icon("clipboard-list"))
    
  })
  
  output$tot1300_2 <- renderInfoBox({
    
    infoBox(title = "Predicted Emergencies", value = tot_1300()[[2,2]], color = "yellow", icon = icon("ambulance"))
    
  })
  
  output$tot1300_3 <- renderInfoBox({
    
    infoBox(title = "Total", value = tot_1300()[[3,2]], color = "navy", icon = icon("calculator"))
    
  })
  
  output$tot1300_4 <- renderInfoBox({
    
    infoBox(title = "Admissions so far", value = tot_1300()[[4,2]], color = "navy", icon = icon("hospital-user"))
    
  })
  
  output$tot1300_5 <- renderInfoBox({
    
    infoBox(title = "Remaining Today", value = tot_1300()[[5,2]], color = "navy", icon = icon("calculator"))
    
  })
  
  output$tot1300_6 <- renderInfoBox({
    
    infoBox(title = "Beds Available now", value = tot_1300()[[6,2]], color = ifelse(tot_1300()[[6,2]] < 5, "red", "green"), icon = icon("bed"))
    
  })
  
  output$tot1300_7 <- renderInfoBox({
    
    infoBox(title = "Definitive & Expected DC", value = tot_1300()[[7,2]], color = "navy", icon = icon("home"))
    
  })
  
  output$tot1300_8 <- renderInfoBox({
    
    infoBox(title = "Predicted Balance", value = tot_1300()[[8,2]], color = ifelse(tot_1300()[[8,2]] > 0, "green", "red"), icon = icon("balance-scale"))
    
  })
  
  ED1300 <- reactive({
    req(input$file1)
    ED_1300 <- read_excel(input$file1$datapath, sheet = 4, range = "J18:P18", col_names = F)
    
    colnames(ED_1300) <- c("Total",
                           "Longest",
                           "Assessment",
                           "Three_hours",
                           "DTA",
                           "Breaches",
                           "Midnight")
    
    if(is.character(ED_1300$Longest) == T){
      ED_1300$Longest <- ED_1300$Longest
    }else{
      ED_1300$Longest <- format(ED_1300$Longest, "%T")
    }
    
    if(is.character(ED_1300$Assessment) == T){
      ED_1300$Assessment <- ED_1300$Assessment
    }else{
      ED_1300$Assessment <- format(ED_1300$Assessment, "%T")
    }
    
    return(ED_1300)
  })
  
  output$ed1300_1 <- renderInfoBox({
    
    infoBox("Total Number", value = ED1300()[[1,1]],
            color = "navy",
            icon = icon("hospital-user"))
    
  })
  
  output$ed1300_2 <- renderInfoBox({
    
    infoBox("Longest Wait", value = ED1300()[[1,2]],
            color = "yellow",
            icon = icon("clock"))
  })
  
  
  output$ed1300_3 <- renderInfoBox({
    
    infoBox("Time to Assessment", value = ED1300()[[1,3]],
            color = "yellow",
            icon = icon("stopwatch"))
  })
  
  
  output$ed1300_4 <- renderInfoBox({
    
    infoBox("Number with 3 hours wait", value = ED1300()[[1,4]],
            color = ifelse(ED1300()[[1,4]] > 0, "red", "green"),
            icon = icon("exclamation-triangle"))
  })
  
  output$ed1300_5 <- renderInfoBox({
    
    infoBox("Number of DTA", value = ED1300()[[1,5]],
            color = ifelse(ED1300()[[1,5]] > 0, "purple", "green"),
            icon = icon("hospital"))
  })
  
  output$ed1300_6 <- renderInfoBox({
    
    infoBox("Breaches Since Midnight", value = ED1300()[[1,6]],
            color = ifelse(ED1300()[[1,6]] > 0, "purple", "green"),
            icon = icon("stopwatch"))
  })
  
  output$ed1300_7 <- renderInfoBox({
    
    infoBox("Attendances Since Midnight", value = ED1300()[[1,7]],
            color = "navy",
            icon = icon("hospital-user"))
  })
  
  
  
  au1300 <- reactive({
    req(input$file1)
    
    AU1_1300 <- read_excel(input$file1$datapath, sheet = 4, range = "J44:N44", col_names = F)
    AU2_1300 <- read_excel(input$file1$datapath, sheet = 4, range = "J47:N47", col_names = F)
    
    AU_1300 <- rbind(AU1_1300, AU2_1300)
    
    AU_1300 <- AU_1300 %>%
      select(-...2) %>%
      select("Now" = ...1,
             "Beds" = ...3,
             "DC" = ...4,
             "Ongoing" =...5)
    
    return(AU_1300)
  })
  
  
  output$au1_1300_1 <- renderInfoBox({
    
    infoBox(title = "Patients Now", color = "blue", value = au1300()[[1,1]], icon = icon("hospital-user"))
    
    
  })
  
  output$au1_1300_2 <- renderInfoBox({
    
    infoBox(title = "Bed Required", color = "blue", value = au1300()[[1,2]], icon = icon("bed"))
    
    
  })
  
  output$au1_1300_3 <- renderInfoBox({
    
    infoBox(title = "Definite Discharges", color = "blue", value = au1300()[[1,3]], icon = icon("home"))
    
    
  })
  
  output$au1_1300_4 <- renderInfoBox({
    
    infoBox(title = "Ongoing Assessment", color = "blue", value = au1300()[[1,4]], icon = icon("clipboard-check"))
    
    
  })
  
  output$au2_1300_1 <- renderInfoBox({
    
    infoBox(title = "Patients Now", color = "light-blue", value = au1300()[[2,1]], icon = icon("hospital-user"))
    
    
  })
  
  output$au2_1300_2 <- renderInfoBox({
    
    infoBox(title = "Bed Required", color = "light-blue", value = au1300()[[2,2]], icon = icon("bed"))
    
    
  })
  
  output$au2_1300_3 <- renderInfoBox({
    
    infoBox(title = "Definite Discharges", color = "light-blue", value = au1300()[[2,3]], icon = icon("home"))
    
    
  })
  
  output$au2_1300_4 <- renderInfoBox({
    
    infoBox(title = "Ongoing Assessment", color = "light-blue", value = au1300()[[2,4]], icon = icon("clipboard-check"))
    
    
  })
  
  output$cc1300 <- renderText({
    
    req(input$file1)
    
    cc_1300 <- read_excel(input$file1$datapath, sheet = 4, range = "J25:O29", col_names = F)
    
    colnames(cc_1300) <- c("Ward",
                           "Empty",
                           "Fit",
                           "Admissions",
                           "Discharges",
                           "End_Pos")
    
    cc_1300[, 1] <- c("ITU",
                      "SHDU",
                      "MHDU",
                      "RHDU",
                      "CCU")
    
    cc_1300 <- cc_1300 %>%
      mutate(
        End_Pos = cell_spec(End_Pos, "html", bold = T, color = "white", background = if_else(End_Pos >= 0, "#56b34b", "#c64040", "#1b1c21")),
      ) %>%
      select(
        "Ward" = Ward,
        "Empty Beds Now" = Empty,
        "Ward Fit Patients" = Fit,
        "Planned Admissions" = Admissions,
        "Discharges" = Discharges,
        "End of Day Position" = End_Pos,
      ) 
    
    kable(cc_1300, "html", escape = F) %>%
      kable_styling(full_width = T, position = "center", bootstrap_options = "condensed", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(cc_1300), align = "center", background = "#DCDCDC") %>%
      column_spec(1, bold = T, width = "8em")
    
  })
  
  
  
  output$med1300 <- renderText({
    req(input$file1)
    
    columns <- c("Ward", 
                 "Access",
                 "Specialty",
                 "Empty",
                 "Electives",
                 "DC_Expect",
                 "DC_1pm",
                 "End_Pos")
    
    med_1300 <- read_excel(input$file1$datapath, sheet = 4, range = "A18:H32", col_names = columns)
    
    med_1300 <- med_1300 %>%
      mutate(
        DC_Expect = cell_spec(DC_Expect, "html", bold = T, color = "white", background = if_else(DC_Expect > 0, "#56b34b", "#c64040", "#1b1c21")),
        DC_1pm = cell_spec(DC_1pm, "html", bold = T, color = "white", background = if_else(DC_1pm > 0, "#56b34b", "#c64040", "#1b1c21")),
        End_Pos = cell_spec(End_Pos, "html", bold = T, color = "white", background = if_else(End_Pos < 0, "#c64040", "#56b34b", "#1b1c21")),
      ) %>%
      select(
        "Ward" = Ward,
        "Access Quotas" = Access,
        "Specialty Bed Waits" = Specialty,
        "Empty Beds Now" = Empty,
        "Electives (GP's on board AU 1 & 2)" = Electives,
        "Discharges Expected" = DC_Expect,
        "Discharges by 1 pm" = DC_1pm,
        "End of Day Position" = End_Pos)
    
    kable(med_1300, "html", escape = F) %>%
      kable_styling(full_width = T, position = "center", bootstrap_options = "condensed", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(med_1300), align = "center", background = "#DCDCDC") %>%
      column_spec(2, color = "white", background = "#E79695") %>%
      column_spec(3, color = "white", background = "#DA7900") %>%
      column_spec(1, bold = T, width = "8em") %>%
      column_spec(5, width = "10em") %>%
      row_spec(nrow(med_1300), bold = T, color = "white", background = "#03396C")
    
  })
  
  output$sx1300 <- renderText({
    req(input$file1)
    
    columns <- c("Ward", 
                 "Access",
                 "Specialty",
                 "Empty",
                 "Electives",
                 "DC_Expect",
                 "DC_1pm",
                 "End_Pos")
    
    sx_1300 <- read_excel(input$file1$datapath, sheet = 4, range = "A34:H42", col_names = columns)
    
    sx_1300 <- sx_1300 %>%
      mutate(
        DC_Expect = cell_spec(DC_Expect, "html", bold = T, color = "white", background = if_else(DC_Expect > 0, "#56b34b", "#c64040", "#1b1c21")),
        DC_1pm = cell_spec(DC_1pm, "html", bold = T, color = "white", background = if_else(DC_1pm > 0, "#56b34b", "#c64040", "#1b1c21")),
        End_Pos = cell_spec(End_Pos, "html", bold = T, color = "white", background = if_else(End_Pos < 0, "#c64040", "#56b34b", "#1b1c21")),
      ) %>%
      select(
        "Ward" = Ward,
        "Access Quotas" = Access,
        "Specialty Bed Waits" = Specialty,
        "Empty Beds Now" = Empty,
        "Electives (GP's on board AU 1 & 2)" = Electives,
        "Discharges Expected" = DC_Expect,
        "Discharges by 1 pm" = DC_1pm,
        "End of Day Position" = End_Pos)
    
    kable(sx_1300, "html", escape = F) %>%
      kable_styling(full_width = T, position = "center", bootstrap_options = "condensed", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(sx_1300), align = "center", background = "#DCDCDC") %>%
      column_spec(2, color = "white", background = "#E79695") %>%
      column_spec(3, color = "white", background = "#DA7900") %>%
      column_spec(1, bold = T, width = "8em") %>%
      column_spec(5, width = "10em") %>%
      row_spec(nrow(sx_1300), bold = T, color = "white", background = "#03396C")
    
    
  })
  
  output$ot1300 <- renderText({
    req(input$file1)
    
    columns <- c("Ward", 
                 "Access",
                 "Specialty",
                 "Empty",
                 "Electives",
                 "DC_Expect",
                 "DC_1pm",
                 "End_Pos")
    
    ot_1300 <- read_excel(input$file1$datapath, sheet = 4, range = "A44:H46", col_names = columns)
    
    ot_1300 <- ot_1300 %>%
      mutate(
        DC_Expect = cell_spec(DC_Expect, "html", bold = T, color = "white", background = if_else(DC_Expect > 0, "#56b34b", "#c64040", "#1b1c21")),
        DC_1pm = cell_spec(DC_1pm, "html", bold = T, color = "white", background = if_else(DC_1pm > 0, "#56b34b", "#c64040", "#1b1c21")),
        End_Pos = cell_spec(End_Pos, "html", bold = T, color = "white", background = if_else(End_Pos < 0, "#c64040", "#56b34b", "#1b1c21")),
      ) %>%
      select(
        "Ward" = Ward,
        "Access Quotas" = Access,
        "Specialty Bed Waits" = Specialty,
        "Empty Beds Now" = Empty,
        "Electives (GP's on board AU 1 & 2)" = Electives,
        "Discharges Expected" = DC_Expect,
        "Discharges by 1 pm" = DC_1pm,
        "End of Day Position" = End_Pos)
    
    kable(ot_1300, "html", escape = F) %>%
      kable_styling(full_width = T, position = "center", bootstrap_options = "condensed", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(ot_1300), align = "center", background = "#DCDCDC") %>%
      column_spec(2, color = "white", background = "#E79695") %>%
      column_spec(3, color = "white", background = "#DA7900") %>%
      column_spec(1, bold = T, width = "8em") %>%
      column_spec(5, width = "10em") %>%
      row_spec(nrow(ot_1300), bold = T, color = "white", background = "#03396C")
    
    
    
  })
  
  
  output$add1300 <- renderText({
    req(input$file1)
    
    add_1300 <- read_excel(input$file1$datapath, sheet = 4, range = "J34:N40", col_names = F)
    
    add_1300 <- select(add_1300, -...3, -...5)
    
    colnames(add_1300) <- c("Ward", "Agreed", "Used")
    
    add_1300 <- add_1300 %>%
      mutate(Used = cell_spec(Used, bold = T, color = "white", background = if_else(Used > 0, "#c64040", "#56b34b", "#1b1c21"))
      ) %>%
      select("Ward" = Ward,
             "Agreed Additional Capacity" = Agreed,
             "Additional Beds in Use" = Used)
    
    kable(add_1300, "html", escape = F) %>%
      kable_styling(full_width = T, position = "center", bootstrap_options = "condensed", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#DA7900", color = "white") %>%
      row_spec(1:nrow(add_1300), align = "center", background = "#DCDCDC") %>%
      column_spec(1, bold = T, width = "8em") 
    
  })
  

# Normal 17:00 ------------------------------------------------------------

  ec_1700 <- reactive({
    req(input$file1)
    
    EC_1700 <- read_excel(input$file1$datapath, sheet = 5, range = "A6:F13", col_names = F)
    
    EC_1700$...1 <- gsub(":", "", EC_1700$...1)
    
    EC_1700 <- EC_1700 %>%
      select("FLow" = ...1,
             "Numbers" = ...6)
    
    return(EC_1700)
  })  
  
  output$ec1700_1 <- renderInfoBox({
    
    infoBox(title = "Electives", value = ec_1700()[[1,2]], color = "navy", icon = icon("clipboard-list"))
    
  })
  
  output$ec1700_2 <- renderInfoBox({
    
    infoBox(title = "Predicted Emergencies", value = ec_1700()[[2,2]], color = "yellow", icon = icon("ambulance"))
    
  })
  
  output$ec1700_3 <- renderInfoBox({
    
    infoBox(title = "Total", value = ec_1700()[[3,2]], color = "navy", icon = icon("calculator"))
    
  })
  
  output$ec1700_4 <- renderInfoBox({
    
    infoBox(title = "Admissions so far", value = ec_1700()[[4,2]], color = "navy", icon = icon("hospital-user"))
    
  })
  
  output$ec1700_5 <- renderInfoBox({
    
    infoBox(title = "Remaining Today", value = ec_1700()[[5,2]], color = "navy", icon = icon("calculator"))
    
  })
  
  output$ec1700_6 <- renderInfoBox({
    
    infoBox(title = "Beds Available now", value = ec_1700()[[6,2]], color = ifelse(ec_1700()[[6,2]] < 5, "red", "green"), icon = icon("bed"))
    
  })
  
  output$ec1700_7 <- renderInfoBox({
    
    infoBox(title = "Definitive & Expected DC", value = ec_1700()[[7,2]], color = "navy", icon = icon("home"))
    
  })
  
  output$ec1700_8 <- renderInfoBox({
    
    infoBox(title = "Predicted Balance", value = ec_1700()[[8,2]], color = ifelse(ec_1700()[[8,2]] > 0, "green", "red"), icon = icon("balance-scale"))
    
  })
  
  pc_1700 <- reactive({
    req(input$file1)
    
    PC_1700 <- read_excel(input$file1$datapath, sheet = 5, range = "H6:K13", col_names = F)
    
    PC_1700$...1 <- gsub(":", "", PC_1700$...1)
    
    PC_1700 <- PC_1700 %>%
      select("Flow" = ...1,
             "Numbers" = ...4)
    
    return(PC_1700)
    
  })
  
  
  output$pc1700_1 <- renderInfoBox({
    
    infoBox(title = "Electives", value = pc_1700()[[1,2]], color = "navy", icon = icon("clipboard-list"))
    
  })
  
  output$pc1700_2 <- renderInfoBox({
    
    infoBox(title = "Predicted Emergencies", value = pc_1700()[[2,2]], color = "yellow", icon = icon("ambulance"))
    
  })
  
  output$pc1700_3 <- renderInfoBox({
    
    infoBox(title = "Total", value = pc_1700()[[3,2]], color = "navy", icon = icon("calculator"))
    
  })
  
  output$pc1700_4 <- renderInfoBox({
    
    infoBox(title = "Admissions so far", value = pc_1700()[[4,2]], color = "navy", icon = icon("hospital-user"))
    
  })
  
  output$pc1700_5 <- renderInfoBox({
    
    infoBox(title = "Remaining Today", value = pc_1700()[[5,2]], color = "navy", icon = icon("calculator"))
    
  })
  
  output$pc1700_6 <- renderInfoBox({
    
    infoBox(title = "Beds Available now", value = pc_1700()[[6,2]], color = ifelse(pc_1700()[[6,2]] < 5, "red", "green"), icon = icon("bed"))
    
  })
  
  output$pc1700_7 <- renderInfoBox({
    
    infoBox(title = "Definitive & Expected DC", value = pc_1700()[[7,2]], color = "navy", icon = icon("home"))
    
  })
  
  output$pc1700_8 <- renderInfoBox({
    
    infoBox(title = "Predicted Balance", value = pc_1700()[[8,2]], color = ifelse(pc_1700()[[8,2]] > 0, "green", "red"), icon = icon("balance-scale"))
    
  })
  
  tot_1700 <- reactive({
    
    req(input$file1)
    
    total_1700 <- read_excel(input$file1$datapath, sheet = 5, range = "M6:O13", col_names = F)
    
    total_1700$...1 <- gsub(":", "", total_1700$...1)
    
    total_1700 <- total_1700 %>%
      select("Flow" = ...1,
             "Numbers" = ...3)
    
    return(total_1700)
    
  })
  
  output$tot1700_1 <- renderInfoBox({
    
    infoBox(title = "Electives", value = tot_1700()[[1,2]], color = "navy", icon = icon("clipboard-list"))
    
  })
  
  output$tot1700_2 <- renderInfoBox({
    
    infoBox(title = "Predicted Emergencies", value = tot_1700()[[2,2]], color = "yellow", icon = icon("ambulance"))
    
  })
  
  output$tot1700_3 <- renderInfoBox({
    
    infoBox(title = "Total", value = tot_1700()[[3,2]], color = "navy", icon = icon("calculator"))
    
  })
  
  output$tot1700_4 <- renderInfoBox({
    
    infoBox(title = "Admissions so far", value = tot_1700()[[4,2]], color = "navy", icon = icon("hospital-user"))
    
  })
  
  output$tot1700_5 <- renderInfoBox({
    
    infoBox(title = "Remaining Today", value = tot_1700()[[5,2]], color = "navy", icon = icon("calculator"))
    
  })
  
  output$tot1700_6 <- renderInfoBox({
    
    infoBox(title = "Beds Available now", value = tot_1700()[[6,2]], color = ifelse(tot_1700()[[6,2]] < 5, "red", "green"), icon = icon("bed"))
    
  })
  
  output$tot1700_7 <- renderInfoBox({
    
    infoBox(title = "Definitive & Expected DC", value = tot_1700()[[7,2]], color = "navy", icon = icon("home"))
    
  })
  
  output$tot1700_8 <- renderInfoBox({
    
    infoBox(title = "Predicted Balance", value = tot_1700()[[8,2]], color = ifelse(tot_1700()[[8,2]] > 0, "green", "red"), icon = icon("balance-scale"))
    
  })
  
  ED1700 <- reactive({
    req(input$file1)
    ED_1700 <- read_excel(input$file1$datapath, sheet = 5, range = "J18:P18", col_names = F)
    
    colnames(ED_1700) <- c("Total",
                           "Longest",
                           "Assessment",
                           "Three_hours",
                           "DTA",
                           "Breaches",
                           "Midnight")
    
    if(is.character(ED_1700$Longest) == T){
      ED_1700$Longest <- ED_1700$Longest
    }else{
      ED_1700$Longest <- format(ED_1700$Longest, "%T")
    }
    
    if(is.character(ED_1700$Assessment) == T){
      ED_1700$Assessment <- ED_1700$Assessment
    }else{
      ED_1700$Assessment <- format(ED_1700$Assessment, "%T")
    }
    
    return(ED_1700)
  })
  
  output$ed1700_1 <- renderInfoBox({
    
    infoBox("Total Number", value = ED1700()[[1,1]],
            color = "navy",
            icon = icon("hospital-user"))
    
  })
  
  output$ed1700_2 <- renderInfoBox({
    
    infoBox("Longest Wait", value = ED1700()[[1,2]],
            color = "yellow",
            icon = icon("clock"))
  })
  
  
  output$ed1700_3 <- renderInfoBox({
    
    infoBox("Time to Assessment", value = ED1700()[[1,3]],
            color = "yellow",
            icon = icon("stopwatch"))
  })
  
  
  output$ed1700_4 <- renderInfoBox({
    
    infoBox("Number with 3 hours wait", value = ED1700()[[1,4]],
            color = ifelse(ED1700()[[1,4]] > 0, "red", "green"),
            icon = icon("exclamation-triangle"))
  })
  
  output$ed1700_5 <- renderInfoBox({
    
    infoBox("Number of DTA", value = ED1700()[[1,5]],
            color = ifelse(ED1700()[[1,5]] > 0, "purple", "green"),
            icon = icon("hospital"))
  })
  
  output$ed1700_6 <- renderInfoBox({
    
    infoBox("Breaches Since Midnight", value = ED1700()[[1,6]],
            color = ifelse(ED1700()[[1,6]] > 0, "purple", "green"),
            icon = icon("stopwatch"))
  })
  
  output$ed1700_7 <- renderInfoBox({
    
    infoBox("Attendances Since Midnight", value = ED1700()[[1,7]],
            color = "navy",
            icon = icon("hospital-user"))
  })
  
  
  
  au1700 <- reactive({
    req(input$file1)
    
    AU1_1700 <- read_excel(input$file1$datapath, sheet = 5, range = "J44:N44", col_names = F)
    AU2_1700 <- read_excel(input$file1$datapath, sheet = 5, range = "J47:N47", col_names = F)
    
    AU_1700 <- rbind(AU1_1700, AU2_1700)
    
    AU_1700 <- AU_1700 %>%
      select(-...2) %>%
      select("Now" = ...1,
             "Beds" = ...3,
             "DC" = ...4,
             "Ongoing" =...5)
    
    return(AU_1700)
  })
  
  
  output$au1_1700_1 <- renderInfoBox({
    
    infoBox(title = "Patients Now", color = "blue", value = au1700()[[1,1]], icon = icon("hospital-user"))
    
    
  })
  
  output$au1_1700_2 <- renderInfoBox({
    
    infoBox(title = "Bed Required", color = "blue", value = au1700()[[1,2]], icon = icon("bed"))
    
    
  })
  
  output$au1_1700_3 <- renderInfoBox({
    
    infoBox(title = "Definite Discharges", color = "blue", value = au1700()[[1,3]], icon = icon("home"))
    
    
  })
  
  output$au1_1700_4 <- renderInfoBox({
    
    infoBox(title = "Ongoing Assessment", color = "blue", value = au1700()[[1,4]], icon = icon("clipboard-check"))
    
    
  })
  
  output$au2_1700_1 <- renderInfoBox({
    
    infoBox(title = "Patients Now", color = "light-blue", value = au1700()[[2,1]], icon = icon("hospital-user"))
    
    
  })
  
  output$au2_1700_2 <- renderInfoBox({
    
    infoBox(title = "Bed Required", color = "light-blue", value = au1700()[[2,2]], icon = icon("bed"))
    
    
  })
  
  output$au2_1700_3 <- renderInfoBox({
    
    infoBox(title = "Definite Discharges", color = "light-blue", value = au1700()[[2,3]], icon = icon("home"))
    
    
  })
  
  output$au2_1700_4 <- renderInfoBox({
    
    infoBox(title = "Ongoing Assessment", color = "light-blue", value = au1700()[[2,4]], icon = icon("clipboard-check"))
    
    
  })
  
  output$cc1700 <- renderText({
    
    req(input$file1)
    
    cc_1700 <- read_excel(input$file1$datapath, sheet = 5, range = "J25:O29", col_names = F)
    
    colnames(cc_1700) <- c("Ward",
                           "Empty",
                           "Fit",
                           "Admissions",
                           "Discharges",
                           "End_Pos")
    
    cc_1700[, 1] <- c("ITU",
                      "SHDU",
                      "MHDU",
                      "RHDU",
                      "CCU")
    
    cc_1700 <- cc_1700 %>%
      mutate(
        End_Pos = cell_spec(End_Pos, "html", bold = T, color = "white", background = if_else(End_Pos >= 0, "#56b34b", "#c64040", "#1b1c21")),
      ) %>%
      select(
        "Ward" = Ward,
        "Empty Beds Now" = Empty,
        "Ward Fit Patients" = Fit,
        "Planned Admissions" = Admissions,
        "Discharges" = Discharges,
        "End of Day Position" = End_Pos,
      ) 
    
    kable(cc_1700, "html", escape = F) %>%
      kable_styling(full_width = T, position = "center", bootstrap_options = "condensed", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(cc_1700), align = "center", background = "#DCDCDC") %>%
      column_spec(1, bold = T, width = "8em")
    
  })
  
  
  
  output$med1700 <- renderText({
    req(input$file1)
    
    columns <- c("Ward", 
                 "Access",
                 "Specialty",
                 "Empty",
                 "Electives",
                 "DC_Expect",
                 "DC_1pm",
                 "End_Pos")
    
    med_1700 <- read_excel(input$file1$datapath, sheet = 5, range = "A18:H32", col_names = columns)
    
    med_1700 <- med_1700 %>%
      mutate(
        DC_Expect = cell_spec(DC_Expect, "html", bold = T, color = "white", background = if_else(DC_Expect > 0, "#56b34b", "#c64040", "#1b1c21")),
        DC_1pm = cell_spec(DC_1pm, "html", bold = T, color = "white", background = if_else(DC_1pm > 0, "#56b34b", "#c64040", "#1b1c21")),
        End_Pos = cell_spec(End_Pos, "html", bold = T, color = "white", background = if_else(End_Pos < 0, "#c64040", "#56b34b", "#1b1c21")),
      ) %>%
      select(
        "Ward" = Ward,
        "Access Quotas" = Access,
        "Specialty Bed Waits" = Specialty,
        "Empty Beds Now" = Empty,
        "Electives (GP's on board AU 1 & 2)" = Electives,
        "Discharges Expected" = DC_Expect,
        "Discharges by 1 pm" = DC_1pm,
        "End of Day Position" = End_Pos)
    
    kable(med_1700, "html", escape = F) %>%
      kable_styling(full_width = T, position = "center", bootstrap_options = "condensed", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(med_1700), align = "center", background = "#DCDCDC") %>%
      column_spec(2, color = "white", background = "#E79695") %>%
      column_spec(3, color = "white", background = "#DA7900") %>%
      column_spec(1, bold = T, width = "8em") %>%
      column_spec(5, width = "10em") %>%
      row_spec(nrow(med_1700), bold = T, color = "white", background = "#03396C")
    
  })
  
  output$sx1700 <- renderText({
    req(input$file1)
    
    columns <- c("Ward", 
                 "Access",
                 "Specialty",
                 "Empty",
                 "Electives",
                 "DC_Expect",
                 "DC_1pm",
                 "End_Pos")
    
    sx_1700 <- read_excel(input$file1$datapath, sheet = 5, range = "A34:H42", col_names = columns)
    
    sx_1700 <- sx_1700 %>%
      mutate(
        DC_Expect = cell_spec(DC_Expect, "html", bold = T, color = "white", background = if_else(DC_Expect > 0, "#56b34b", "#c64040", "#1b1c21")),
        DC_1pm = cell_spec(DC_1pm, "html", bold = T, color = "white", background = if_else(DC_1pm > 0, "#56b34b", "#c64040", "#1b1c21")),
        End_Pos = cell_spec(End_Pos, "html", bold = T, color = "white", background = if_else(End_Pos < 0, "#c64040", "#56b34b", "#1b1c21")),
      ) %>%
      select(
        "Ward" = Ward,
        "Access Quotas" = Access,
        "Specialty Bed Waits" = Specialty,
        "Empty Beds Now" = Empty,
        "Electives (GP's on board AU 1 & 2)" = Electives,
        "Discharges Expected" = DC_Expect,
        "Discharges by 1 pm" = DC_1pm,
        "End of Day Position" = End_Pos)
    
    kable(sx_1700, "html", escape = F) %>%
      kable_styling(full_width = T, position = "center", bootstrap_options = "condensed", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(sx_1700), align = "center", background = "#DCDCDC") %>%
      column_spec(2, color = "white", background = "#E79695") %>%
      column_spec(3, color = "white", background = "#DA7900") %>%
      column_spec(1, bold = T, width = "8em") %>%
      column_spec(5, width = "10em") %>%
      row_spec(nrow(sx_1700), bold = T, color = "white", background = "#03396C")
    
    
  })
  
  output$ot1700 <- renderText({
    req(input$file1)
    
    columns <- c("Ward", 
                 "Access",
                 "Specialty",
                 "Empty",
                 "Electives",
                 "DC_Expect",
                 "DC_1pm",
                 "End_Pos")
    
    ot_1700 <- read_excel(input$file1$datapath, sheet = 5, range = "A44:H46", col_names = columns)
    
    ot_1700 <- ot_1700 %>%
      mutate(
        DC_Expect = cell_spec(DC_Expect, "html", bold = T, color = "white", background = if_else(DC_Expect > 0, "#56b34b", "#c64040", "#1b1c21")),
        DC_1pm = cell_spec(DC_1pm, "html", bold = T, color = "white", background = if_else(DC_1pm > 0, "#56b34b", "#c64040", "#1b1c21")),
        End_Pos = cell_spec(End_Pos, "html", bold = T, color = "white", background = if_else(End_Pos < 0, "#c64040", "#56b34b", "#1b1c21")),
      ) %>%
      select(
        "Ward" = Ward,
        "Access Quotas" = Access,
        "Specialty Bed Waits" = Specialty,
        "Empty Beds Now" = Empty,
        "Electives (GP's on board AU 1 & 2)" = Electives,
        "Discharges Expected" = DC_Expect,
        "Discharges by 1 pm" = DC_1pm,
        "End of Day Position" = End_Pos)
    
    kable(ot_1700, "html", escape = F) %>%
      kable_styling(full_width = T, position = "center", bootstrap_options = "condensed", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(ot_1700), align = "center", background = "#DCDCDC") %>%
      column_spec(2, color = "white", background = "#E79695") %>%
      column_spec(3, color = "white", background = "#DA7900") %>%
      column_spec(1, bold = T, width = "8em") %>%
      column_spec(5, width = "10em") %>%
      row_spec(nrow(ot_1700), bold = T, color = "white", background = "#03396C")
    
    
    
  })
  
  
  output$add1700 <- renderText({
    req(input$file1)
    
    add_1700 <- read_excel(input$file1$datapath, sheet = 5, range = "J34:N40", col_names = F)
    
    add_1700 <- select(add_1700, -...3, -...5)
    
    colnames(add_1700) <- c("Ward", "Agreed", "Used")
    
    add_1700 <- add_1700 %>%
      mutate(Used = cell_spec(Used, bold = T, color = "white", background = if_else(Used > 0, "#c64040", "#56b34b", "#1b1c21"))
      ) %>%
      select("Ward" = Ward,
             "Agreed Additional Capacity" = Agreed,
             "Additional Beds in Use" = Used)
    
    kable(add_1700, "html", escape = F) %>%
      kable_styling(full_width = T, position = "center", bootstrap_options = "condensed", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#DA7900", color = "white") %>%
      row_spec(1:nrow(add_1700), align = "center", background = "#DCDCDC") %>%
      column_spec(1, bold = T, width = "8em") 
    
  })



# Normal 19:00 ------------------------------------------------------------

  ec_1900 <- reactive({
    req(input$file1)
    
    EC_1900 <- read_excel(input$file1$datapath, sheet = 6, range = "A6:F13", col_names = F)
    
    EC_1900$...1 <- gsub(":", "", EC_1900$...1)
    
    EC_1900 <- EC_1900 %>%
      select("FLow" = ...1,
             "Numbers" = ...6)
    
    return(EC_1900)
  })  
  
  output$ec1900_1 <- renderInfoBox({
    
    infoBox(title = "Electives", value = ec_1900()[[1,2]], color = "navy", icon = icon("clipboard-list"))
    
  })
  
  output$ec1900_2 <- renderInfoBox({
    
    infoBox(title = "Predicted Emergencies", value = ec_1900()[[2,2]], color = "yellow", icon = icon("ambulance"))
    
  })
  
  output$ec1900_3 <- renderInfoBox({
    
    infoBox(title = "Total", value = ec_1900()[[3,2]], color = "navy", icon = icon("calculator"))
    
  })
  
  output$ec1900_4 <- renderInfoBox({
    
    infoBox(title = "Admissions so far", value = ec_1900()[[4,2]], color = "navy", icon = icon("hospital-user"))
    
  })
  
  output$ec1900_5 <- renderInfoBox({
    
    infoBox(title = "Remaining Today", value = ec_1900()[[5,2]], color = "navy", icon = icon("calculator"))
    
  })
  
  output$ec1900_6 <- renderInfoBox({
    
    infoBox(title = "Beds Available now", value = ec_1900()[[6,2]], color = ifelse(ec_1900()[[6,2]] < 5, "red", "green"), icon = icon("bed"))
    
  })
  
  output$ec1900_7 <- renderInfoBox({
    
    infoBox(title = "Definitive & Expected DC", value = ec_1900()[[7,2]], color = "navy", icon = icon("home"))
    
  })
  
  output$ec1900_8 <- renderInfoBox({
    
    infoBox(title = "Predicted Balance", value = ec_1900()[[8,2]], color = ifelse(ec_1900()[[8,2]] > 0, "green", "red"), icon = icon("balance-scale"))
    
  })
  
  pc_1900 <- reactive({
    req(input$file1)
    
    PC_1900 <- read_excel(input$file1$datapath, sheet = 6, range = "H6:K13", col_names = F)
    
    PC_1900$...1 <- gsub(":", "", PC_1900$...1)
    
    PC_1900 <- PC_1900 %>%
      select("Flow" = ...1,
             "Numbers" = ...4)
    
    return(PC_1900)
    
  })
  
  
  output$pc1900_1 <- renderInfoBox({
    
    infoBox(title = "Electives", value = pc_1900()[[1,2]], color = "navy", icon = icon("clipboard-list"))
    
  })
  
  output$pc1900_2 <- renderInfoBox({
    
    infoBox(title = "Predicted Emergencies", value = pc_1900()[[2,2]], color = "yellow", icon = icon("ambulance"))
    
  })
  
  output$pc1900_3 <- renderInfoBox({
    
    infoBox(title = "Total", value = pc_1900()[[3,2]], color = "navy", icon = icon("calculator"))
    
  })
  
  output$pc1900_4 <- renderInfoBox({
    
    infoBox(title = "Admissions so far", value = pc_1900()[[4,2]], color = "navy", icon = icon("hospital-user"))
    
  })
  
  output$pc1900_5 <- renderInfoBox({
    
    infoBox(title = "Remaining Today", value = pc_1900()[[5,2]], color = "navy", icon = icon("calculator"))
    
  })
  
  output$pc1900_6 <- renderInfoBox({
    
    infoBox(title = "Beds Available now", value = pc_1900()[[6,2]], color = ifelse(pc_1900()[[6,2]] < 5, "red", "green"), icon = icon("bed"))
    
  })
  
  output$pc1900_7 <- renderInfoBox({
    
    infoBox(title = "Definitive & Expected DC", value = pc_1900()[[7,2]], color = "navy", icon = icon("home"))
    
  })
  
  output$pc1900_8 <- renderInfoBox({
    
    infoBox(title = "Predicted Balance", value = pc_1900()[[8,2]], color = ifelse(pc_1900()[[8,2]] > 0, "green", "red"), icon = icon("balance-scale"))
    
  })
  
  tot_1900 <- reactive({
    
    req(input$file1)
    
    total_1900 <- read_excel(input$file1$datapath, sheet = 6, range = "M6:O13", col_names = F)
    
    total_1900$...1 <- gsub(":", "", total_1900$...1)
    
    total_1900 <- total_1900 %>%
      select("Flow" = ...1,
             "Numbers" = ...3)
    
    return(total_1900)
    
  })
  
  output$tot1900_1 <- renderInfoBox({
    
    infoBox(title = "Electives", value = tot_1900()[[1,2]], color = "navy", icon = icon("clipboard-list"))
    
  })
  
  output$tot1900_2 <- renderInfoBox({
    
    infoBox(title = "Predicted Emergencies", value = tot_1900()[[2,2]], color = "yellow", icon = icon("ambulance"))
    
  })
  
  output$tot1900_3 <- renderInfoBox({
    
    infoBox(title = "Total", value = tot_1900()[[3,2]], color = "navy", icon = icon("calculator"))
    
  })
  
  output$tot1900_4 <- renderInfoBox({
    
    infoBox(title = "Admissions so far", value = tot_1900()[[4,2]], color = "navy", icon = icon("hospital-user"))
    
  })
  
  output$tot1900_5 <- renderInfoBox({
    
    infoBox(title = "Remaining Today", value = tot_1900()[[5,2]], color = "navy", icon = icon("calculator"))
    
  })
  
  output$tot1900_6 <- renderInfoBox({
    
    infoBox(title = "Beds Available now", value = tot_1900()[[6,2]], color = ifelse(tot_1900()[[6,2]] < 5, "red", "green"), icon = icon("bed"))
    
  })
  
  output$tot1900_7 <- renderInfoBox({
    
    infoBox(title = "Definitive & Expected DC", value = tot_1900()[[7,2]], color = "navy", icon = icon("home"))
    
  })
  
  output$tot1900_8 <- renderInfoBox({
    
    infoBox(title = "Predicted Balance", value = tot_1900()[[8,2]], color = ifelse(tot_1900()[[8,2]] > 0, "green", "red"), icon = icon("balance-scale"))
    
  })
  
  ED1900 <- reactive({
    req(input$file1)
    ED_1900 <- read_excel(input$file1$datapath, sheet = 6, range = "J18:P18", col_names = F)
    
    colnames(ED_1900) <- c("Total",
                           "Longest",
                           "Assessment",
                           "Three_hours",
                           "DTA",
                           "Breaches",
                           "Midnight")
    
    if(is.character(ED_1900$Longest) == T){
      ED_1900$Longest <- ED_1900$Longest
    }else{
      ED_1900$Longest <- format(ED_1900$Longest, "%T")
    }
    
    if(is.character(ED_1900$Assessment) == T){
      ED_1900$Assessment <- ED_1900$Assessment
    }else{
      ED_1900$Assessment <- format(ED_1900$Assessment, "%T")
    }
    
    return(ED_1900)
  })
  
  output$ed1900_1 <- renderInfoBox({
    
    infoBox("Total Number", value = ED1900()[[1,1]],
            color = "navy",
            icon = icon("hospital-user"))
    
  })
  
  output$ed1900_2 <- renderInfoBox({
    
    infoBox("Longest Wait", value = ED1900()[[1,2]],
            color = "yellow",
            icon = icon("clock"))
  })
  
  
  output$ed1900_3 <- renderInfoBox({
    
    infoBox("Time to Assessment", value = ED1900()[[1,3]],
            color = "yellow",
            icon = icon("stopwatch"))
  })
  
  
  output$ed1900_4 <- renderInfoBox({
    
    infoBox("Number with 3 hours wait", value = ED1900()[[1,4]],
            color = ifelse(ED1900()[[1,4]] > 0, "red", "green"),
            icon = icon("exclamation-triangle"))
  })
  
  output$ed1900_5 <- renderInfoBox({
    
    infoBox("Number of DTA", value = ED1900()[[1,5]],
            color = ifelse(ED1900()[[1,5]] > 0, "purple", "green"),
            icon = icon("hospital"))
  })
  
  output$ed1900_6 <- renderInfoBox({
    
    infoBox("Breaches Since Midnight", value = ED1900()[[1,6]],
            color = ifelse(ED1900()[[1,6]] > 0, "purple", "green"),
            icon = icon("stopwatch"))
  })
  
  output$ed1900_7 <- renderInfoBox({
    
    infoBox("Attendances Since Midnight", value = ED1900()[[1,7]],
            color = "navy",
            icon = icon("hospital-user"))
  })
  
  
  
  au1900 <- reactive({
    req(input$file1)
    
    AU1_1900 <- read_excel(input$file1$datapath, sheet = 6, range = "J43:N43", col_names = F)
    AU2_1900 <- read_excel(input$file1$datapath, sheet = 6, range = "J46:N46", col_names = F)
    
    AU_1900 <- rbind(AU1_1900, AU2_1900)
    
    AU_1900 <- AU_1900 %>%
      select(-...2) %>%
      select("Now" = ...1,
             "Beds" = ...3,
             "DC" = ...4,
             "Ongoing" =...5)
    
    return(AU_1900)
  })
  
  
  output$au1_1900_1 <- renderInfoBox({
    
    infoBox(title = "Patients Now", color = "blue", value = au1900()[[1,1]], icon = icon("hospital-user"))
    
    
  })
  
  output$au1_1900_2 <- renderInfoBox({
    
    infoBox(title = "Bed Required", color = "blue", value = au1900()[[1,2]], icon = icon("bed"))
    
    
  })
  
  output$au1_1900_3 <- renderInfoBox({
    
    infoBox(title = "Definite Discharges", color = "blue", value = au1900()[[1,3]], icon = icon("home"))
    
    
  })
  
  output$au1_1900_4 <- renderInfoBox({
    
    infoBox(title = "Ongoing Assessment", color = "blue", value = au1900()[[1,4]], icon = icon("clipboard-check"))
    
    
  })
  
  output$au2_1900_1 <- renderInfoBox({
    
    infoBox(title = "Patients Now", color = "light-blue", value = au1900()[[2,1]], icon = icon("hospital-user"))
    
    
  })
  
  output$au2_1900_2 <- renderInfoBox({
    
    infoBox(title = "Bed Required", color = "light-blue", value = au1900()[[2,2]], icon = icon("bed"))
    
    
  })
  
  output$au2_1900_3 <- renderInfoBox({
    
    infoBox(title = "Definite Discharges", color = "light-blue", value = au1900()[[2,3]], icon = icon("home"))
    
    
  })
  
  output$au2_1900_4 <- renderInfoBox({
    
    infoBox(title = "Ongoing Assessment", color = "light-blue", value = au1900()[[2,4]], icon = icon("clipboard-check"))
    
    
  })
  
  output$cc1900 <- renderText({
    
    req(input$file1)
    
    cc_1900 <- read_excel(input$file1$datapath, sheet = 6, range = "J25:O29", col_names = F)
    
    colnames(cc_1900) <- c("Ward",
                           "Empty",
                           "Fit",
                           "Admissions",
                           "Discharges",
                           "End_Pos")
    
    cc_1900[, 1] <- c("ITU",
                      "SHDU",
                      "MHDU",
                      "RHDU",
                      "CCU")
    
    cc_1900 <- cc_1900 %>%
      mutate(
        End_Pos = cell_spec(End_Pos, "html", bold = T, color = "white", background = if_else(End_Pos >= 0, "#56b34b", "#c64040", "#1b1c21")),
      ) %>%
      select(
        "Ward" = Ward,
        "Empty Beds Now" = Empty,
        "Ward Fit Patients" = Fit,
        "Planned Admissions" = Admissions,
        "Discharges" = Discharges,
        "End of Day Position" = End_Pos,
      ) 
    
    kable(cc_1900, "html", escape = F) %>%
      kable_styling(full_width = T, position = "center", bootstrap_options = "condensed", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(cc_1900), align = "center", background = "#DCDCDC") %>%
      column_spec(1, bold = T, width = "8em")
    
  })
  
  
  
  output$med1900 <- renderText({
    req(input$file1)
    
    columns <- c("Ward", 
                 "Access",
                 "Specialty",
                 "Empty",
                 "Electives",
                 "DC_Expect",
                 "DC_1pm",
                 "End_Pos")
    
    med_1900 <- read_excel(input$file1$datapath, sheet = 6, range = "A18:H32", col_names = columns)
    
    med_1900 <- med_1900 %>%
      mutate(
        DC_Expect = cell_spec(DC_Expect, "html", bold = T, color = "white", background = if_else(DC_Expect > 0, "#56b34b", "#c64040", "#1b1c21")),
        DC_1pm = cell_spec(DC_1pm, "html", bold = T, color = "white", background = if_else(DC_1pm > 0, "#56b34b", "#c64040", "#1b1c21")),
        End_Pos = cell_spec(End_Pos, "html", bold = T, color = "white", background = if_else(End_Pos < 0, "#c64040", "#56b34b", "#1b1c21")),
      ) %>%
      select(
        "Ward" = Ward,
        "Access Quotas" = Access,
        "Specialty Bed Waits" = Specialty,
        "Empty Beds Now" = Empty,
        "Electives (GP's on board AU 1 & 2)" = Electives,
        "Discharges Expected" = DC_Expect,
        "Discharges by 1 pm" = DC_1pm,
        "End of Day Position" = End_Pos)
    
    kable(med_1900, "html", escape = F) %>%
      kable_styling(full_width = T, position = "center", bootstrap_options = "condensed", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(med_1900), align = "center", background = "#DCDCDC") %>%
      column_spec(2, color = "white", background = "#E79695") %>%
      column_spec(3, color = "white", background = "#DA7900") %>%
      column_spec(1, bold = T, width = "8em") %>%
      column_spec(5, width = "10em") %>%
      row_spec(nrow(med_1900), bold = T, color = "white", background = "#03396C")
    
  })
  
  output$sx1900 <- renderText({
    req(input$file1)
    
    columns <- c("Ward", 
                 "Access",
                 "Specialty",
                 "Empty",
                 "Electives",
                 "DC_Expect",
                 "DC_1pm",
                 "End_Pos")
    
    sx_1900 <- read_excel(input$file1$datapath, sheet = 6, range = "A34:H41", col_names = columns)
    
    sx_1900 <- sx_1900 %>%
      mutate(
        DC_Expect = cell_spec(DC_Expect, "html", bold = T, color = "white", background = if_else(DC_Expect > 0, "#56b34b", "#c64040", "#1b1c21")),
        DC_1pm = cell_spec(DC_1pm, "html", bold = T, color = "white", background = if_else(DC_1pm > 0, "#56b34b", "#c64040", "#1b1c21")),
        End_Pos = cell_spec(End_Pos, "html", bold = T, color = "white", background = if_else(End_Pos < 0, "#c64040", "#56b34b", "#1b1c21")),
      ) %>%
      select(
        "Ward" = Ward,
        "Access Quotas" = Access,
        "Specialty Bed Waits" = Specialty,
        "Empty Beds Now" = Empty,
        "Electives (GP's on board AU 1 & 2)" = Electives,
        "Discharges Expected" = DC_Expect,
        "Discharges by 1 pm" = DC_1pm,
        "End of Day Position" = End_Pos)
    
    kable(sx_1900, "html", escape = F) %>%
      kable_styling(full_width = T, position = "center", bootstrap_options = "condensed", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(sx_1900), align = "center", background = "#DCDCDC") %>%
      column_spec(2, color = "white", background = "#E79695") %>%
      column_spec(3, color = "white", background = "#DA7900") %>%
      column_spec(1, bold = T, width = "8em") %>%
      column_spec(5, width = "10em") %>%
      row_spec(nrow(sx_1900), bold = T, color = "white", background = "#03396C")
    
    
  })
  
  output$ot1900 <- renderText({
    req(input$file1)
    
    columns <- c("Ward", 
                 "Access",
                 "Specialty",
                 "Empty",
                 "Electives",
                 "DC_Expect",
                 "DC_1pm",
                 "End_Pos")
    
    ot_1900 <- read_excel(input$file1$datapath, sheet = 6, range = "A43:H45", col_names = columns)
    
    ot_1900 <- ot_1900 %>%
      mutate(
        DC_Expect = cell_spec(DC_Expect, "html", bold = T, color = "white", background = if_else(DC_Expect > 0, "#56b34b", "#c64040", "#1b1c21")),
        DC_1pm = cell_spec(DC_1pm, "html", bold = T, color = "white", background = if_else(DC_1pm > 0, "#56b34b", "#c64040", "#1b1c21")),
        End_Pos = cell_spec(End_Pos, "html", bold = T, color = "white", background = if_else(End_Pos < 0, "#c64040", "#56b34b", "#1b1c21")),
      ) %>%
      select(
        "Ward" = Ward,
        "Access Quotas" = Access,
        "Specialty Bed Waits" = Specialty,
        "Empty Beds Now" = Empty,
        "Electives (GP's on board AU 1 & 2)" = Electives,
        "Discharges Expected" = DC_Expect,
        "Discharges by 1 pm" = DC_1pm,
        "End of Day Position" = End_Pos)
    
    kable(ot_1900, "html", escape = F) %>%
      kable_styling(full_width = T, position = "center", bootstrap_options = "condensed", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(ot_1900), align = "center", background = "#DCDCDC") %>%
      column_spec(2, color = "white", background = "#E79695") %>%
      column_spec(3, color = "white", background = "#DA7900") %>%
      column_spec(1, bold = T, width = "8em") %>%
      column_spec(5, width = "10em") %>%
      row_spec(nrow(ot_1900), bold = T, color = "white", background = "#03396C")
    
    
    
  })
  
  
  output$add1900 <- renderText({
    req(input$file1)
    
    add_1900 <- read_excel(input$file1$datapath, sheet = 6, range = "J34:N39", col_names = F)
    
    add_1900 <- select(add_1900, -...3, -...5)
    
    colnames(add_1900) <- c("Ward", "Agreed", "Used")
    
    add_1900 <- add_1900 %>%
      mutate(Used = cell_spec(Used, bold = T, color = "white", background = if_else(Used > 0, "#c64040", "#56b34b", "#1b1c21"))
      ) %>%
      select("Ward" = Ward,
             "Agreed Additional Capacity" = Agreed,
             "Additional Beds in Use" = Used)
    
    kable(add_1900, "html", escape = F) %>%
      kable_styling(full_width = T, position = "center", bootstrap_options = "condensed", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#DA7900", color = "white") %>%
      row_spec(1:nrow(add_1900), align = "center", background = "#DCDCDC") %>%
      column_spec(1, bold = T, width = "8em") 
    
  })
  
  
# COVID Section -----------------------------------------------------------
  
  output$COVID_date <- renderText({
    req(input$file2)
    
    report_date <- read_excel(input$file2$datapath, sheet = 2, range = "D4", col_names = F)
    
    report_date <- report_date[[1]]
    
    if(is.character(report_date) == F){
      report_date <- as.character(report_date)
    }else{
      report_date < report_date
    }
    
    return(report_date)
    
    report_date
  })
  

# COVID Night Report ------------------------------------------------------

  nrc_summary <- reactive({
    
    req(input$file2)
    
    sum_nrc <- read_excel(input$file2$datapath, sheet = 2, range = "B7:G13", col_names = F) %>%
      select("Summary" = ...1,
             "Numbers" = ...6)
    
    return(sum_nrc)
    
  })
  
  output$nrc_predicted <- renderInfoBox({
    infoBox("Predicted Emergency Admissions", value = nrc_summary()[[1, 2]], color = "red", icon = icon("ambulance"))  
  })
  
  output$nrc_electives <- renderInfoBox({
    infoBox("Electives", value = nrc_summary()[[2, 2]], color = "blue", icon = icon("clipboard-list"))
  })
  
  output$nrc_total <- renderInfoBox({
    infoBox("Total", value = nrc_summary()[[3, 2]], color = "blue", icon = icon("calculator"))
  })
  output$nrc_admissions <- renderInfoBox({
    infoBox("Admissions So Far", value = nrc_summary()[[4, 2]], color = "blue", icon = icon("hospital"))
  })
  output$nrc_remain <- renderInfoBox({
    infoBox("Remaining Today", value = nrc_summary()[[5, 2]], color = "blue", icon = icon("clipboard"))
  })
  
  output$nrc_dc_expected <- renderInfoBox({
    infoBox("Definite & Expected Discharges", value = nrc_summary()[[6, 2]], color = "blue", icon = icon("home"))
  })
  
  output$nrc_balance <- renderInfoBox({
    
    infoBox("Predicted Balance", value = nrc_summary()[[7, 2]], color = "blue", icon = icon("balance-scale"))
  })
  
  
  
  nrc_ed <- reactive({
    req(input$file2)
    
    ed_nrc <- read_excel(input$file2$datapath, sheet = 2, range = "I9:P9", col_names = F) %>%
      select(-...3, -...6)
    
    new_col <- c("Total", "Longest", "Assess", "DTA", "Breaches", "Attendances")
    
    colnames(ed_nrc) <- new_col
    
    if(is.POSIXct(ed_nrc$Longest) == T){
      ed_nrc$Longest <- format(ed_nrc$Longest, "%T")
      }else{
      ed_nrc$Longest <- ed_nrc$Longest
      }
    
    if(is.POSIXct(ed_nrc$Assess) == T){
      ed_nrc$Assess <- format(ed_nrc$Assess, "%T")
    }else{
      ed_nrc$Assess <- ed_nrc$Assess
      }
    
    return(ed_nrc)
    })
  
  
  output$nrc_ED_1 <- renderInfoBox({
    infoBox("Total in ED", value = nrc_ed()[1, 1], color = "blue", icon = icon("hospital-user"))
  })
  output$nrc_ED_2 <- renderInfoBox({
    infoBox("Longest Wait", value = nrc_ed()[[1, 2]], color = "yellow", icon = icon("clock"))
  })
  output$nrc_ED_3 <- renderInfoBox({
    infoBox("Time to Assessment", value = nrc_ed()[[1, 3]], color = "yellow", icon = icon("stopwatch"))
  })
  output$nrc_ED_4 <- renderInfoBox({
    infoBox("No. with DTA", value = nrc_ed()[[1, 4]], color = colour_numbers(nrc_ed()[[1, 4]]), icon = icon("hospital"))
  })
  output$nrc_ED_5 <- renderInfoBox({
    infoBox("Breaches since Midnight", value = nrc_ed()[[1, 5]], color = colour_breaches(nrc_ed()[[1, 5]]), icon = icon("stopwatch"))
  })
  output$nrc_ED_6 <- renderInfoBox({
    infoBox("Attendances since Midnight", value = nrc_ed()[[1, 6]], color = "blue", icon = icon("hospital-user"))
  })
  
  nrc_aaa <- reactive({
    req(input$file2)
    
    aaa_nrc <- read_excel(input$file2$datapath, sheet = 2, range = "I14:O14", col_names = F) %>%
      select(-...3, -...6)
    
    return(aaa_nrc)
  })
  
  output$nrc_aa_1 <- renderInfoBox({
    
    infoBox("Patients Now", value = nrc_aaa()[[1,1]], color = "navy", icon = icon("hospital-user"))
  })
  
  output$nrc_aa_2 <- renderInfoBox({
    
    infoBox("Beds Required", value = nrc_aaa()[[1,2]], color = "navy", icon = icon("bed"))
  })
  
  output$nrc_aa_3 <- renderInfoBox({
    
    infoBox("Discharges", value = nrc_aaa()[[1,3]], color = "green", icon = icon("home"))
  })
  
  output$nrc_aa_4 <- renderInfoBox({
    
    infoBox("Ongoing Assessment", value = nrc_aaa()[[1,4]], color = "navy", icon = icon("clipboard-check"))
  })
  
  output$nrc_aa_5 <- renderInfoBox({
    
    infoBox("GP's To Come In", value = nrc_aaa()[[1,5]], color = "yellow", icon = icon("ambulance"))
  })

  output$nrc_red_cc <- renderText({
    req(input$file2)
    
    redcc_nrc <- read_excel(input$file2$datapath, sheet = 2, range = "B21:I26", col_names = F) %>%
      select(-...1)
    
    columns_cc <- c("Unit", "Compliment", "Empty", "Occ", "Fit", "Adm", "DC")
    
    colnames(redcc_nrc) <- columns_cc
    
    redcc_nrc$Occ <- as.numeric(redcc_nrc$Occ)
    
    redcc_nrc$Occ <- paste0(as.character(round(redcc_nrc$Occ*100, 0)), "%")
    
    redcc_nrc <- redcc_nrc %>%
      filter(!is.na(Unit)) %>%
      mutate(Empty = cell_spec(Empty, color = "white", background = if_else(Empty == 0, "#c64040", "#56b34b", "#1b1c21"))) %>%
      select("Unit" = Unit,
             "Bed Compliment" = Compliment,
             "Empty Beds" = Empty,
             "Occupancy" = Occ,
             "No. Ward Fit" = Fit,
             "Admissions Today" = Adm,
             "Expected Discharges" = DC)
    
    
    
    
    
    redcc_nrc_table <- kable(redcc_nrc, "html", escape = F) %>%
      kable_styling(full_width = T, bootstrap_options = "condensed", position = "center", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(redcc_nrc), align = "center") %>%
      column_spec(1, bold = T, color = "white", width = "8em") %>%
      column_spec(c(2:7), background = "#edf5f9", color = "black") %>%
      row_spec(nrow(redcc_nrc), bold = T, color = "white", background = "#78091b", font_size = 20)
    
    return(redcc_nrc_table)
      
  })
  
  
  output$nrc_green_cc <- renderText({
    req(input$file2)
    
    greencc_nrc <- read_excel(input$file2$datapath, sheet = 2, range = "K21:Q26", col_names = F) 
    
    columns_cc <- c("Unit", "Compliment", "Empty", "Occ", "Fit", "Adm", "DC")
    
    colnames(greencc_nrc) <- columns_cc
    
    greencc_nrc$Occ <- as.numeric(greencc_nrc$Occ)
    
    greencc_nrc$Occ <- paste0(as.character(round(greencc_nrc$Occ*100, 0)), "%")
    
    greencc_nrc <- greencc_nrc %>%
      filter(!is.na(Unit)) %>%
      mutate(Empty = cell_spec(Empty, color = "white", background = if_else(Empty == 0, "#c64040", "#56b34b", "#1b1c21"))) %>%
      select("Unit" = Unit,
             "Bed Compliment" = Compliment,
             "Empty Beds" = Empty,
             "Occupancy" = Occ,
             "No. Ward Fit" = Fit,
             "Admissions Today" = Adm,
             "Expected Discharges" = DC)
    
    greencc_nrc_table <- kable(greencc_nrc, "html", escape = F) %>%
      kable_styling(full_width = T, bootstrap_options = "condensed", position = "center", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(greencc_nrc), align = "center") %>%
      column_spec(1, bold = T, color = "white", width = "8em") %>%
      column_spec(c(2:7), background = "#edf5f9", color = "black") %>%
      row_spec(nrow(greencc_nrc), bold = T, color = "white", background = "#004709", font_size = 20)
    
    return(greencc_nrc_table)
    
  })
  
  
  output$nrc_red_adult <- renderText({
    req(input$file2)
    
    redadult_nrc <- read_excel(input$file2$datapath, sheet = 2, range = "B29:I48", col_names = F) %>%
      select(-...1)
    
    columns_ad <- c("Unit", "Compliment", "Empty", "Occ", "Electives", "DC_Exp", "DC_Ach")
    
    colnames(redadult_nrc) <- columns_ad
    
    redadult_nrc$Occ <- as.numeric(redadult_nrc$Occ)
    
    redadult_nrc$Occ <- paste0(as.character(round(redadult_nrc$Occ*100, 0)), "%")
    
    redadult_nrc <- redadult_nrc %>%
      filter(!is.na(Unit)) %>%
      mutate(Empty = cell_spec(Empty, color = "white", background = if_else(Empty == 0, "#c64040", "#56b34b", "#1b1c21"))) %>%
      select("Unit" = Unit,
             "Bed Compliment" = Compliment,
             "Empty Beds" = Empty,
             "Occupancy" = Occ,
             "Electives" = Electives,
             "Discharges Expected" = DC_Exp,
             "Discharges Achieved" = DC_Ach)
    
    
    
    
    
    redadult_nrc_table <- kable(redadult_nrc, "html", escape = F) %>%
      kable_styling(full_width = T, bootstrap_options = "condensed", position = "center", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(redadult_nrc), align = "center") %>%
      column_spec(1, bold = T, color = "white", width = "8em") %>%
      column_spec(c(2:7), background = "#edf5f9", color = "black") %>%
      row_spec(nrow(redadult_nrc), bold = T, color = "white", background = "#78091b", font_size = 20)
    
    return(redadult_nrc_table)
    
  })
  
  output$nrc_green_adult <- renderText({
    req(input$file2)
    
    greenadult_nrc <- read_excel(input$file2$datapath, sheet = 2, range = "K29:Q48", col_names = F) 
    
    columns_ad <- c("Unit", "Compliment", "Empty", "Occ", "Electives", "DC_Exp", "DC_Ach")
    
    colnames(greenadult_nrc) <- columns_ad
    
    greenadult_nrc$Occ <- as.numeric(greenadult_nrc$Occ)
    
    greenadult_nrc$Occ <- paste0(as.character(round(greenadult_nrc$Occ*100, 0)), "%")
    
    greenadult_nrc <- greenadult_nrc %>%
      filter(!is.na(Unit)) %>%
      mutate(Empty = cell_spec(Empty, color = "white", background = if_else(Empty == 0, "#c64040", "#56b34b", "#1b1c21"))) %>%
      select("Unit" = Unit,
             "Bed Compliment" = Compliment,
             "Empty Beds" = Empty,
             "Occupancy" = Occ,
             "Electives" = Electives,
             "Discharges Expected" = DC_Exp,
             "Discharges Achieved" = DC_Ach)
    
    greenadult_nrc_table <- kable(greenadult_nrc, "html", escape = F) %>%
      kable_styling(full_width = T, bootstrap_options = "condensed", position = "center", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(greenadult_nrc), align = "center") %>%
      column_spec(1, bold = T, color = "white", width = "8em") %>%
      column_spec(c(2:7), background = "#edf5f9", color = "black") %>%
      row_spec(nrow(greenadult_nrc), bold = T, color = "white", background = "#004709", font_size = 20)
    
    return(greenadult_nrc_table)
    
  })
  
  
  output$nrc_red_wac <- renderText({
    req(input$file2)
    
    redwac_nrc <- read_excel(input$file2$datapath, sheet = 2, range = "C51:I58", col_names = F) 
    
    columns_ad <- c("Unit", "Compliment", "Empty", "Occ", "Electives", "DC_Exp", "DC_Ach")
    
    colnames(redwac_nrc) <- columns_ad
    
    redwac_nrc$Occ <- as.numeric(redwac_nrc$Occ)
    
    redwac_nrc$Occ <- paste0(as.character(round(redwac_nrc$Occ*100, 0)), "%")
    
    redwac_nrc <- redwac_nrc %>%
      filter(!is.na(Unit)) %>%
      mutate(Empty = cell_spec(Empty, color = "white", background = if_else(Empty == 0, "#c64040", "#56b34b", "#1b1c21"))) %>%
      select("Unit" = Unit,
             "Bed Compliment" = Compliment,
             "Empty Beds" = Empty,
             "Occupancy" = Occ,
             "Electives" = Electives,
             "Discharges Expected" = DC_Exp,
             "Discharges by 1pm" = DC_Ach)
    
    redwac_nrc_table <- kable(redwac_nrc, "html", escape = F) %>%
      kable_styling(full_width = T, bootstrap_options = "condensed", position = "center", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(redwac_nrc), align = "center") %>%
      column_spec(1, bold = T, color = "white", width = "8em") %>%
      column_spec(c(2:7), background = "#edf5f9", color = "black") %>%
      row_spec(nrow(redwac_nrc), bold = T, color = "white", background = "#78091b", font_size = 20)
    
    return(redwac_nrc_table)
    
  })
  
  output$nrc_green_wac <- renderText({
    req(input$file2)
    
    greenwac_nrc <- read_excel(input$file2$datapath, sheet = 2, range = "K51:Q58", col_names = F) 
    
    columns_ad <- c("Unit", "Compliment", "Empty", "Occ", "Electives", "DC_Exp", "DC_Ach")
    
    colnames(greenwac_nrc) <- columns_ad
    
    greenwac_nrc$Occ <- as.numeric(greenwac_nrc$Occ)
    
    greenwac_nrc$Occ <- paste0(as.character(round(greenwac_nrc$Occ*100, 0)), "%")
    
    greenwac_nrc[8, 5] <- colSums(greenwac_nrc[, 5], na.rm = T)
    
    greenwac_nrc[8, 6] <- colSums(greenwac_nrc[, 6], na.rm = T)
    
    greenwac_nrc[8, 7] <- colSums(greenwac_nrc[, 7], na.rm = T)
    
    greenwac_nrc <- greenwac_nrc %>%
      filter(!is.na(Unit)) %>%
      mutate(Empty = cell_spec(Empty, color = "white", background = if_else(Empty == 0, "#c64040", "#56b34b", "#1b1c21"))) %>%
      select("Unit" = Unit,
             "Bed Compliment" = Compliment,
             "Empty Beds" = Empty,
             "Occupancy" = Occ,
             "Electives" = Electives,
             "Discharges Expected" = DC_Exp,
             "Discharges by 1pm" = DC_Ach)
    
    greenwac_nrc_table <- kable(greenwac_nrc, "html", escape = F) %>%
      kable_styling(full_width = T, bootstrap_options = "condensed", position = "center", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(greenwac_nrc), align = "center") %>%
      column_spec(1, bold = T, color = "white", width = "8em") %>%
      column_spec(c(2:7), background = "#edf5f9", color = "black") %>%
      row_spec(nrow(greenwac_nrc), bold = T, color = "white", background = "#004709", font_size = 20)
    
    return(greenwac_nrc_table)
    
  })
  
  
  

# COVID Safety Huddle -----------------------------------------------------

  shc_care <- reactive({
    req(input$file2)
    shc_concerns <- read_excel(input$file2$datapath, sheet = 1, range = "H2:O14", col_names = F, trim_ws = T) %>%
      filter(!is.na(...1)) %>%
      select("Concerns" = ...1, 
             "Details" = ...5)
    
    concerns <- c("PATIENTRAK Dashboard (FEWS etc)", 
                  "Other Clinical Concerns",
                  "Urgent COVID-19 Updates",
                  "PPE/Procurement Update",
                  "Staff Issues - All Groups",
                  "Other Concerns")
    
    shc_concerns$Concerns <- concerns
    
    return(shc_concerns)
  })
  
  output$shc_care_con <- renderText({
    care_kable <- shc_care()
    
    kable(care_kable, "html") %>%
      kable_styling(full_width = T, font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#f0e2c3", color = "#090b15") %>%
      row_spec(1:4, align = "left", background = "#c8c26c") %>%
      row_spec(5:6, align = "left", background = "#e8bd8b") %>%
      column_spec(1, bold = T, color = "#1c2039", width = "12em") %>%
      column_spec(2, bold = "F", background = "#ca6454", color = "white")
    
  })
  
  shc_ss <- reactive({
    req(input$file2)
    
    shc_support <- read_excel(input$file2$datapath, sheet = 1, range = "P3:W14", col_names = F, trim_ws = T) %>%
      filter(!is.na(...1)) %>%
      select("Department" = ...1,
             "Details" = ...5)
    
    shc_support[3,1] <- "INFECTION PREVENTION & CONTROL (EXT 28102)"
    
    return(shc_support)
  })
  
  output$shc_ss1 <- renderInfoBox({
    infoBox(title = "Laboratories (Ext 28102)", value = shc_ss()[[1, 2]], color = "navy", icon = icon("microscope"))
  })
  
  output$shc_ss2 <- renderInfoBox({
    infoBox(title = "Radiology (Ext 28325)", value = shc_ss()[[2, 2]], color = "navy", icon = icon("x-ray"))
  })
  
  output$shc_ss3 <- renderInfoBox({
    infoBox(title = "Infection Prevention & Control (Ext 28102)", value = shc_ss()[[3, 2]], color = "fuchsia", icon = icon("shield-virus"))
  })
  
  output$shc_ss4 <- renderInfoBox({
    infoBox(title = "Pharmacy (Ext 21052)", value = shc_ss()[[4, 2]], color = "olive", icon = icon("prescription"))
  })
  
  output$shc_ss5 <- renderInfoBox({
    infoBox(title = "Estates, Portering & Facilities", value = shc_ss()[[5, 2]], color = "teal", icon = icon("wrench"))
  })
  
  output$shc_ss6 <- renderInfoBox({
    infoBox(title = "Discharge Hub (Ext 23990)", value = shc_ss()[[6, 2]], color = "blue", icon = icon("home"))
  })
  
  output$shc_ss7 <- renderInfoBox({
    infoBox(title = "Procurement (Ext 21346)", value = shc_ss()[[7, 2]], color = "teal", icon = icon("shopping-cart"))
  })
  

# SG Report ---------------------------------------------------------------

  sg <- reactive({
    req(input$file2)
    
    sg_covid <- read_excel(input$file2$datapath, sheet = 4, range = "C7:D25", col_names = F)
    
    return(sg_covid)
  })
  
  output$sg1 <- renderInfoBox({
    infoBox(title = "Green Adult Acute", value = sg()[[1,2]], color = "olive", icon = icon("male"))
  })
  
  output$sg2 <- renderInfoBox({
    infoBox(title = "Green Closed Ward", value = sg()[[2,2]], color = "olive", icon = icon("times-circle"))
  })
  
  output$sg3 <- renderInfoBox({
    infoBox(title = "Green Women and Children", value = sg()[[3,2]], color = "olive", icon = icon("baby"))
  })
  
  output$sg4 <- renderValueBox({
    valueBox(value = sg()[[4,2]], subtitle = "Total", color = "blue")
  })
  
  output$sg5 <- renderInfoBox({
    infoBox(title = "Red Adult Acute", value = sg()[[5,2]], color = "maroon", icon = icon("male"))
  })
  
  output$sg6 <- renderInfoBox({
    infoBox(title = "Red Women and Children", value = sg()[[6,2]], color = "maroon", icon = icon("baby"))
  })
  
  output$sg7 <- renderValueBox({
    valueBox(value = sg()[[7,2]], subtitle = "Total", color = "blue")
  })
  
  output$sg8 <- renderInfoBox({
    infoBox(title = "Red Critical Care", value = sg()[[8,2]], color = "maroon", icon = icon("syringe"))
  })
  
  output$sg9 <- renderInfoBox({
    infoBox(title = "Green Critical Care", value = sg()[[9,2]], color = "olive", icon = icon("syringe"))
  })
  
  output$sg10 <- renderValueBox({
    valueBox(value = sg()[[10,2]], subtitle = "Total", color = "blue")
  })
  
  output$sg11 <- renderInfoBox({
    infoBox(title = "Red Critical Care", value = sg()[[11,2]], color = "maroon", icon = icon("syringe"))
  })
  
  output$sg12 <- renderInfoBox({
    infoBox(title = "Green Critical Care", value = sg()[[12,2]], color = "olive", icon = icon("syringe"))
  })
  
  output$sg13 <- renderValueBox({
    valueBox(value = sg()[[13,2]], subtitle = "Total", color = "blue")
  })
  
  output$sg14 <- renderInfoBox({
    infoBox(title = "Red ITU", value = sg()[[14,2]], color = "maroon", icon = icon("lungs"))
  })
  
  output$sg15 <- renderInfoBox({
    infoBox(title = "Green ITU", value = sg()[[15,2]], color = "olive", icon = icon("lungs"))
  })
  
  output$sg16 <- renderValueBox({
    valueBox(value = sg()[[16,2]], subtitle = "Total", color = "blue")
  })
  
  output$sg17 <- renderInfoBox({
    infoBox(title = "Red ITU", value = sg()[[17,2]], color = "maroon", icon = icon("lungs"))
  })
  
  output$sg18 <- renderInfoBox({
    infoBox(title = "Green ITU", value = sg()[[18,2]], color = "olive", icon = icon("lungs"))
  })
  
  output$sg19 <- renderValueBox({
    valueBox(value = sg()[[19,2]], subtitle = "Total", color = "blue")
  })

# COVID 8:30 --------------------------------------------------------------

  c830_summary <- reactive({
    
    req(input$file2)
    
    sum_c830 <- read_excel(input$file2$datapath, sheet = 5, range = "B7:G13", col_names = F) %>%
      select("Summary" = ...1,
             "Numbers" = ...6)
    
    return(sum_c830)
    
  })
  
  output$c830_predicted <- renderInfoBox({
    infoBox("Predicted Emergency Admissions", value = c830_summary()[[1, 2]], color = "red", icon = icon("ambulance"))  
  })
  
  output$c830_electives <- renderInfoBox({
    infoBox("Electives", value = c830_summary()[[2, 2]], color = "blue", icon = icon("clipboard-list"))
  })
  
  output$c830_total <- renderInfoBox({
    infoBox("Total", value = c830_summary()[[3, 2]], color = "blue", icon = icon("calculator"))
  })
  output$c830_admissions <- renderInfoBox({
    infoBox("Admissions So Far", value = c830_summary()[[4, 2]], color = "blue", icon = icon("hospital"))
  })
  output$c830_remain <- renderInfoBox({
    infoBox("Remaining Today", value = c830_summary()[[5, 2]], color = "blue", icon = icon("clipboard"))
  })
  
  output$c830_dc_expected <- renderInfoBox({
    infoBox("Definite & Expected Discharges", value = c830_summary()[[6, 2]], color = "blue", icon = icon("home"))
  })
  
  output$c830_balance <- renderInfoBox({
    
    infoBox("Predicted Balance", value = c830_summary()[[7, 2]], color = "blue", icon = icon("balance-scale"))
  })
  
  
  
  c830_ed <- reactive({
    req(input$file2)
    
    ed_c830 <- read_excel(input$file2$datapath, sheet = 5, range = "I9:P9", col_names = F) %>%
      select(-...3, -...6)
    
    new_col <- c("Total", "Longest", "Assess", "DTA", "Breaches", "Attendances")
    
    colnames(ed_c830) <- new_col
    
    if(is.POSIXct(ed_c830$Longest) == T){
      ed_c830$Longest <- format(ed_c830$Longest, "%T")
    }else{
      ed_c830$Longest <- ed_c830$Longest
    }
    
    if(is.POSIXct(ed_c830$Assess) == T){
      ed_c830$Assess <- format(ed_c830$Assess, "%T")
    }else{
      ed_c830$Assess <- ed_c830$Assess
    }
    
    return(ed_c830)
  })
  
  
  output$c830_ED_1 <- renderInfoBox({
    infoBox("Total in ED", value = c830_ed()[1, 1], color = "blue", icon = icon("hospital-user"))
  })
  output$c830_ED_2 <- renderInfoBox({
    infoBox("Longest Wait", value = c830_ed()[[1, 2]], color = "yellow", icon = icon("clock"))
  })
  output$c830_ED_3 <- renderInfoBox({
    infoBox("Time to Assessment", value = c830_ed()[[1, 3]], color = "yellow", icon = icon("stopwatch"))
  })
  output$c830_ED_4 <- renderInfoBox({
    infoBox("No. with DTA", value = c830_ed()[[1, 4]], color = colour_numbers(c830_ed()[[1, 4]]), icon = icon("hospital"))
  })
  output$c830_ED_5 <- renderInfoBox({
    infoBox("Breaches since Midnight", value = c830_ed()[[1, 5]], color = colour_breaches(c830_ed()[[1, 5]]), icon = icon("stopwatch"))
  })
  output$c830_ED_6 <- renderInfoBox({
    infoBox("Attendances since Midnight", value = c830_ed()[[1, 6]], color = "blue", icon = icon("hospital-user"))
  })
  
  c830_aaa <- reactive({
    req(input$file2)
    
    aaa_c830 <- read_excel(input$file2$datapath, sheet = 5, range = "I14:O14", col_names = F) %>%
      select(-...3, -...6)
    
    return(aaa_c830)
  })
  
  output$c830_aa_1 <- renderInfoBox({
    
    infoBox("Patients Now", value = c830_aaa()[[1,1]], color = "navy", icon = icon("hospital-user"))
  })
  
  output$c830_aa_2 <- renderInfoBox({
    
    infoBox("Beds Required", value = c830_aaa()[[1,2]], color = "navy", icon = icon("bed"))
  })
  
  output$c830_aa_3 <- renderInfoBox({
    
    infoBox("Discharges", value = c830_aaa()[[1,3]], color = "green", icon = icon("home"))
  })
  
  output$c830_aa_4 <- renderInfoBox({
    
    infoBox("Ongoing Assessment", value = c830_aaa()[[1,4]], color = "navy", icon = icon("clipboard-check"))
  })
  
  output$c830_aa_5 <- renderInfoBox({
    
    infoBox("GP's To Come In", value = c830_aaa()[[1,5]], color = "yellow", icon = icon("ambulance"))
  })
  
  output$c830_red_cc <- renderText({
    req(input$file2)
    
    redcc_c830 <- read_excel(input$file2$datapath, sheet = 5, range = "B21:I26", col_names = F) %>%
      select(-...1)
    
    columns_cc <- c("Unit", "Compliment", "Empty", "Occ", "Fit", "Adm", "DC")
    
    colnames(redcc_c830) <- columns_cc
    
    redcc_c830$Occ <- as.numeric(redcc_c830$Occ)
    
    redcc_c830$Occ <- paste0(as.character(round(redcc_c830$Occ*100, 0)), "%")
    
    redcc_c830 <- redcc_c830 %>%
      filter(!is.na(Unit)) %>%
      mutate(Empty = cell_spec(Empty, color = "white", background = if_else(Empty == 0, "#c64040", "#56b34b", "#1b1c21"))) %>%
      select("Unit" = Unit,
             "Bed Compliment" = Compliment,
             "Empty Beds" = Empty,
             "Occupancy" = Occ,
             "No. Ward Fit" = Fit,
             "Admissions Today" = Adm,
             "Expected Discharges" = DC)
    
    
    
    
    
    redcc_c830_table <- kable(redcc_c830, "html", escape = F) %>%
      kable_styling(full_width = T, bootstrap_options = "condensed", position = "center", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(redcc_c830), align = "center") %>%
      column_spec(1, bold = T, color = "white", width = "8em") %>%
      column_spec(c(2:7), background = "#edf5f9", color = "black") %>%
      row_spec(nrow(redcc_c830), bold = T, color = "white", background = "#78091b", font_size = 20)
    
    return(redcc_c830_table)
    
  })
  
  
  output$c830_green_cc <- renderText({
    req(input$file2)
    
    greencc_c830 <- read_excel(input$file2$datapath, sheet = 5, range = "K21:Q26", col_names = F) 
    
    columns_cc <- c("Unit", "Compliment", "Empty", "Occ", "Fit", "Adm", "DC")
    
    colnames(greencc_c830) <- columns_cc
    
    greencc_c830$Occ <- as.numeric(greencc_c830$Occ)
    
    greencc_c830$Occ <- paste0(as.character(round(greencc_c830$Occ*100, 0)), "%")
    
    greencc_c830 <- greencc_c830 %>%
      filter(!is.na(Unit)) %>%
      mutate(Empty = cell_spec(Empty, color = "white", background = if_else(Empty == 0, "#c64040", "#56b34b", "#1b1c21"))) %>%
      select("Unit" = Unit,
             "Bed Compliment" = Compliment,
             "Empty Beds" = Empty,
             "Occupancy" = Occ,
             "No. Ward Fit" = Fit,
             "Admissions Today" = Adm,
             "Expected Discharges" = DC)
    
    greencc_c830_table <- kable(greencc_c830, "html", escape = F) %>%
      kable_styling(full_width = T, bootstrap_options = "condensed", position = "center", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(greencc_c830), align = "center") %>%
      column_spec(1, bold = T, color = "white", width = "8em") %>%
      column_spec(c(2:7), background = "#edf5f9", color = "black") %>%
      row_spec(nrow(greencc_c830), bold = T, color = "white", background = "#004709", font_size = 20)
    
    return(greencc_c830_table)
    
  })
  
  
  output$c830_red_adult <- renderText({
    req(input$file2)
    
    redadult_c830 <- read_excel(input$file2$datapath, sheet = 5, range = "B29:I48", col_names = F) %>%
      select(-...1)
    
    columns_ad <- c("Unit", "Compliment", "Empty", "Occ", "Electives", "DC_Exp", "DC_Ach")
    
    colnames(redadult_c830) <- columns_ad
    
    redadult_c830$Occ <- as.numeric(redadult_c830$Occ)
    
    redadult_c830$Occ <- paste0(as.character(round(redadult_c830$Occ*100, 0)), "%")
    
    redadult_c830 <- redadult_c830 %>%
      filter(!is.na(Unit)) %>%
      mutate(Empty = cell_spec(Empty, color = "white", background = if_else(Empty == 0, "#c64040", "#56b34b", "#1b1c21"))) %>%
      select("Unit" = Unit,
             "Bed Compliment" = Compliment,
             "Empty Beds" = Empty,
             "Occupancy" = Occ,
             "Electives" = Electives,
             "Discharges Expected" = DC_Exp,
             "Discharges Achieved" = DC_Ach)
    
    
    
    
    
    redadult_c830_table <- kable(redadult_c830, "html", escape = F) %>%
      kable_styling(full_width = T, bootstrap_options = "condensed", position = "center", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(redadult_c830), align = "center") %>%
      column_spec(1, bold = T, color = "white", width = "8em") %>%
      column_spec(c(2:7), background = "#edf5f9", color = "black") %>%
      row_spec(nrow(redadult_c830), bold = T, color = "white", background = "#78091b", font_size = 20)
    
    return(redadult_c830_table)
    
  })
  
  output$c830_green_adult <- renderText({
    req(input$file2)
    
    greenadult_c830 <- read_excel(input$file2$datapath, sheet = 5, range = "K29:Q48", col_names = F) 
    
    columns_ad <- c("Unit", "Compliment", "Empty", "Occ", "Electives", "DC_Exp", "DC_Ach")
    
    colnames(greenadult_c830) <- columns_ad
    
    greenadult_c830$Occ <- as.numeric(greenadult_c830$Occ)
    
    greenadult_c830$Occ <- paste0(as.character(round(greenadult_c830$Occ*100, 0)), "%")
    
    greenadult_c830 <- greenadult_c830 %>%
      filter(!is.na(Unit)) %>%
      mutate(Empty = cell_spec(Empty, color = "white", background = if_else(Empty == 0, "#c64040", "#56b34b", "#1b1c21"))) %>%
      select("Unit" = Unit,
             "Bed Compliment" = Compliment,
             "Empty Beds" = Empty,
             "Occupancy" = Occ,
             "Electives" = Electives,
             "Discharges Expected" = DC_Exp,
             "Discharges Achieved" = DC_Ach)
    
    greenadult_c830_table <- kable(greenadult_c830, "html", escape = F) %>%
      kable_styling(full_width = T, bootstrap_options = "condensed", position = "center", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(greenadult_c830), align = "center") %>%
      column_spec(1, bold = T, color = "white", width = "8em") %>%
      column_spec(c(2:7), background = "#edf5f9", color = "black") %>%
      row_spec(nrow(greenadult_c830), bold = T, color = "white", background = "#004709", font_size = 20)
    
    return(greenadult_c830_table)
    
  })
  
  
  output$c830_red_wac <- renderText({
    req(input$file2)
    
    redwac_c830 <- read_excel(input$file2$datapath, sheet = 5, range = "C51:I58", col_names = F) 
    
    columns_ad <- c("Unit", "Compliment", "Empty", "Occ", "Electives", "DC_Exp", "DC_Ach")
    
    colnames(redwac_c830) <- columns_ad
    
    redwac_c830$Occ <- as.numeric(redwac_c830$Occ)
    
    redwac_c830$Occ <- paste0(as.character(round(redwac_c830$Occ*100, 0)), "%")
    
    redwac_c830 <- redwac_c830 %>%
      filter(!is.na(Unit)) %>%
      mutate(Empty = cell_spec(Empty, color = "white", background = if_else(Empty == 0, "#c64040", "#56b34b", "#1b1c21"))) %>%
      select("Unit" = Unit,
             "Bed Compliment" = Compliment,
             "Empty Beds" = Empty,
             "Occupancy" = Occ,
             "Electives" = Electives,
             "Discharges Expected" = DC_Exp,
             "Discharges by 1pm" = DC_Ach)
    
    redwac_c830_table <- kable(redwac_c830, "html", escape = F) %>%
      kable_styling(full_width = T, bootstrap_options = "condensed", position = "center", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(redwac_c830), align = "center") %>%
      column_spec(1, bold = T, color = "white", width = "8em") %>%
      column_spec(c(2:7), background = "#edf5f9", color = "black") %>%
      row_spec(nrow(redwac_c830), bold = T, color = "white", background = "#78091b", font_size = 20)
    
    return(redwac_c830_table)
    
  })
  
  output$c830_green_wac <- renderText({
    req(input$file2)
    
    greenwac_c830 <- read_excel(input$file2$datapath, sheet = 5, range = "K51:Q58", col_names = F) 
    
    columns_ad <- c("Unit", "Compliment", "Empty", "Occ", "Electives", "DC_Exp", "DC_Ach")
    
    colnames(greenwac_c830) <- columns_ad
    
    greenwac_c830$Occ <- as.numeric(greenwac_c830$Occ)
    
    greenwac_c830$Occ <- paste0(as.character(round(greenwac_c830$Occ*100, 0)), "%")
    
    greenwac_c830[8, 5] <- colSums(greenwac_c830[, 5], na.rm = T)
    
    greenwac_c830[8, 6] <- colSums(greenwac_c830[, 6], na.rm = T)
    
    greenwac_c830[8, 7] <- colSums(greenwac_c830[, 7], na.rm = T)
    
    greenwac_c830 <- greenwac_c830 %>%
      filter(!is.na(Unit)) %>%
      mutate(Empty = cell_spec(Empty, color = "white", background = if_else(Empty == 0, "#c64040", "#56b34b", "#1b1c21"))) %>%
      select("Unit" = Unit,
             "Bed Compliment" = Compliment,
             "Empty Beds" = Empty,
             "Occupancy" = Occ,
             "Electives" = Electives,
             "Discharges Expected" = DC_Exp,
             "Discharges by 1pm" = DC_Ach)
    
    greenwac_c830_table <- kable(greenwac_c830, "html", escape = F) %>%
      kable_styling(full_width = T, bootstrap_options = "condensed", position = "center", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(greenwac_c830), align = "center") %>%
      column_spec(1, bold = T, color = "white", width = "8em") %>%
      column_spec(c(2:7), background = "#edf5f9", color = "black") %>%
      row_spec(nrow(greenwac_c830), bold = T, color = "white", background = "#004709", font_size = 20)
    
    return(greenwac_c830_table)
    
  })
  
# COVID 13:00 -------------------------------------------------------------

  c1300_summary <- reactive({
    
    req(input$file2)
    
    sum_c1300 <- read_excel(input$file2$datapath, sheet = 6, range = "B7:G13", col_names = F) %>%
      select("Summary" = ...1,
             "Numbers" = ...6)
    
    return(sum_c1300)
    
  })
  
  output$c1300_predicted <- renderInfoBox({
    infoBox("Predicted Emergency Admissions", value = c1300_summary()[[1, 2]], color = "red", icon = icon("ambulance"))  
  })
  
  output$c1300_electives <- renderInfoBox({
    infoBox("Electives", value = c1300_summary()[[2, 2]], color = "blue", icon = icon("clipboard-list"))
  })
  
  output$c1300_total <- renderInfoBox({
    infoBox("Total", value = c1300_summary()[[3, 2]], color = "blue", icon = icon("calculator"))
  })
  output$c1300_admissions <- renderInfoBox({
    infoBox("Admissions So Far", value = c1300_summary()[[4, 2]], color = "blue", icon = icon("hospital"))
  })
  output$c1300_remain <- renderInfoBox({
    infoBox("Remaining Today", value = c1300_summary()[[5, 2]], color = "blue", icon = icon("clipboard"))
  })
  
  output$c1300_dc_expected <- renderInfoBox({
    infoBox("Definite & Expected Discharges", value = c1300_summary()[[6, 2]], color = "blue", icon = icon("home"))
  })
  
  output$c1300_balance <- renderInfoBox({
    
    infoBox("Predicted Balance", value = c1300_summary()[[7, 2]], color = "blue", icon = icon("balance-scale"))
  })
  
  
  
  c1300_ed <- reactive({
    req(input$file2)
    
    ed_c1300 <- read_excel(input$file2$datapath, sheet = 6, range = "I9:P9", col_names = F) %>%
      select(-...3, -...6)
    
    new_col <- c("Total", "Longest", "Assess", "DTA", "Breaches", "Attendances")
    
    colnames(ed_c1300) <- new_col
    
    if(is.POSIXct(ed_c1300$Longest) == T){
      ed_c1300$Longest <- format(ed_c1300$Longest, "%T")
    }else{
      ed_c1300$Longest <- ed_c1300$Longest
    }
    
    if(is.POSIXct(ed_c1300$Assess) == T){
      ed_c1300$Assess <- format(ed_c1300$Assess, "%T")
    }else{
      ed_c1300$Assess <- ed_c1300$Assess
    }
    
    return(ed_c1300)
  })
  
  
  output$c1300_ED_1 <- renderInfoBox({
    infoBox("Total in ED", value = c1300_ed()[1, 1], color = "blue", icon = icon("hospital-user"))
  })
  output$c1300_ED_2 <- renderInfoBox({
    infoBox("Longest Wait", value = c1300_ed()[[1, 2]], color = "yellow", icon = icon("clock"))
  })
  output$c1300_ED_3 <- renderInfoBox({
    infoBox("Time to Assessment", value = c1300_ed()[[1, 3]], color = "yellow", icon = icon("stopwatch"))
  })
  output$c1300_ED_4 <- renderInfoBox({
    infoBox("No. with DTA", value = c1300_ed()[[1, 4]], color = colour_numbers(c1300_ed()[[1, 4]]), icon = icon("hospital"))
  })
  output$c1300_ED_5 <- renderInfoBox({
    infoBox("Breaches since Midnight", value = c1300_ed()[[1, 5]], color = colour_breaches(c1300_ed()[[1, 5]]), icon = icon("stopwatch"))
  })
  output$c1300_ED_6 <- renderInfoBox({
    infoBox("Attendances since Midnight", value = c1300_ed()[[1, 6]], color = "blue", icon = icon("hospital-user"))
  })
  
  c1300_aaa <- reactive({
    req(input$file2)
    
    aaa_c1300 <- read_excel(input$file2$datapath, sheet = 6, range = "I14:O14", col_names = F) %>%
      select(-...3, -...6)
    
    return(aaa_c1300)
  })
  
  output$c1300_aa_1 <- renderInfoBox({
    
    infoBox("Patients Now", value = c1300_aaa()[[1,1]], color = "navy", icon = icon("hospital-user"))
  })
  
  output$c1300_aa_2 <- renderInfoBox({
    
    infoBox("Beds Required", value = c1300_aaa()[[1,2]], color = "navy", icon = icon("bed"))
  })
  
  output$c1300_aa_3 <- renderInfoBox({
    
    infoBox("Discharges", value = c1300_aaa()[[1,3]], color = "green", icon = icon("home"))
  })
  
  output$c1300_aa_4 <- renderInfoBox({
    
    infoBox("Ongoing Assessment", value = c1300_aaa()[[1,4]], color = "navy", icon = icon("clipboard-check"))
  })
  
  output$c1300_aa_5 <- renderInfoBox({
    
    infoBox("GP's To Come In", value = c1300_aaa()[[1,5]], color = "yellow", icon = icon("ambulance"))
  })
  
  output$c1300_red_cc <- renderText({
    req(input$file2)
    
    redcc_c1300 <- read_excel(input$file2$datapath, sheet = 6, range = "B21:I26", col_names = F) %>%
      select(-...1)
    
    columns_cc <- c("Unit", "Compliment", "Empty", "Occ", "Fit", "Adm", "DC")
    
    colnames(redcc_c1300) <- columns_cc
    
    redcc_c1300$Occ <- as.numeric(redcc_c1300$Occ)
    
    redcc_c1300$Occ <- paste0(as.character(round(redcc_c1300$Occ*100, 0)), "%")
    
    redcc_c1300 <- redcc_c1300 %>%
      filter(!is.na(Unit)) %>%
      mutate(Empty = cell_spec(Empty, color = "white", background = if_else(Empty == 0, "#c64040", "#56b34b", "#1b1c21"))) %>%
      select("Unit" = Unit,
             "Bed Compliment" = Compliment,
             "Empty Beds" = Empty,
             "Occupancy" = Occ,
             "No. Ward Fit" = Fit,
             "Admissions Today" = Adm,
             "Expected Discharges" = DC)
    
    
    
    
    
    redcc_c1300_table <- kable(redcc_c1300, "html", escape = F) %>%
      kable_styling(full_width = T, bootstrap_options = "condensed", position = "center", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(redcc_c1300), align = "center") %>%
      column_spec(1, bold = T, color = "white", width = "8em") %>%
      column_spec(c(2:7), background = "#edf5f9", color = "black") %>%
      row_spec(nrow(redcc_c1300), bold = T, color = "white", background = "#78091b", font_size = 20)
    
    return(redcc_c1300_table)
    
  })
  
  
  output$c1300_green_cc <- renderText({
    req(input$file2)
    
    greencc_c1300 <- read_excel(input$file2$datapath, sheet = 6, range = "K21:Q26", col_names = F) 
    
    columns_cc <- c("Unit", "Compliment", "Empty", "Occ", "Fit", "Adm", "DC")
    
    colnames(greencc_c1300) <- columns_cc
    
    greencc_c1300$Occ <- as.numeric(greencc_c1300$Occ)
    
    greencc_c1300$Occ <- paste0(as.character(round(greencc_c1300$Occ*100, 0)), "%")
    
    greencc_c1300 <- greencc_c1300 %>%
      filter(!is.na(Unit)) %>%
      mutate(Empty = cell_spec(Empty, color = "white", background = if_else(Empty == 0, "#c64040", "#56b34b", "#1b1c21"))) %>%
      select("Unit" = Unit,
             "Bed Compliment" = Compliment,
             "Empty Beds" = Empty,
             "Occupancy" = Occ,
             "No. Ward Fit" = Fit,
             "Admissions Today" = Adm,
             "Expected Discharges" = DC)
    
    greencc_c1300_table <- kable(greencc_c1300, "html", escape = F) %>%
      kable_styling(full_width = T, bootstrap_options = "condensed", position = "center", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(greencc_c1300), align = "center") %>%
      column_spec(1, bold = T, color = "white", width = "8em") %>%
      column_spec(c(2:7), background = "#edf5f9", color = "black") %>%
      row_spec(nrow(greencc_c1300), bold = T, color = "white", background = "#004709", font_size = 20)
    
    return(greencc_c1300_table)
    
  })
  
  
  output$c1300_red_adult <- renderText({
    req(input$file2)
    
    redadult_c1300 <- read_excel(input$file2$datapath, sheet = 6, range = "B29:I48", col_names = F) %>%
      select(-...1)
    
    columns_ad <- c("Unit", "Compliment", "Empty", "Occ", "Electives", "DC_Exp", "DC_Ach")
    
    colnames(redadult_c1300) <- columns_ad
    
    redadult_c1300$Occ <- as.numeric(redadult_c1300$Occ)
    
    redadult_c1300$Occ <- paste0(as.character(round(redadult_c1300$Occ*100, 0)), "%")
    
    redadult_c1300 <- redadult_c1300 %>%
      filter(!is.na(Unit)) %>%
      mutate(Empty = cell_spec(Empty, color = "white", background = if_else(Empty == 0, "#c64040", "#56b34b", "#1b1c21"))) %>%
      select("Unit" = Unit,
             "Bed Compliment" = Compliment,
             "Empty Beds" = Empty,
             "Occupancy" = Occ,
             "Electives" = Electives,
             "Discharges Expected" = DC_Exp,
             "Discharges Achieved" = DC_Ach)
    
    
    
    
    
    redadult_c1300_table <- kable(redadult_c1300, "html", escape = F) %>%
      kable_styling(full_width = T, bootstrap_options = "condensed", position = "center", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(redadult_c1300), align = "center") %>%
      column_spec(1, bold = T, color = "white", width = "8em") %>%
      column_spec(c(2:7), background = "#edf5f9", color = "black") %>%
      row_spec(nrow(redadult_c1300), bold = T, color = "white", background = "#78091b", font_size = 20)
    
    return(redadult_c1300_table)
    
  })
  
  output$c1300_green_adult <- renderText({
    req(input$file2)
    
    greenadult_c1300 <- read_excel(input$file2$datapath, sheet = 6, range = "K29:Q48", col_names = F) 
    
    columns_ad <- c("Unit", "Compliment", "Empty", "Occ", "Electives", "DC_Exp", "DC_Ach")
    
    colnames(greenadult_c1300) <- columns_ad
    
    greenadult_c1300$Occ <- as.numeric(greenadult_c1300$Occ)
    
    greenadult_c1300$Occ <- paste0(as.character(round(greenadult_c1300$Occ*100, 0)), "%")
    
    greenadult_c1300 <- greenadult_c1300 %>%
      filter(!is.na(Unit)) %>%
      mutate(Empty = cell_spec(Empty, color = "white", background = if_else(Empty == 0, "#c64040", "#56b34b", "#1b1c21"))) %>%
      select("Unit" = Unit,
             "Bed Compliment" = Compliment,
             "Empty Beds" = Empty,
             "Occupancy" = Occ,
             "Electives" = Electives,
             "Discharges Expected" = DC_Exp,
             "Discharges Achieved" = DC_Ach)
    
    greenadult_c1300_table <- kable(greenadult_c1300, "html", escape = F) %>%
      kable_styling(full_width = T, bootstrap_options = "condensed", position = "center", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(greenadult_c1300), align = "center") %>%
      column_spec(1, bold = T, color = "white", width = "8em") %>%
      column_spec(c(2:7), background = "#edf5f9", color = "black") %>%
      row_spec(nrow(greenadult_c1300), bold = T, color = "white", background = "#004709", font_size = 20)
    
    return(greenadult_c1300_table)
    
  })
  
  
  output$c1300_red_wac <- renderText({
    req(input$file2)
    
    redwac_c1300 <- read_excel(input$file2$datapath, sheet = 6, range = "C51:I58", col_names = F) 
    
    columns_ad <- c("Unit", "Compliment", "Empty", "Occ", "Electives", "DC_Exp", "DC_Ach")
    
    colnames(redwac_c1300) <- columns_ad
    
    redwac_c1300$Occ <- as.numeric(redwac_c1300$Occ)
    
    redwac_c1300$Occ <- paste0(as.character(round(redwac_c1300$Occ*100, 0)), "%")
    
    redwac_c1300 <- redwac_c1300 %>%
      filter(!is.na(Unit)) %>%
      mutate(Empty = cell_spec(Empty, color = "white", background = if_else(Empty == 0, "#c64040", "#56b34b", "#1b1c21"))) %>%
      select("Unit" = Unit,
             "Bed Compliment" = Compliment,
             "Empty Beds" = Empty,
             "Occupancy" = Occ,
             "Electives" = Electives,
             "Discharges Expected" = DC_Exp,
             "Discharges by 1pm" = DC_Ach)
    
    redwac_c1300_table <- kable(redwac_c1300, "html", escape = F) %>%
      kable_styling(full_width = T, bootstrap_options = "condensed", position = "center", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(redwac_c1300), align = "center") %>%
      column_spec(1, bold = T, color = "white", width = "8em") %>%
      column_spec(c(2:7), background = "#edf5f9", color = "black") %>%
      row_spec(nrow(redwac_c1300), bold = T, color = "white", background = "#78091b", font_size = 20)
    
    return(redwac_c1300_table)
    
  })
  
  output$c1300_green_wac <- renderText({
    req(input$file2)
    
    greenwac_c1300 <- read_excel(input$file2$datapath, sheet = 6, range = "K51:Q58", col_names = F) 
    
    columns_ad <- c("Unit", "Compliment", "Empty", "Occ", "Electives", "DC_Exp", "DC_Ach")
    
    colnames(greenwac_c1300) <- columns_ad
    
    greenwac_c1300$Occ <- as.numeric(greenwac_c1300$Occ)
    
    greenwac_c1300$Occ <- paste0(as.character(round(greenwac_c1300$Occ*100, 0)), "%")
    
    greenwac_c1300[8, 5] <- colSums(greenwac_c1300[, 5], na.rm = T)
    
    greenwac_c1300[8, 6] <- colSums(greenwac_c1300[, 6], na.rm = T)
    
    greenwac_c1300[8, 7] <- colSums(greenwac_c1300[, 7], na.rm = T)
    
    greenwac_c1300 <- greenwac_c1300 %>%
      filter(!is.na(Unit)) %>%
      mutate(Empty = cell_spec(Empty, color = "white", background = if_else(Empty == 0, "#c64040", "#56b34b", "#1b1c21"))) %>%
      select("Unit" = Unit,
             "Bed Compliment" = Compliment,
             "Empty Beds" = Empty,
             "Occupancy" = Occ,
             "Electives" = Electives,
             "Discharges Expected" = DC_Exp,
             "Discharges by 1pm" = DC_Ach)
    
    greenwac_c1300_table <- kable(greenwac_c1300, "html", escape = F) %>%
      kable_styling(full_width = T, bootstrap_options = "condensed", position = "center", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(greenwac_c1300), align = "center") %>%
      column_spec(1, bold = T, color = "white", width = "8em") %>%
      column_spec(c(2:7), background = "#edf5f9", color = "black") %>%
      row_spec(nrow(greenwac_c1300), bold = T, color = "white", background = "#004709", font_size = 20)
    
    return(greenwac_c1300_table)
    
  })
  
  
# COVID 17:00 ---------------------------------------------------------------
  c1700_summary <- reactive({
    
    req(input$file2)
    
    sum_c1700 <- read_excel(input$file2$datapath, sheet = 7, range = "B7:G13", col_names = F) %>%
      select("Summary" = ...1,
             "Numbers" = ...6)
    
    return(sum_c1700)
    
  })
  
  output$c1700_predicted <- renderInfoBox({
    infoBox("Predicted Emergency Admissions", value = c1700_summary()[[1, 2]], color = "red", icon = icon("ambulance"))  
  })
  
  output$c1700_electives <- renderInfoBox({
    infoBox("Electives", value = c1700_summary()[[2, 2]], color = "blue", icon = icon("clipboard-list"))
  })
  
  output$c1700_total <- renderInfoBox({
    infoBox("Total", value = c1700_summary()[[3, 2]], color = "blue", icon = icon("calculator"))
  })
  output$c1700_admissions <- renderInfoBox({
    infoBox("Admissions So Far", value = c1700_summary()[[4, 2]], color = "blue", icon = icon("hospital"))
  })
  output$c1700_remain <- renderInfoBox({
    infoBox("Remaining Today", value = c1700_summary()[[5, 2]], color = "blue", icon = icon("clipboard"))
  })
  
  output$c1700_dc_expected <- renderInfoBox({
    infoBox("Definite & Expected Discharges", value = c1700_summary()[[6, 2]], color = "blue", icon = icon("home"))
  })
  
  output$c1700_balance <- renderInfoBox({
    
    infoBox("Predicted Balance", value = c1700_summary()[[7, 2]], color = "blue", icon = icon("balance-scale"))
  })
  
  
  
  c1700_ed <- reactive({
    req(input$file2)
    
    ed_c1700 <- read_excel(input$file2$datapath, sheet = 7, range = "I9:P9", col_names = F) %>%
      select(-...3, -...6)
    
    new_col <- c("Total", "Longest", "Assess", "DTA", "Breaches", "Attendances")
    
    colnames(ed_c1700) <- new_col
    
    if(is.POSIXct(ed_c1700$Longest) == T){
      ed_c1700$Longest <- format(ed_c1700$Longest, "%T")
    }else{
      ed_c1700$Longest <- ed_c1700$Longest
    }
    
    if(is.POSIXct(ed_c1700$Assess) == T){
      ed_c1700$Assess <- format(ed_c1700$Assess, "%T")
    }else{
      ed_c1700$Assess <- ed_c1700$Assess
    }
    
    return(ed_c1700)
  })
  
  
  output$c1700_ED_1 <- renderInfoBox({
    infoBox("Total in ED", value = c1700_ed()[1, 1], color = "blue", icon = icon("hospital-user"))
  })
  output$c1700_ED_2 <- renderInfoBox({
    infoBox("Longest Wait", value = c1700_ed()[[1, 2]], color = "yellow", icon = icon("clock"))
  })
  output$c1700_ED_3 <- renderInfoBox({
    infoBox("Time to Assessment", value = c1700_ed()[[1, 3]], color = "yellow", icon = icon("stopwatch"))
  })
  output$c1700_ED_4 <- renderInfoBox({
    infoBox("No. with DTA", value = c1700_ed()[[1, 4]], color = colour_numbers(c1700_ed()[[1, 4]]), icon = icon("hospital"))
  })
  output$c1700_ED_5 <- renderInfoBox({
    infoBox("Breaches since Midnight", value = c1700_ed()[[1, 5]], color = colour_breaches(c1700_ed()[[1, 5]]), icon = icon("stopwatch"))
  })
  output$c1700_ED_6 <- renderInfoBox({
    infoBox("Attendances since Midnight", value = c1700_ed()[[1, 6]], color = "blue", icon = icon("hospital-user"))
  })
  
  c1700_aaa <- reactive({
    req(input$file2)
    
    aaa_c1700 <- read_excel(input$file2$datapath, sheet = 7, range = "I14:O14", col_names = F) %>%
      select(-...3, -...6)
    
    return(aaa_c1700)
  })
  
  output$c1700_aa_1 <- renderInfoBox({
    
    infoBox("Patients Now", value = c1700_aaa()[[1,1]], color = "navy", icon = icon("hospital-user"))
  })
  
  output$c1700_aa_2 <- renderInfoBox({
    
    infoBox("Beds Required", value = c1700_aaa()[[1,2]], color = "navy", icon = icon("bed"))
  })
  
  output$c1700_aa_3 <- renderInfoBox({
    
    infoBox("Discharges", value = c1700_aaa()[[1,3]], color = "green", icon = icon("home"))
  })
  
  output$c1700_aa_4 <- renderInfoBox({
    
    infoBox("Ongoing Assessment", value = c1700_aaa()[[1,4]], color = "navy", icon = icon("clipboard-check"))
  })
  
  output$c1700_aa_5 <- renderInfoBox({
    
    infoBox("GP's To Come In", value = c1700_aaa()[[1,5]], color = "yellow", icon = icon("ambulance"))
  })
  
  output$c1700_red_cc <- renderText({
    req(input$file2)
    
    redcc_c1700 <- read_excel(input$file2$datapath, sheet = 7, range = "B21:I26", col_names = F) %>%
      select(-...1)
    
    columns_cc <- c("Unit", "Compliment", "Empty", "Occ", "Fit", "Adm", "DC")
    
    colnames(redcc_c1700) <- columns_cc
    
    redcc_c1700$Occ <- as.numeric(redcc_c1700$Occ)
    
    redcc_c1700$Occ <- paste0(as.character(round(redcc_c1700$Occ*100, 0)), "%")
    
    redcc_c1700 <- redcc_c1700 %>%
      filter(!is.na(Unit)) %>%
      mutate(Empty = cell_spec(Empty, color = "white", background = if_else(Empty == 0, "#c64040", "#56b34b", "#1b1c21"))) %>%
      select("Unit" = Unit,
             "Bed Compliment" = Compliment,
             "Empty Beds" = Empty,
             "Occupancy" = Occ,
             "No. Ward Fit" = Fit,
             "Admissions Today" = Adm,
             "Expected Discharges" = DC)
    
    
    
    
    
    redcc_c1700_table <- kable(redcc_c1700, "html", escape = F) %>%
      kable_styling(full_width = T, bootstrap_options = "condensed", position = "center", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(redcc_c1700), align = "center") %>%
      column_spec(1, bold = T, color = "white", width = "8em") %>%
      column_spec(c(2:7), background = "#edf5f9", color = "black") %>%
      row_spec(nrow(redcc_c1700), bold = T, color = "white", background = "#78091b", font_size = 20)
    
    return(redcc_c1700_table)
    
  })
  
  
  output$c1700_green_cc <- renderText({
    req(input$file2)
    
    greencc_c1700 <- read_excel(input$file2$datapath, sheet = 7, range = "K21:Q26", col_names = F) 
    
    columns_cc <- c("Unit", "Compliment", "Empty", "Occ", "Fit", "Adm", "DC")
    
    colnames(greencc_c1700) <- columns_cc
    
    greencc_c1700$Occ <- as.numeric(greencc_c1700$Occ)
    
    greencc_c1700$Occ <- paste0(as.character(round(greencc_c1700$Occ*100, 0)), "%")
    
    greencc_c1700 <- greencc_c1700 %>%
      filter(!is.na(Unit)) %>%
      mutate(Empty = cell_spec(Empty, color = "white", background = if_else(Empty == 0, "#c64040", "#56b34b", "#1b1c21"))) %>%
      select("Unit" = Unit,
             "Bed Compliment" = Compliment,
             "Empty Beds" = Empty,
             "Occupancy" = Occ,
             "No. Ward Fit" = Fit,
             "Admissions Today" = Adm,
             "Expected Discharges" = DC)
    
    greencc_c1700_table <- kable(greencc_c1700, "html", escape = F) %>%
      kable_styling(full_width = T, bootstrap_options = "condensed", position = "center", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(greencc_c1700), align = "center") %>%
      column_spec(1, bold = T, color = "white", width = "8em") %>%
      column_spec(c(2:7), background = "#edf5f9", color = "black") %>%
      row_spec(nrow(greencc_c1700), bold = T, color = "white", background = "#004709", font_size = 20)
    
    return(greencc_c1700_table)
    
  })
  
  
  output$c1700_red_adult <- renderText({
    req(input$file2)
    
    redadult_c1700 <- read_excel(input$file2$datapath, sheet = 7, range = "B29:I48", col_names = F) %>%
      select(-...1)
    
    columns_ad <- c("Unit", "Compliment", "Empty", "Occ", "Electives", "DC_Exp", "DC_Ach")
    
    colnames(redadult_c1700) <- columns_ad
    
    redadult_c1700$Occ <- as.numeric(redadult_c1700$Occ)
    
    redadult_c1700$Occ <- paste0(as.character(round(redadult_c1700$Occ*100, 0)), "%")
    
    redadult_c1700 <- redadult_c1700 %>%
      filter(!is.na(Unit)) %>%
      mutate(Empty = cell_spec(Empty, color = "white", background = if_else(Empty == 0, "#c64040", "#56b34b", "#1b1c21"))) %>%
      select("Unit" = Unit,
             "Bed Compliment" = Compliment,
             "Empty Beds" = Empty,
             "Occupancy" = Occ,
             "Electives" = Electives,
             "Discharges Expected" = DC_Exp,
             "Discharges Achieved" = DC_Ach)
    
    
    
    
    
    redadult_c1700_table <- kable(redadult_c1700, "html", escape = F) %>%
      kable_styling(full_width = T, bootstrap_options = "condensed", position = "center", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(redadult_c1700), align = "center") %>%
      column_spec(1, bold = T, color = "white", width = "8em") %>%
      column_spec(c(2:7), background = "#edf5f9", color = "black") %>%
      row_spec(nrow(redadult_c1700), bold = T, color = "white", background = "#78091b", font_size = 20)
    
    return(redadult_c1700_table)
    
  })
  
  output$c1700_green_adult <- renderText({
    req(input$file2)
    
    greenadult_c1700 <- read_excel(input$file2$datapath, sheet = 7, range = "K29:Q48", col_names = F) 
    
    columns_ad <- c("Unit", "Compliment", "Empty", "Occ", "Electives", "DC_Exp", "DC_Ach")
    
    colnames(greenadult_c1700) <- columns_ad
    
    greenadult_c1700$Occ <- as.numeric(greenadult_c1700$Occ)
    
    greenadult_c1700$Occ <- paste0(as.character(round(greenadult_c1700$Occ*100, 0)), "%")
    
    greenadult_c1700 <- greenadult_c1700 %>%
      filter(!is.na(Unit)) %>%
      mutate(Empty = cell_spec(Empty, color = "white", background = if_else(Empty == 0, "#c64040", "#56b34b", "#1b1c21"))) %>%
      select("Unit" = Unit,
             "Bed Compliment" = Compliment,
             "Empty Beds" = Empty,
             "Occupancy" = Occ,
             "Electives" = Electives,
             "Discharges Expected" = DC_Exp,
             "Discharges Achieved" = DC_Ach)
    
    greenadult_c1700_table <- kable(greenadult_c1700, "html", escape = F) %>%
      kable_styling(full_width = T, bootstrap_options = "condensed", position = "center", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(greenadult_c1700), align = "center") %>%
      column_spec(1, bold = T, color = "white", width = "8em") %>%
      column_spec(c(2:7), background = "#edf5f9", color = "black") %>%
      row_spec(nrow(greenadult_c1700), bold = T, color = "white", background = "#004709", font_size = 20)
    
    return(greenadult_c1700_table)
    
  })
  
  
  output$c1700_red_wac <- renderText({
    req(input$file2)
    
    redwac_c1700 <- read_excel(input$file2$datapath, sheet = 7, range = "C51:I58", col_names = F) 
    
    columns_ad <- c("Unit", "Compliment", "Empty", "Occ", "Electives", "DC_Exp", "DC_Ach")
    
    colnames(redwac_c1700) <- columns_ad
    
    redwac_c1700$Occ <- as.numeric(redwac_c1700$Occ)
    
    redwac_c1700$Occ <- paste0(as.character(round(redwac_c1700$Occ*100, 0)), "%")
    
    redwac_c1700 <- redwac_c1700 %>%
      filter(!is.na(Unit)) %>%
      mutate(Empty = cell_spec(Empty, color = "white", background = if_else(Empty == 0, "#c64040", "#56b34b", "#1b1c21"))) %>%
      select("Unit" = Unit,
             "Bed Compliment" = Compliment,
             "Empty Beds" = Empty,
             "Occupancy" = Occ,
             "Electives" = Electives,
             "Discharges Expected" = DC_Exp,
             "Discharges by 1pm" = DC_Ach)
    
    redwac_c1700_table <- kable(redwac_c1700, "html", escape = F) %>%
      kable_styling(full_width = T, bootstrap_options = "condensed", position = "center", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(redwac_c1700), align = "center") %>%
      column_spec(1, bold = T, color = "white", width = "8em") %>%
      column_spec(c(2:7), background = "#edf5f9", color = "black") %>%
      row_spec(nrow(redwac_c1700), bold = T, color = "white", background = "#78091b", font_size = 20)
    
    return(redwac_c1700_table)
    
  })
  
  output$c1700_green_wac <- renderText({
    req(input$file2)
    
    greenwac_c1700 <- read_excel(input$file2$datapath, sheet = 7, range = "K51:Q58", col_names = F) 
    
    columns_ad <- c("Unit", "Compliment", "Empty", "Occ", "Electives", "DC_Exp", "DC_Ach")
    
    colnames(greenwac_c1700) <- columns_ad
    
    greenwac_c1700$Occ <- as.numeric(greenwac_c1700$Occ)
    
    greenwac_c1700$Occ <- paste0(as.character(round(greenwac_c1700$Occ*100, 0)), "%")
    
    greenwac_c1700[8, 5] <- colSums(greenwac_c1700[, 5], na.rm = T)
    
    greenwac_c1700[8, 6] <- colSums(greenwac_c1700[, 6], na.rm = T)
    
    greenwac_c1700[8, 7] <- colSums(greenwac_c1700[, 7], na.rm = T)
    
    greenwac_c1700 <- greenwac_c1700 %>%
      filter(!is.na(Unit)) %>%
      mutate(Empty = cell_spec(Empty, color = "white", background = if_else(Empty == 0, "#c64040", "#56b34b", "#1b1c21"))) %>%
      select("Unit" = Unit,
             "Bed Compliment" = Compliment,
             "Empty Beds" = Empty,
             "Occupancy" = Occ,
             "Electives" = Electives,
             "Discharges Expected" = DC_Exp,
             "Discharges by 1pm" = DC_Ach)
    
    greenwac_c1700_table <- kable(greenwac_c1700, "html", escape = F) %>%
      kable_styling(full_width = T, bootstrap_options = "condensed", position = "center", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(greenwac_c1700), align = "center") %>%
      column_spec(1, bold = T, color = "white", width = "8em") %>%
      column_spec(c(2:7), background = "#edf5f9", color = "black") %>%
      row_spec(nrow(greenwac_c1700), bold = T, color = "white", background = "#004709", font_size = 20)
    
    return(greenwac_c1700_table)
    
  })
  

# COVID 19:00 -------------------------------------------------------------

  
  c1900_summary <- reactive({
    
    req(input$file2)
    
    sum_c1900 <- read_excel(input$file2$datapath, sheet = 8, range = "B7:G13", col_names = F) %>%
      select("Summary" = ...1,
             "Numbers" = ...6)
    
    return(sum_c1900)
    
  })
  
  output$c1900_predicted <- renderInfoBox({
    infoBox("Predicted Emergency Admissions", value = c1900_summary()[[1, 2]], color = "red", icon = icon("ambulance"))  
  })
  
  output$c1900_electives <- renderInfoBox({
    infoBox("Electives", value = c1900_summary()[[2, 2]], color = "blue", icon = icon("clipboard-list"))
  })
  
  output$c1900_total <- renderInfoBox({
    infoBox("Total", value = c1900_summary()[[3, 2]], color = "blue", icon = icon("calculator"))
  })
  output$c1900_admissions <- renderInfoBox({
    infoBox("Admissions So Far", value = c1900_summary()[[4, 2]], color = "blue", icon = icon("hospital"))
  })
  output$c1900_remain <- renderInfoBox({
    infoBox("Remaining Today", value = c1900_summary()[[5, 2]], color = "blue", icon = icon("clipboard"))
  })
  
  output$c1900_dc_expected <- renderInfoBox({
    infoBox("Definite & Expected Discharges", value = c1900_summary()[[6, 2]], color = "blue", icon = icon("home"))
  })
  
  output$c1900_balance <- renderInfoBox({
    
    infoBox("Predicted Balance", value = c1900_summary()[[7, 2]], color = "blue", icon = icon("balance-scale"))
  })
  
  
  
  c1900_ed <- reactive({
    req(input$file2)
    
    ed_c1900 <- read_excel(input$file2$datapath, sheet = 8, range = "I9:P9", col_names = F) %>%
      select(-...3, -...6)
    
    new_col <- c("Total", "Longest", "Assess", "DTA", "Breaches", "Attendances")
    
    colnames(ed_c1900) <- new_col
    
    if(is.POSIXct(ed_c1900$Longest) == T){
      ed_c1900$Longest <- format(ed_c1900$Longest, "%T")
    }else{
      ed_c1900$Longest <- ed_c1900$Longest
    }
    
    if(is.POSIXct(ed_c1900$Assess) == T){
      ed_c1900$Assess <- format(ed_c1900$Assess, "%T")
    }else{
      ed_c1900$Assess <- ed_c1900$Assess
    }
    
    return(ed_c1900)
  })
  
  
  output$c1900_ED_1 <- renderInfoBox({
    infoBox("Total in ED", value = c1900_ed()[1, 1], color = "blue", icon = icon("hospital-user"))
  })
  output$c1900_ED_2 <- renderInfoBox({
    infoBox("Longest Wait", value = c1900_ed()[[1, 2]], color = "yellow", icon = icon("clock"))
  })
  output$c1900_ED_3 <- renderInfoBox({
    infoBox("Time to Assessment", value = c1900_ed()[[1, 3]], color = "yellow", icon = icon("stopwatch"))
  })
  output$c1900_ED_4 <- renderInfoBox({
    infoBox("No. with DTA", value = c1900_ed()[[1, 4]], color = colour_numbers(c1900_ed()[[1, 4]]), icon = icon("hospital"))
  })
  output$c1900_ED_5 <- renderInfoBox({
    infoBox("Breaches since Midnight", value = c1900_ed()[[1, 5]], color = colour_breaches(c1900_ed()[[1, 5]]), icon = icon("stopwatch"))
  })
  output$c1900_ED_6 <- renderInfoBox({
    infoBox("Attendances since Midnight", value = c1900_ed()[[1, 6]], color = "blue", icon = icon("hospital-user"))
  })
  
  c1900_aaa <- reactive({
    req(input$file2)
    
    aaa_c1900 <- read_excel(input$file2$datapath, sheet = 8, range = "I14:O14", col_names = F) %>%
      select(-...3, -...6)
    
    return(aaa_c1900)
  })
  
  output$c1900_aa_1 <- renderInfoBox({
    
    infoBox("Patients Now", value = c1900_aaa()[[1,1]], color = "navy", icon = icon("hospital-user"))
  })
  
  output$c1900_aa_2 <- renderInfoBox({
    
    infoBox("Beds Required", value = c1900_aaa()[[1,2]], color = "navy", icon = icon("bed"))
  })
  
  output$c1900_aa_3 <- renderInfoBox({
    
    infoBox("Discharges", value = c1900_aaa()[[1,3]], color = "green", icon = icon("home"))
  })
  
  output$c1900_aa_4 <- renderInfoBox({
    
    infoBox("Ongoing Assessment", value = c1900_aaa()[[1,4]], color = "navy", icon = icon("clipboard-check"))
  })
  
  output$c1900_aa_5 <- renderInfoBox({
    
    infoBox("GP's To Come In", value = c1900_aaa()[[1,5]], color = "yellow", icon = icon("ambulance"))
  })
  
  output$c1900_red_cc <- renderText({
    req(input$file2)
    
    redcc_c1900 <- read_excel(input$file2$datapath, sheet = 8, range = "B21:I26", col_names = F) %>%
      select(-...1)
    
    columns_cc <- c("Unit", "Compliment", "Empty", "Occ", "Fit", "Adm", "DC")
    
    colnames(redcc_c1900) <- columns_cc
    
    redcc_c1900$Occ <- as.numeric(redcc_c1900$Occ)
    
    redcc_c1900$Occ <- paste0(as.character(round(redcc_c1900$Occ*100, 0)), "%")
    
    redcc_c1900 <- redcc_c1900 %>%
      filter(!is.na(Unit)) %>%
      mutate(Empty = cell_spec(Empty, color = "white", background = if_else(Empty == 0, "#c64040", "#56b34b", "#1b1c21"))) %>%
      select("Unit" = Unit,
             "Bed Compliment" = Compliment,
             "Empty Beds" = Empty,
             "Occupancy" = Occ,
             "No. Ward Fit" = Fit,
             "Admissions Today" = Adm,
             "Expected Discharges" = DC)
    
    
    
    
    
    redcc_c1900_table <- kable(redcc_c1900, "html", escape = F) %>%
      kable_styling(full_width = T, bootstrap_options = "condensed", position = "center", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(redcc_c1900), align = "center") %>%
      column_spec(1, bold = T, color = "white", width = "8em") %>%
      column_spec(c(2:7), background = "#edf5f9", color = "black") %>%
      row_spec(nrow(redcc_c1900), bold = T, color = "white", background = "#78091b", font_size = 20)
    
    return(redcc_c1900_table)
    
  })
  
  
  output$c1900_green_cc <- renderText({
    req(input$file2)
    
    greencc_c1900 <- read_excel(input$file2$datapath, sheet = 8, range = "K21:Q26", col_names = F) 
    
    columns_cc <- c("Unit", "Compliment", "Empty", "Occ", "Fit", "Adm", "DC")
    
    colnames(greencc_c1900) <- columns_cc
    
    greencc_c1900$Occ <- as.numeric(greencc_c1900$Occ)
    
    greencc_c1900$Occ <- paste0(as.character(round(greencc_c1900$Occ*100, 0)), "%")
    
    greencc_c1900 <- greencc_c1900 %>%
      filter(!is.na(Unit)) %>%
      mutate(Empty = cell_spec(Empty, color = "white", background = if_else(Empty == 0, "#c64040", "#56b34b", "#1b1c21"))) %>%
      select("Unit" = Unit,
             "Bed Compliment" = Compliment,
             "Empty Beds" = Empty,
             "Occupancy" = Occ,
             "No. Ward Fit" = Fit,
             "Admissions Today" = Adm,
             "Expected Discharges" = DC)
    
    greencc_c1900_table <- kable(greencc_c1900, "html", escape = F) %>%
      kable_styling(full_width = T, bootstrap_options = "condensed", position = "center", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(greencc_c1900), align = "center") %>%
      column_spec(1, bold = T, color = "white", width = "8em") %>%
      column_spec(c(2:7), background = "#edf5f9", color = "black") %>%
      row_spec(nrow(greencc_c1900), bold = T, color = "white", background = "#004709", font_size = 20)
    
    return(greencc_c1900_table)
    
  })
  
  
  output$c1900_red_adult <- renderText({
    req(input$file2)
    
    redadult_c1900 <- read_excel(input$file2$datapath, sheet = 8, range = "B29:I48", col_names = F) %>%
      select(-...1)
    
    columns_ad <- c("Unit", "Compliment", "Empty", "Occ", "Electives", "DC_Exp", "DC_Ach")
    
    colnames(redadult_c1900) <- columns_ad
    
    redadult_c1900$Occ <- as.numeric(redadult_c1900$Occ)
    
    redadult_c1900$Occ <- paste0(as.character(round(redadult_c1900$Occ*100, 0)), "%")
    
    redadult_c1900 <- redadult_c1900 %>%
      filter(!is.na(Unit)) %>%
      mutate(Empty = cell_spec(Empty, color = "white", background = if_else(Empty == 0, "#c64040", "#56b34b", "#1b1c21"))) %>%
      select("Unit" = Unit,
             "Bed Compliment" = Compliment,
             "Empty Beds" = Empty,
             "Occupancy" = Occ,
             "Electives" = Electives,
             "Discharges Expected" = DC_Exp,
             "Discharges Achieved" = DC_Ach)
    
    
    
    
    
    redadult_c1900_table <- kable(redadult_c1900, "html", escape = F) %>%
      kable_styling(full_width = T, bootstrap_options = "condensed", position = "center", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(redadult_c1900), align = "center") %>%
      column_spec(1, bold = T, color = "white", width = "8em") %>%
      column_spec(c(2:7), background = "#edf5f9", color = "black") %>%
      row_spec(nrow(redadult_c1900), bold = T, color = "white", background = "#78091b", font_size = 20)
    
    return(redadult_c1900_table)
    
  })
  
  output$c1900_green_adult <- renderText({
    req(input$file2)
    
    greenadult_c1900 <- read_excel(input$file2$datapath, sheet = 8, range = "K29:Q48", col_names = F) 
    
    columns_ad <- c("Unit", "Compliment", "Empty", "Occ", "Electives", "DC_Exp", "DC_Ach")
    
    colnames(greenadult_c1900) <- columns_ad
    
    greenadult_c1900$Occ <- as.numeric(greenadult_c1900$Occ)
    
    greenadult_c1900$Occ <- paste0(as.character(round(greenadult_c1900$Occ*100, 0)), "%")
    
    greenadult_c1900 <- greenadult_c1900 %>%
      filter(!is.na(Unit)) %>%
      mutate(Empty = cell_spec(Empty, color = "white", background = if_else(Empty == 0, "#c64040", "#56b34b", "#1b1c21"))) %>%
      select("Unit" = Unit,
             "Bed Compliment" = Compliment,
             "Empty Beds" = Empty,
             "Occupancy" = Occ,
             "Electives" = Electives,
             "Discharges Expected" = DC_Exp,
             "Discharges Achieved" = DC_Ach)
    
    greenadult_c1900_table <- kable(greenadult_c1900, "html", escape = F) %>%
      kable_styling(full_width = T, bootstrap_options = "condensed", position = "center", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(greenadult_c1900), align = "center") %>%
      column_spec(1, bold = T, color = "white", width = "8em") %>%
      column_spec(c(2:7), background = "#edf5f9", color = "black") %>%
      row_spec(nrow(greenadult_c1900), bold = T, color = "white", background = "#004709", font_size = 20)
    
    return(greenadult_c1900_table)
    
  })
  
  
  output$c1900_red_wac <- renderText({
    req(input$file2)
    
    redwac_c1900 <- read_excel(input$file2$datapath, sheet = 8, range = "C51:I58", col_names = F) 
    
    columns_ad <- c("Unit", "Compliment", "Empty", "Occ", "Electives", "DC_Exp", "DC_Ach")
    
    colnames(redwac_c1900) <- columns_ad
    
    redwac_c1900$Occ <- as.numeric(redwac_c1900$Occ)
    
    redwac_c1900$Occ <- paste0(as.character(round(redwac_c1900$Occ*100, 0)), "%")
    
    redwac_c1900 <- redwac_c1900 %>%
      filter(!is.na(Unit)) %>%
      mutate(Empty = cell_spec(Empty, color = "white", background = if_else(Empty == 0, "#c64040", "#56b34b", "#1b1c21"))) %>%
      select("Unit" = Unit,
             "Bed Compliment" = Compliment,
             "Empty Beds" = Empty,
             "Occupancy" = Occ,
             "Electives" = Electives,
             "Discharges Expected" = DC_Exp,
             "Discharges by 1pm" = DC_Ach)
    
    redwac_c1900_table <- kable(redwac_c1900, "html", escape = F) %>%
      kable_styling(full_width = T, bootstrap_options = "condensed", position = "center", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(redwac_c1900), align = "center") %>%
      column_spec(1, bold = T, color = "white", width = "8em") %>%
      column_spec(c(2:7), background = "#edf5f9", color = "black") %>%
      row_spec(nrow(redwac_c1900), bold = T, color = "white", background = "#78091b", font_size = 20)
    
    return(redwac_c1900_table)
    
  })
  
  output$c1900_green_wac <- renderText({
    req(input$file2)
    
    greenwac_c1900 <- read_excel(input$file2$datapath, sheet = 8, range = "K51:Q58", col_names = F) 
    
    columns_ad <- c("Unit", "Compliment", "Empty", "Occ", "Electives", "DC_Exp", "DC_Ach")
    
    colnames(greenwac_c1900) <- columns_ad
    
    greenwac_c1900$Occ <- as.numeric(greenwac_c1900$Occ)
    
    greenwac_c1900$Occ <- paste0(as.character(round(greenwac_c1900$Occ*100, 0)), "%")
    
    greenwac_c1900[8, 5] <- colSums(greenwac_c1900[, 5], na.rm = T)
    
    greenwac_c1900[8, 6] <- colSums(greenwac_c1900[, 6], na.rm = T)
    
    greenwac_c1900[8, 7] <- colSums(greenwac_c1900[, 7], na.rm = T)
    
    greenwac_c1900 <- greenwac_c1900 %>%
      filter(!is.na(Unit)) %>%
      mutate(Empty = cell_spec(Empty, color = "white", background = if_else(Empty == 0, "#c64040", "#56b34b", "#1b1c21"))) %>%
      select("Unit" = Unit,
             "Bed Compliment" = Compliment,
             "Empty Beds" = Empty,
             "Occupancy" = Occ,
             "Electives" = Electives,
             "Discharges Expected" = DC_Exp,
             "Discharges by 1pm" = DC_Ach)
    
    greenwac_c1900_table <- kable(greenwac_c1900, "html", escape = F) %>%
      kable_styling(full_width = T, bootstrap_options = "condensed", position = "center", font_size = 16) %>%
      row_spec(0, bold = T, align = "center", background = "#d8dfe4", color = "black") %>%
      row_spec(1:nrow(greenwac_c1900), align = "center") %>%
      column_spec(1, bold = T, color = "white", width = "8em") %>%
      column_spec(c(2:7), background = "#edf5f9", color = "black") %>%
      row_spec(nrow(greenwac_c1900), bold = T, color = "white", background = "#004709", font_size = 20)
    
    return(greenwac_c1900_table)
    
  })
  
  
  
}


shinyApp(ui, server)