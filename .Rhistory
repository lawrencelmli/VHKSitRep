colSums(flow_green[, 4], na.rm = T),
colSums(flow_green[, 5], na.rm = T),
colSums(flow_green[, 6], na.rm = T)
)
sum_flow <- rbind(red_total, green_total)
total_both <- c("Sum Total",
colSums(sum_flow[, 2]),
colSums(sum_flow[, 3]),
colSums(sum_flow[, 4]),
colSums(sum_flow[, 5]),
colSums(sum_flow[, 6])
)
rownames(sum_flow) <- NULL
View(sum_flow)
total_both <- c("Sum Total",
colSums(sum_flow[, 2]),
colSums(sum_flow[, 3]),
colSums(sum_flow[, 4]),
colSums(sum_flow[, 5]),
colSums(sum_flow[, 6])
)
class(total_both)
class(sum_flow)
sum_flow <- as.data.frame(rbind(red_total, green_total))
total_both <- c("Sum Total",
colSums(sum_flow[, 2]),
colSums(sum_flow[, 3]),
colSums(sum_flow[, 4]),
colSums(sum_flow[, 5]),
colSums(sum_flow[, 6])
)
colSums(sum_flow)
colSums(sum_flow[, 2])
colSums(sum_flow[, 3])
?rbind
sum_flow <- as.data.frame(rbind(red_total, green_total, stringAsFactors = F))
total_both <- c("Sum Total",
colSums(sum_flow[, 2]),
colSums(sum_flow[, 3]),
colSums(sum_flow[, 4]),
colSums(sum_flow[, 5]),
colSums(sum_flow[, 6])
)
colSums
colSums(flow_green)
colSums(flow_green[, -1])
colSums(flow_green[, -1], na.rm = T)
green_total <- as.data.frame(c("Green Total",
colSums(flow_green[, 2], na.rm = T),
colSums(flow_green[, 3], na.rm = T),
colSums(flow_green[, 4], na.rm = T),
colSums(flow_green[, 5], na.rm = T),
colSums(flow_green[, 6], na.rm = T)
))
green_total <- as.data.frame("Green Total",
colSums(flow_green[, 2], na.rm = T),
colSums(flow_green[, 3], na.rm = T),
colSums(flow_green[, 4], na.rm = T),
colSums(flow_green[, 5], na.rm = T),
colSums(flow_green[, 6], na.rm = T)
)
View(green_total)
View(green_total)
green_total <- data.frame("Green Total",
colSums(flow_green[, 2], na.rm = T),
colSums(flow_green[, 3], na.rm = T),
colSums(flow_green[, 4], na.rm = T),
colSums(flow_green[, 5], na.rm = T),
colSums(flow_green[, 6], na.rm = T)
)
View(green_total)
red_total <- data.frame("Red Total",
colSums(flow_red[, 2], na.rm = T),
colSums(flow_red[, 3], na.rm = T),
colSums(flow_red[, 4], na.rm = T),
colSums(flow_red[, 5], na.rm = T),
colSums(flow_red[, 6], na.rm = T)
)
flow_green <- df %>%
filter(RedZone == F) %>%
select(-7)
green_total <- data.frame("Green Total",
colSums(flow_green[, 2], na.rm = T),
colSums(flow_green[, 3], na.rm = T),
colSums(flow_green[, 4], na.rm = T),
colSums(flow_green[, 5], na.rm = T),
colSums(flow_green[, 6], na.rm = T)
)
sum_flow <- rbind(red_total, green_total, stringAsFactors = F)
sum_flow <- rbind(red_total, green_total)
sum_flow <- rbind_all(red_total, green_total)
View(green_total)
View(red_total)
sum_flow <- bind_rows(red_total, green_total)
View(sum_flow)
red_total <- data.frame(Ward = "Red Total",
COmpliment = colSums(flow_red[, 2], na.rm = T),
Empty = colSums(flow_red[, 3], na.rm = T),
Electives = colSums(flow_red[, 4], na.rm = T),
DC_Expected = colSums(flow_red[, 5], na.rm = T),
DC_Achieved = colSums(flow_red[, 6], na.rm = T)
)
green_total <- data.frame(Ward = "Green Total",
COmpliment = colSums(flow_green[, 2], na.rm = T),
Empty = colSums(flow_green[, 3], na.rm = T),
Electives = colSums(flow_green[, 4], na.rm = T),
DC_Expected = colSums(flow_green[, 5], na.rm = T),
DC_Achieved = colSums(flow_green[, 6], na.rm = T)
)
total_both <- c("Sum Total",
colSums(sum_flow[, 2]),
colSums(sum_flow[, 3]),
colSums(sum_flow[, 4]),
colSums(sum_flow[, 5]),
colSums(sum_flow[, 6])
)
sum_flow <- bind_rows(red_total, green_total)
sum_flow <- bind_rows(red_total, green_total)
total_both <- data.frame(Ward = "Green Total",
Compliment = colSums(sum_flow[, 2], na.rm = T),
Empty = colSums(sum_flow[, 3], na.rm = T),
Electives = colSums(sum_flow[, 4], na.rm = T),
DC_Expected = colSums(sum_flow[, 5], na.rm = T),
DC_Achieved = colSums(sum_flow[, 6], na.rm = T)
)
sum_flow <- bind_rows(red_total, green_total)
df <- flow_nrc
flow_nrc <- read_excel("COVIDSitRep01.xlsm", sheet = 2, range = "B18:G42", col_names = F)
colnames(flow_nrc) <- c("Ward", "Compliment", "Empty", "Electives", "DC_Expected", "DC_Achieved")
flow_nrc[8, 1] <- "22 Red"
flow_nrc[12, 1] <- "34 Red"
redzones <- c("AU1", "22 Red", "34 Red", "41", "43", "51", "53")
flow_nrc <- flow_nrc %>%
mutate("RedZone" = ifelse(Ward %in% redzones, T, F))
df <- flow_nrc
flow_red <- df %>%
filter(RedZone == T) %>%
select(-7)
red_total <- data.frame(Ward = "Red Total",
Compliment = colSums(flow_red[, 2], na.rm = T),
Empty = colSums(flow_red[, 3], na.rm = T),
Electives = colSums(flow_red[, 4], na.rm = T),
DC_Expected = colSums(flow_red[, 5], na.rm = T),
DC_Achieved = colSums(flow_red[, 6], na.rm = T)
)
flow_nrc$Empty <- as.numeric(flow_nrc$Empty)
flow_red <- df %>%
filter(RedZone == T) %>%
select(-7)
red_total <- data.frame(Ward = "Red Total",
Compliment = colSums(flow_red[, 2], na.rm = T),
Empty = colSums(flow_red[, 3], na.rm = T),
Electives = colSums(flow_red[, 4], na.rm = T),
DC_Expected = colSums(flow_red[, 5], na.rm = T),
DC_Achieved = colSums(flow_red[, 6], na.rm = T)
)
df <- flow_nrc
df$Empty <- as.numeric(df$Empty)
flow_red <- df %>%
filter(RedZone == T) %>%
select(-7)
red_total <- data.frame(Ward = "Red Total",
Compliment = colSums(flow_red[, 2], na.rm = T),
Empty = colSums(flow_red[, 3], na.rm = T),
Electives = colSums(flow_red[, 4], na.rm = T),
DC_Expected = colSums(flow_red[, 5], na.rm = T),
DC_Achieved = colSums(flow_red[, 6], na.rm = T)
)
flow_green <- df %>%
filter(RedZone == F) %>%
select(-7)
green_total <- data.frame(Ward = "Green Total",
Compliment = colSums(flow_green[, 2], na.rm = T),
Empty = colSums(flow_green[, 3], na.rm = T),
Electives = colSums(flow_green[, 4], na.rm = T),
DC_Expected = colSums(flow_green[, 5], na.rm = T),
DC_Achieved = colSums(flow_green[, 6], na.rm = T)
)
sum_flow <- bind_rows(red_total, green_total)
total_both <- data.frame(Ward = "Green Total",
Compliment = colSums(sum_flow[, 2], na.rm = T),
Empty = colSums(sum_flow[, 3], na.rm = T),
Electives = colSums(sum_flow[, 4], na.rm = T),
DC_Expected = colSums(sum_flow[, 5], na.rm = T),
DC_Achieved = colSums(sum_flow[, 6], na.rm = T)
)
colSums(sum_flow[, 2])
sum_flow[,2]
class(sum_flow[,2])
total_both <- data.frame(Ward = "Sum Total",
Compliment = colSums(sum_flow[, 2], na.rm = T),
Empty = colSums(sum_flow[, 3], na.rm = T),
Electives = colSums(sum_flow[, 4], na.rm = T),
DC_Expected = colSums(sum_flow[, 5], na.rm = T),
DC_Achieved = colSums(sum_flow[, 6], na.rm = T)
)
colSums
colSums(sum_flow[[,2]])
colSums(sum_flow[[,2]])
class(sum_flow[,2])
colSums(sum_flow[[,2]])
colSums(sum_flow[, 2])
class(sum_flow)
summarise(sum_flow)
summary(sum_flow)
View(sum_flow)
sum_flow <- rbind(red_total, green_total)
total_both <- data.frame(Ward = "Sum Total",
Compliment = colSums(sum_flow[, 2], na.rm = T),
Empty = colSums(sum_flow[, 3], na.rm = T),
Electives = colSums(sum_flow[, 4], na.rm = T),
DC_Expected = colSums(sum_flow[, 5], na.rm = T),
DC_Achieved = colSums(sum_flow[, 6], na.rm = T)
)
summary(sum_flow)
class(sum_flow)
sum(sum_flow[1,2])
sum(sum_flow[1,2], sum_flow[2,2])
colSums(sum_flow$Compliment)
df <- flow_nrc
df$Empty <- as.numeric(df$Empty)
flow_red <- df %>%
filter(RedZone == T) %>%
select(-7)
red_total <- data.frame(Ward = "Red Total",
Compliment = colSums(flow_red[, 2], na.rm = T),
Empty = colSums(flow_red[, 3], na.rm = T),
Electives = colSums(flow_red[, 4], na.rm = T),
DC_Expected = colSums(flow_red[, 5], na.rm = T),
DC_Achieved = colSums(flow_red[, 6], na.rm = T)
)
flow_green <- df %>%
filter(RedZone == F) %>%
select(-7)
green_total <- data.frame(Ward = "Green Total",
Compliment = colSums(flow_green[, 2], na.rm = T),
Empty = colSums(flow_green[, 3], na.rm = T),
Electives = colSums(flow_green[, 4], na.rm = T),
DC_Expected = colSums(flow_green[, 5], na.rm = T),
DC_Achieved = colSums(flow_green[, 6], na.rm = T)
)
sum_flow <- rbind(red_total, green_total)
total_both <- data.frame(Ward = "Sum Total",
Compliment = colSums(sum_flow[, 2], na.rm = T),
Empty = colSums(sum_flow[, 3], na.rm = T),
Electives = colSums(sum_flow[, 4], na.rm = T),
DC_Expected = colSums(sum_flow[, 5], na.rm = T),
DC_Achieved = colSums(sum_flow[, 6], na.rm = T)
)
total_both <- data.frame(Ward = "Sum Total",
Compliment = colSums(na.rm = T),
Empty = colSums(sum_flow[, 3], na.rm = T),
Electives = colSums(sum_flow[, 4], na.rm = T),
DC_Expected = colSums(sum_flow[, 5], na.rm = T),
DC_Achieved = colSums(sum_flow[, 6], na.rm = T)
)
total_both <- data.frame(Ward = "Sum Total",
Compliment = colSums(sum_flow$Compliment, na.rm = T),
Empty = colSums(sum_flow[, 3], na.rm = T),
Electives = colSums(sum_flow[, 4], na.rm = T),
DC_Expected = colSums(sum_flow[, 5], na.rm = T),
DC_Achieved = colSums(sum_flow[, 6], na.rm = T)
)
total_both <- data.frame(Ward = "Sum Total",
Compliment = colSums(sum_flow$Compliment),
Empty = colSums(sum_flow[, 3], na.rm = T),
Electives = colSums(sum_flow[, 4], na.rm = T),
DC_Expected = colSums(sum_flow[, 5], na.rm = T),
DC_Achieved = colSums(sum_flow[, 6], na.rm = T)
)
total_both <- data.frame(Ward = "Sum Total",
Compliment = sum(sum_flow[1:2, 2]),
Empty = colSums(sum_flow[, 3], na.rm = T),
Electives = colSums(sum_flow[, 4], na.rm = T),
DC_Expected = colSums(sum_flow[, 5], na.rm = T),
DC_Achieved = colSums(sum_flow[, 6], na.rm = T)
)
total_both <- data.frame(Ward = "Sum Total",
Compliment = sum(sum_flow[1:2, 2]),
Empty = sum(sum_flow[1:2, 3]),
Electives = sum(sum_flow[1:2, 4]),
DC_Expected = sum(sum_flow[1:2, 5]),
DC_Achieved = sum(sum_flow[1:2, 6])
)
sum_flow <- rbind(sum_flow, total_both)
runApp()
runApp()
runApp()
runApp()
trauma_list <- read_excel("COVIDSitRep01.xlsm", sheet = 2, range = "B44:E44", col_names = F)
trauma_list <- trauma_list[, -2]
View(df)
runApp()
wac_nrc <- read_excel("COVIDSitRep01.xlsm", sheet = 2, range = "B49:G59", col_names = F)
runApp()
runApp()
runApp()
?column_spec
runApp()
runApp()
runApp()
runApp()
au1_nrc <- read_excel("COVIDSitRep01.xlsm", sheet = 2, range = "I36:M36", col_names = F)
au2_nrc <- read_excel("COVIDSitRep01.xlsm", sheet = 2, range = "I43:M43", col_names = F)
au_nrc <- rbind(au1_nrc, au2_nrc) %>%
mutate("Ward" = c("AU 1", "AU2"))
au_nrc <- au_nrc[, c(6, 1:5)]
colnames(au_nrc) <- c("Ward", "Patients", "Required", "DC", "Ongoing", "GPTCI")
View(au_nrc)
runApp()
runApp()
runApp()
runApp()
runApp()
critcare_nrc <- read_excel("COVIDSitRep01.xlsm", sheet = 2, range = "I25:N30", col_names = F)
colnames(critcare_nrc) <- c("Ward", "Empty", "Fit", "Admissions", "Discharges", "Compliment")
cc_wards <- c("ITU Red", "ITU Green", "SHDU Green", "MHDU Red", "RHDU", "CCU/MHDU Green")
critcare_nrc[, 1] <- cc_wards
red_cc <- c("ITU Red", "MHDU Red")
critcare_nrc <- critcare_nrc %>%
mutate("Red Zone" = ifelse(Ward %in% red_cc, T, F))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
critcare_nrc <- read_excel("COVIDSitRep01.xlsm", sheet = 2, range = "I25:N30", col_names = F)
colnames(critcare_nrc) <- c("Ward", "Empty", "Fit", "Admissions", "Discharges", "Compliment")
cc_wards <- c("ITU Red", "ITU Green", "SHDU Green", "MHDU Red", "RHDU", "CCU/MHDU Green")
critcare_nrc[, 1] <- cc_wards
red_cc <- c("ITU Red", "MHDU Red")
View(critcare_nrc)
kable(critcare_nrc)
runApp()
print.kable(critcare_nrc)
print(kable(critcare_nrc))
view(kable(critcare_nrc))
runApp()
runApp()
runApp()
runApp('~/R_Projects/preop_drugs_app/PreopDrugs-master')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shinydashboardPlus)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
[Package shinydashb
ui = dashboardPagePlus(
dashboardHeaderPlus(),
dashboardSidebar(),
dashboardBody(
fluidRow(
boxPlus(
title = "Closable Box with dropdown",
closable = TRUE,
status = "warning",
solidHeader = FALSE,
collapsible = TRUE,
enable_sidebar = TRUE,
sidebar_width = 25,
sidebar_start_open = TRUE,
sidebar_content = sliderInput(
"obs",
"Number of observations:",
min = 0,
max = 1000,
value = 500
),
plotOutput("distPlot")
)
)
)
),
server = function(input, output) {
output$distPlot <- renderPlot({
hist(rnorm(input$obs))
})
}
# boxPlus with sidebar
shinyApp(
ui = dashboardPagePlus(
dashboardHeaderPlus(),
dashboardSidebar(),
dashboardBody(
fluidRow(
boxPlus(
title = "Closable Box with dropdown",
closable = TRUE,
status = "warning",
solidHeader = FALSE,
collapsible = TRUE,
enable_sidebar = TRUE,
sidebar_width = 25,
sidebar_start_open = TRUE,
sidebar_content = sliderInput(
"obs",
"Number of observations:",
min = 0,
max = 1000,
value = 500
),
plotOutput("distPlot")
)
)
)
),
server = function(input, output) {
output$distPlot <- renderPlot({
hist(rnorm(input$obs))
})
}
)
}
ui <- fluidPage(
)
shc_ed <- read_excel("COVIDSitRep01.xlsm", sheet = 1, range = "B4:E4", col_names = F)
library(tidyverse)
library(readxl)
library(stringr)
library(stringi)
setwd("D:\\Lawrence\\Documents\\R_Projects\\VHKSitRep")
shc_ed <- read_excel("COVIDSitRep01.xlsm", sheet = 1, range = "B4:E4", col_names = F)
View(shc_ed)
add_nrc <- read_excel("COVIDSitRep01.xlsm", sheet = 2, range = "I49:M52", col_names = F)
View(shc_ed)
shc_dta <- read_excel("COVIDSitRep01.xlsm", sheet = 1, range = "E3", col_names = F)
View(shc_dta)
shc_ed <- read_excel("COVIDSitRep01.xlsm", sheet = 1, range = "B3:E3", col_names = F)
View(shc_ed)
shc_ed <- select(shc_ed, 2, 4)
View(shc_dta)
View(shc_ed)
shc_ed <- select(shc_ed, total = 2, DTA = 4)
View(shc_ed)
shc_ed <- read_excel("COVIDSitRep01.xlsm", sheet = 1, range = "B3:E3", col_names = F)
shc_ed <- select(shc_ed, total = 2, DTA = 4)
shc_cc <- read_excel("COVIDSitRep01.xlsm", sheet = 1, range = "B5:G6", col_names = F)
View(shc_cc)
shc_cc <- shc_cc %>%
gather(c(1, 3, 5), key = ward)
?gather
shc_cc <- shc_cc %>%
gather(c(1, 3, 5), key = ward, value = c(2,4,6))
shc_reds <- read_excel("COVIDSitRep01.xlsm", sheet = 1, range = "D8:D9", col_names = F)
View(shc_reds)
shc_reds <- read_excel("COVIDSitRep01.xlsm", sheet = 1, range = "B8:D9", col_names = F)
View(shc_reds)
View(shc_reds)
shc_reds <- shc_reds[, -2]
View(shc_reds)
View(shc_reds)
shc_reds <- read_excel("COVIDSitRep01.xlsm", sheet = 1, range = "B8:D9", col_names = F)
shc_reds <- shc_reds[, -2]
shc_reds <- read_excel("COVIDSitRep01.xlsm", sheet = 1, range = "B8:D9", col_names = F)
shc_reds <- shc_reds[, -2]
install.packages("packrat")
update.packages(checkBuilt=TRUE, ask=FALSE)
install.packages(c("arm", "class", "foreign", "KernSmooth", "MASS", "nnet", "RcppArmadillo", "spatial", "tibble", "xml2"))
install.packages(c("class", "foreign", "KernSmooth", "MASS", "nnet", "RcppArmadillo", "spatial", "tibble", "xml2"))
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shc_augreen_occ <- read_excel("COVIDSitRep01.xlsm", sheet = 1, range = "E10", col_names = F)
View(shc_augreen_occ)
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?icon
?icon
runApp()
runApp()
runApp()
runApp()
